-- -----------------------------
-- Think MySQL Data Transfer 
-- 
-- Host     : 127.0.0.1
-- Port     : 
-- Database : liuhaier_xyz
-- 
-- Part : #1
-- Date : 2020-03-05 21:42:20
-- -----------------------------

SET FOREIGN_KEY_CHECKS = 0;


-- -----------------------------
-- Table structure for `be_admin`
-- -----------------------------
DROP TABLE IF EXISTS `be_admin`;
CREATE TABLE `be_admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(25) NOT NULL,
  `password` varchar(64) NOT NULL,
  `status` int(3) NOT NULL DEFAULT '1',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `last_time` int(11) DEFAULT NULL,
  `count` tinyint(5) DEFAULT NULL,
  `ip` varchar(20) DEFAULT NULL,
  `pic` text,
  `nickName` varchar(20) DEFAULT '0',
  `info` text COMMENT '[{"title":"asaaa","icon":"fa-github","url":"http://www.qq.com"},{"title":"asaaa","icon":"fa-qq","url":"http://www.wexin.com"}]',
  `desc` varchar(50) DEFAULT NULL,
  `del_url` varchar(255) NOT NULL,
  `forgotPass` tinyint(3) DEFAULT '0' COMMENT '1忘记密码',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=gbk ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_admin`
-- -----------------------------
INSERT INTO `be_admin` VALUES ('1', 'admin', 'a8b125fa50c69d2271f1f41d15a65b80', '1', '1538743898', '1583378086', '1583413224', '2', '117.139.132.137', 'https://i.loli.net/2020/01/07/4FdBnGSqMocwrvX.gif', '蝶！', '[\r\n{\"title\":\"Blog\",\"icon\":\"fa-home\",\"url\":\"http://blog.liuhai.fun\"},\r\n{\"title\":\"GitHub\",\"icon\":\"fa-github\",\"url\":\"https://github.com/Haiwar\"},\r\n{\"title\":\"告白墙\",\"icon\":\"fa-heart\",\"url\":\"http://love.liuhai.fun\"},\r\n{\"title\":\"互联网热榜\",\"icon\":\"fa-fire\",\"url\":\"http://new.liuhai.fun\"},\r\n{\"title\":\"Element-UI简易后台管理系统\",\"icon\":\"fa-etsy\",\"url\":\"http://element.liuhai.fun\"}\r\n]', '愿你在尘世获得幸福 ，我只愿面朝大海，春暖花开。', '', '0');
INSERT INTO `be_admin` VALUES ('36', 'test', '84386805f4fa719c7023544210fea50c', '1', '1573798063', '1582472910', '1583153943', '1', '117.139.133.12', 'https://i.loli.net/2019/06/15/5d046c17409da48073.png', 'test', '', 'test', '', '0');

-- -----------------------------
-- Table structure for `be_article`
-- -----------------------------
DROP TABLE IF EXISTS `be_article`;
CREATE TABLE `be_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `keywords` varchar(64) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `desc` mediumtext COLLATE utf8mb4_unicode_ci,
  `pic` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8mb4_unicode_ci,
  `click` int(64) DEFAULT '0' COMMENT '点赞',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `sort` int(11) DEFAULT '10000',
  `cid` int(11) DEFAULT NULL,
  `rec` tinyint(3) DEFAULT '0' COMMENT '是否推荐',
  `look` int(64) DEFAULT '0' COMMENT '浏览',
  `rec_time` int(11) DEFAULT NULL COMMENT '推荐时间',
  `like_time` int(11) DEFAULT NULL,
  `is_origin` tinyint(3) NOT NULL DEFAULT '0' COMMENT '是否原创',
  `editor` tinyint(3) DEFAULT '1' COMMENT '1百度编辑器 2wangEditor编辑器',
  `del_url` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `editor_html_code` longtext COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'makedown语法',
  `is_del` tinyint(3) unsigned DEFAULT '0',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=83 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- -----------------------------
-- Records of `be_article`
-- -----------------------------
INSERT INTO `be_article` VALUES ('20', '生成微信红包金额', '', '', '', '<h2 id=\"h2--\"><a name=\"第一步：获取随机值\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第一步：获取随机值</h2><pre><code>sum = 20+61+97+39+32+48+10+20+48+78 = 453\r\n\r\nshare1 = 20/453 = 0.04415011\r\n...\r\nshare10 = 0.17218543\r\n</code></pre><h2 id=\"h2--\"><a name=\"第二步：计算红包金额\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>第二步：计算红包金额</h2><pre><code>a1 = share1 * 100 = 0.04415011 * 100 = 4.415011\r\n...\r\na10 = share10 * 100 = 0.17218543 * 100 = 17.218543\r\n</code></pre><h2 id=\"h2-u4EE3u7801\"><a name=\"代码\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>代码</h2><pre><code class=\"lang-javascript\">$(\'#submit\').click(function(){\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  function getNextItemKey(currentKey, count) {\r\n    if (currentKey &gt; count) {\r\n      throw \'Error: currentKey &gt; count\';\r\n    }\r\n    if (currentKey != count) {\r\n      return currentKey + 1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  var count = $(\'#count\').val();\r\n  var amount = $(\'#amount\').val();\r\n  if (!count) {\r\n    alert(\'红包个数必须填写\');\r\n    return false;\r\n  }\r\n  if (!amount) {\r\n    alert(\'总金额必须填写\');\r\n    return false;\r\n  }\r\n  if (amount / count &lt; 0.01) {\r\n    alert(\'单个红包金额不可低于0.01元，请重新填写金额\');\r\n    return false;\r\n  }\r\n  amount = amount * 100;\r\n  var items = [];\r\n  for (var i = 0; i &lt; count; ++ i) {\r\n    items[i] = getRandomInt(1, 100);\r\n  }\r\n  var itemAmounts = [];\r\n  var sum = items.reduce(function(pv, cv) { return pv + cv; }, 0);\r\n  var currentAmount = 0;\r\n  for (var i = 0; i &lt; count; ++ i) {\r\n    if (i !== count - 1) {\r\n      itemAmounts[i] = Math.floor(items[i] / sum * amount);\r\n      currentAmount += itemAmounts[i];\r\n    } else {\r\n      itemAmounts[i] = amount - currentAmount\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i &lt; count; ++ i ) {\r\n    if (itemAmounts[i] &gt; 0) {\r\n      continue;\r\n    }\r\n    var nextKey = getNextItemKey(i, count);\r\n    var diff = 1 - itemAmounts[i];\r\n    itemAmounts[i] = 1;\r\n    itemAmounts[nextKey] -= diff;\r\n  }\r\n\r\n  for (var i = 0; i &lt; count; ++ i ) {\r\n    itemAmounts[i] = itemAmounts[i] / 100;\r\n  }\r\n\r\n  alert(itemAmounts.join(\'元\'));\r\n\r\n});\r\n</code></pre>\r\n', '1', '1566489351', '1582340970', '10000', '51', '0', '251', '0', '1566704382', '0', '1', 'https://sm.ms/delete/IrRwv6P5xQY4HlsCMthUnTW3D2', '## 第一步：获取随机值\r\n\r\n```\r\nsum = 20+61+97+39+32+48+10+20+48+78 = 453\r\n\r\nshare1 = 20/453 = 0.04415011\r\n...\r\nshare10 = 0.17218543\r\n```\r\n\r\n## 第二步：计算红包金额\r\n\r\n```\r\na1 = share1 * 100 = 0.04415011 * 100 = 4.415011\r\n...\r\na10 = share10 * 100 = 0.17218543 * 100 = 17.218543\r\n```\r\n\r\n## 代码\r\n\r\n```javascript\r\n$(\'#submit\').click(function(){\r\n  function getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  function getNextItemKey(currentKey, count) {\r\n    if (currentKey > count) {\r\n      throw \'Error: currentKey > count\';\r\n    }\r\n    if (currentKey != count) {\r\n      return currentKey + 1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n  \r\n  var count = $(\'#count\').val();\r\n  var amount = $(\'#amount\').val();\r\n  if (!count) {\r\n    alert(\'红包个数必须填写\');\r\n    return false;\r\n  }\r\n  if (!amount) {\r\n    alert(\'总金额必须填写\');\r\n    return false;\r\n  }\r\n  if (amount / count < 0.01) {\r\n    alert(\'单个红包金额不可低于0.01元，请重新填写金额\');\r\n    return false;\r\n  }\r\n  amount = amount * 100;\r\n  var items = [];\r\n  for (var i = 0; i < count; ++ i) {\r\n    items[i] = getRandomInt(1, 100);\r\n  }\r\n  var itemAmounts = [];\r\n  var sum = items.reduce(function(pv, cv) { return pv + cv; }, 0);\r\n  var currentAmount = 0;\r\n  for (var i = 0; i < count; ++ i) {\r\n    if (i !== count - 1) {\r\n      itemAmounts[i] = Math.floor(items[i] / sum * amount);\r\n      currentAmount += itemAmounts[i];\r\n    } else {\r\n      itemAmounts[i] = amount - currentAmount\r\n    }\r\n  }\r\n  \r\n  for (var i = 0; i < count; ++ i ) {\r\n    if (itemAmounts[i] > 0) {\r\n      continue;\r\n    }\r\n    var nextKey = getNextItemKey(i, count);\r\n    var diff = 1 - itemAmounts[i];\r\n    itemAmounts[i] = 1;\r\n    itemAmounts[nextKey] -= diff;\r\n  }\r\n  \r\n  for (var i = 0; i < count; ++ i ) {\r\n    itemAmounts[i] = itemAmounts[i] / 100;\r\n  }\r\n  \r\n  alert(itemAmounts.join(\'元\'));\r\n  \r\n});\r\n\r\n```', '0');
INSERT INTO `be_article` VALUES ('23', '通过时间戳获取天、时、分钟', 'php,时间戳', '比如我输入“1天10小时10分钟”，存入数据库的就是“13200”', 'https://images.pexels.com/photos/1037993/pexels-photo-1037993.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260', '<pre><code class=\"lang-php\">/**\r\n * str_pad 补零\r\n * @return array\r\n */\r\nfunction setTime($sec){\r\n    $_seconds = intval($sec);\r\n    $seconds = str_pad($_seconds%60,2,\'0\',STR_PAD_LEFT);\r\n    $_mins = intval($_seconds/60);\r\n    $_hours = intval($_mins/60);\r\n    $hours = str_pad($_hours%24,2,\'0\',STR_PAD_LEFT);\r\n    $day = str_pad(intval($_hours/24),2,\'0\',STR_PAD_LEFT);\r\n    $mins = str_pad($_mins%60,2,\'0\',STR_PAD_LEFT);\r\n    return [$day,$hours,$mins,$seconds];\r\n}\r\n</code></pre>\r\n', '1', '1567048461', '1582340953', '10000', '52', '0', '182', '0', '1570969989', '0', '1', '', '```php\r\n/**\r\n * str_pad 补零\r\n * @return array\r\n */\r\nfunction setTime($sec){\r\n    $_seconds = intval($sec);\r\n    $seconds = str_pad($_seconds%60,2,\'0\',STR_PAD_LEFT);\r\n    $_mins = intval($_seconds/60);\r\n    $_hours = intval($_mins/60);\r\n    $hours = str_pad($_hours%24,2,\'0\',STR_PAD_LEFT);\r\n    $day = str_pad(intval($_hours/24),2,\'0\',STR_PAD_LEFT);\r\n    $mins = str_pad($_mins%60,2,\'0\',STR_PAD_LEFT);\r\n    return [$day,$hours,$mins,$seconds];\r\n}\r\n```', '0');
INSERT INTO `be_article` VALUES ('24', '推荐最良心的十大网站！', '网站,虎扑', '最良心十大网站！马来人你过来呀~', '', '<ol>\r\n<li><p>视频片头动画模板 <a href=\"https://panzoid.com/\">https://panzoid.com/</a></p>\r\n</li><li><p>在线抠图 <a href=\"https://www.remove.bg/\">https://www.remove.bg/</a></p>\r\n</li><li><p>字体下载 <a href=\"https://www.zitijia.com/\">https://www.zitijia.com/</a></p>\r\n</li><li><p>p站 （二次元插画网站） <a href=\"https://www.pixiv.net/\">https://www.pixiv.net/</a></p>\r\n</li><li><p>论文下载 <a href=\"https://www.cn-ki.net/\">https://www.cn-ki.net/</a></p>\r\n</li><li><p>文档格式在线转换 <a href=\"https://smallpdf.com/\">https://smallpdf.com/</a></p>\r\n</li><li><p>录屏投屏 <a href=\"http://web.airdroid.com/\">http://web.airdroid.com/</a></p>\r\n</li><li><p>各大网站热榜 <a href=\"https://tophub.today/\">https://tophub.today/</a></p>\r\n</li><li><p>超清图片壁纸 <a href=\"https://www.pexels.com/\">https://www.pexels.com/</a></p>\r\n</li><li><p>找网站的网站 <a href=\"http://www.addog.vip/\">http://www.addog.vip/</a></p>\r\n</li></ol>\r\n', '2', '1567491675', '0', '10000', '35', '0', '169', '0', '1569724595', '0', '1', 'https://sm.ms/delete/pIuMGv8KA5hoUn93PgJOwbrZzV', '1. 视频片头动画模板 https://panzoid.com/\r\n\r\n2. 在线抠图 https://www.remove.bg/\r\n\r\n3. 字体下载 https://www.zitijia.com/\r\n\r\n4. p站 （二次元插画网站） https://www.pixiv.net/\r\n\r\n5. 论文下载 https://www.cn-ki.net/\r\n\r\n6. 文档格式在线转换 https://smallpdf.com/\r\n\r\n7. 录屏投屏 http://web.airdroid.com/\r\n\r\n8. 各大网站热榜 https://tophub.today/\r\n\r\n9. 超清图片壁纸 https://www.pexels.com/\r\n\r\n10. 找网站的网站 http://www.addog.vip/', '0');
INSERT INTO `be_article` VALUES ('29', 'javascript – 从对象数组中,将属性的值提取为数组', '数组,js', '用来取数组某个字段的方法', '', '<p>我有javascript对象数组：</p>\r\n<pre><code class=\"lang-js\">objArray = [ { foo: 1, bar: 2}, { foo: 3, bar: 4}, { foo: 5, bar: 6} ];\r\n</code></pre>\r\n<p>我想获得所有的值foo作为数组[1，3，5]。</p>\r\n<p>有明显的手动方式：</p>\r\n<pre><code class=\"lang-js\">function getFields(input, field) {\r\n    var output = [];\r\n    for (var i=0; i &lt; input.length ; ++i)\r\n        output.push(input[i][field]);\r\n    return output;\r\n}\r\n\r\nvar result = getFields(objArray, &quot;foo&quot;); // returns [ 1, 3, 5 ]\r\n</code></pre>\r\n<p>是否有“更好”(更短，更有效和/或更惯用)的方式？</p>\r\n<p>注意suggested duplicate，该问题询问如何将对象转换为和数组，这个问题询问如何从对象数组中提取单个字段。</p>\r\n<hr>\r\n<p>是的，但它依赖于JavaScript的更新的功能。这意味着它不会在IE8或更旧的工作。</p>\r\n<pre><code class=\"lang-js\">var result = objArray.map(function(a) {return a.foo;});\r\n</code></pre>\r\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">Documentation</a></p>\r\n<p>转载：<a href=\"https://codeday.me/bug/20170426/12102.html\">代码日志</a></p>\r\n', '0', '1568105317', '0', '10000', '51', '0', '123', '0', '0', '0', '1', 'https://sm.ms/delete/xpyHorGP5Iid3ke4gUzlB8LXA1', '我有javascript对象数组：\r\n\r\n```js\r\nobjArray = [ { foo: 1, bar: 2}, { foo: 3, bar: 4}, { foo: 5, bar: 6} ];\r\n```\r\n我想获得所有的值foo作为数组[1，3，5]。\r\n\r\n有明显的手动方式：\r\n```js\r\nfunction getFields(input, field) {\r\n    var output = [];\r\n    for (var i=0; i < input.length ; ++i)\r\n        output.push(input[i][field]);\r\n    return output;\r\n}\r\n\r\nvar result = getFields(objArray, \"foo\"); // returns [ 1, 3, 5 ]\r\n```\r\n是否有“更好”(更短，更有效和/或更惯用)的方式？\r\n\r\n注意suggested duplicate，该问题询问如何将对象转换为和数组，这个问题询问如何从对象数组中提取单个字段。\r\n\r\n---\r\n\r\n是的，但它依赖于JavaScript的更新的功能。这意味着它不会在IE8或更旧的工作。\r\n```js\r\nvar result = objArray.map(function(a) {return a.foo;});\r\n```\r\n[Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\r\n\r\n转载：[代码日志](https://codeday.me/bug/20170426/12102.html)', '0');
INSERT INTO `be_article` VALUES ('30', '工作中常用的js公共方法', 'js公共方法', '', '', '<h3 id=\"h3--url-\"><a name=\"获取url问号后面的参数\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>获取url问号后面的参数</h3><pre><code class=\"lang-js\">function getQueryString(variable) {\r\n  var query = window.location.href.split(\"?\")[1];\r\n  if (query) {\r\n    var vars = query.split(\"&amp;\");\r\n    for (var i = 0; i &lt; vars.length; i++) {\r\n      var pair = vars[i].split(\"=\");\r\n      if (pair[0] == variable) {\r\n        return pair[1];\r\n      }\r\n    }\r\n  }\r\n}\r\n</code></pre>\r\n<pre><code>function parseQuery() {\r\n  var query = {};\r\n  var href = window.location.href;\r\n  var index = href.indexOf(\"?\");\r\n  if (index !== -1) {\r\n    var queryArr = href.slice(index + 1).split(\"&amp;\");\r\n    for (var i = 0, len = queryArr.length; i &lt; len; i++) {\r\n      var arr = queryArr[i].split(\"=\");\r\n      if (arr.length === 2) query[arr[0]] = String(arr[1]);\r\n    }\r\n    if (query.prefix) query.prefix = decodeURIComponent(query.prefix);\r\n    // console.log(query);\r\n  }\r\n  return query;\r\n}\r\n</code></pre><h3 id=\"h3-u83B7u53D6u5217u8868u67D0u4E2Au5B57u6BB5\"><a name=\"获取列表某个字段\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>获取列表某个字段</h3><pre><code>function getFields(input, field) {\r\n  var output = [];\r\n  for (var i = 0; i &lt; input.length; ++i) output.push(input[i][field]);\r\n  return output;\r\n}\r\n</code></pre><h3 id=\"h3-u622Au53D6u65F6u95F4u6233\"><a name=\"截取时间戳\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>截取时间戳</h3><pre><code>function timeRange(time) {\r\n  let timeRange = time ? time.split(\"~\") : [];\r\n  let start = timeRange ? timeRange[0] : \"\";\r\n  let end = timeRange ? timeRange[1] : \"\";\r\n  return [start, end];\r\n}\r\n</code></pre><h3 id=\"h3--url\"><a name=\"解析浏览器上的url\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>解析浏览器上的url</h3><blockquote>\r\n<p>decodeURIComponent</p>\r\n</blockquote>\r\n<pre><code>var href = decodeURIComponent(window.location.href);\r\n</code></pre><h3 id=\"h3-u83B7u53D6u4E8Cu7EF4u6570u7EC4u4E0Bu9762u7684u67D0u4E2Au952Eu91CCu9762u7684u503C\"><a name=\"获取二维数组下面的某个键里面的值\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>获取二维数组下面的某个键里面的值</h3><p>结果：</p>\r\n<pre><code class=\"lang-json\">[\r\n    { Q:123,R:101,lng:103.55,lat:34.55 },\r\n    ...\r\n]\r\n</code></pre>\r\n<p>期望结果：</p>\r\n<pre><code class=\"lang-json\">[\r\n    { lng:103.55,lat:34.55 },\r\n    ...\r\n]\r\n</code></pre>\r\n<pre><code class=\"lang-js\">function jsonFun(data) {\r\n  let output = [];\r\n  data.forEach(obj =&gt; {\r\n    let temp_obj = {\r\n      lng: obj[\"lng\"],\r\n      lat: obj[\"lat\"]\r\n    };\r\n    output.push(temp_obj);\r\n  });\r\n  //数组转json字符串\r\n  return JSON.stringify(output);\r\n}\r\n</code></pre>\r\n<h3 id=\"h3-u5012u8BA1u65F6\"><a name=\"倒计时\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>倒计时</h3><pre><code>setInterval(function(){\r\n    var time=new Date();\r\n    var year=time.getFullYear();\r\n    var month=time.getMonth()+1;\r\n    var day=time.getDate();\r\n    var hour=checkTime(time.getHours());\r\n    var minite=checkTime(time.getMinutes());\r\n    function checkTime(i){\r\n        if(i&lt;10) return \"0\"+i;\r\n        return i;\r\n    }\r\n    var box=document.getElementById(\"nowtime\");\r\n    box.innerHTML=year+\"-\"+month+\"-\"+day+\" \"+hour+\":\"+minite;\r\n},6000);\r\n</code></pre><h3 id=\"h3--js-\"><a name=\"向js文件传值\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>向js文件传值</h3><pre><code>&lt;script src=\"../about.js\" hiddenComment=\"true\"&gt;&lt;/script&gt;\r\n</code></pre><p>about.js</p>\r\n<pre><code>var script=document.getElementsByTagName(\"script\");\r\n//获取最后一个js文件\r\nvar endScript = script[script.length-1]\r\n\r\nvar hiddenComment= endScript.getAttribute(\"hiddenComment\");\r\n\r\nconsole.log(hiddenComment)\r\n</code></pre>', '3', '1568174672', '1583309948', '10000', '51', '0', '412', '0', '1571020946', '0', '1', 'https://sm.ms/delete/mLQcEOi1Sw8MupFdaPNgKRr5hv', '### 获取url问号后面的参数\r\n\r\n```js\r\nfunction getQueryString(variable) {\r\n  var query = window.location.href.split(\"?\")[1];\r\n  if (query) {\r\n    var vars = query.split(\"&\");\r\n    for (var i = 0; i < vars.length; i++) {\r\n      var pair = vars[i].split(\"=\");\r\n      if (pair[0] == variable) {\r\n        return pair[1];\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```\r\nfunction parseQuery() {\r\n  var query = {};\r\n  var href = window.location.href;\r\n  var index = href.indexOf(\"?\");\r\n  if (index !== -1) {\r\n    var queryArr = href.slice(index + 1).split(\"&\");\r\n    for (var i = 0, len = queryArr.length; i < len; i++) {\r\n      var arr = queryArr[i].split(\"=\");\r\n      if (arr.length === 2) query[arr[0]] = String(arr[1]);\r\n    }\r\n    if (query.prefix) query.prefix = decodeURIComponent(query.prefix);\r\n    // console.log(query);\r\n  }\r\n  return query;\r\n}\r\n```\r\n\r\n### 获取列表某个字段\r\n```\r\nfunction getFields(input, field) {\r\n  var output = [];\r\n  for (var i = 0; i < input.length; ++i) output.push(input[i][field]);\r\n  return output;\r\n}\r\n```\r\n\r\n### 截取时间戳\r\n```\r\nfunction timeRange(time) {\r\n  let timeRange = time ? time.split(\"~\") : [];\r\n  let start = timeRange ? timeRange[0] : \"\";\r\n  let end = timeRange ? timeRange[1] : \"\";\r\n  return [start, end];\r\n}\r\n```\r\n\r\n### 解析浏览器上的url\r\n\r\n> decodeURIComponent\r\n\r\n```\r\nvar href = decodeURIComponent(window.location.href);\r\n```\r\n\r\n### 获取二维数组下面的某个键里面的值\r\n\r\n结果：\r\n\r\n```json\r\n[\r\n    { Q:123,R:101,lng:103.55,lat:34.55 },\r\n    ...\r\n]\r\n```\r\n\r\n期望结果：\r\n\r\n```json\r\n[\r\n    { lng:103.55,lat:34.55 },\r\n    ...\r\n]\r\n```\r\n\r\n```js\r\nfunction jsonFun(data) {\r\n  let output = [];\r\n  data.forEach(obj => {\r\n    let temp_obj = {\r\n      lng: obj[\"lng\"],\r\n      lat: obj[\"lat\"]\r\n    };\r\n    output.push(temp_obj);\r\n  });\r\n  //数组转json字符串\r\n  return JSON.stringify(output);\r\n}\r\n```\r\n\r\n### 倒计时\r\n\r\n```\r\nsetInterval(function(){\r\n    var time=new Date();\r\n    var year=time.getFullYear();\r\n    var month=time.getMonth()+1;\r\n    var day=time.getDate();\r\n    var hour=checkTime(time.getHours());\r\n    var minite=checkTime(time.getMinutes());\r\n    function checkTime(i){\r\n        if(i<10) return \"0\"+i;\r\n        return i;\r\n    }\r\n    var box=document.getElementById(\"nowtime\");\r\n    box.innerHTML=year+\"-\"+month+\"-\"+day+\" \"+hour+\":\"+minite;\r\n},6000);\r\n```\r\n\r\n### 向js文件传值\r\n\r\n```\r\n<script src=\"../about.js\" hiddenComment=\"true\"></script>\r\n```\r\n\r\nabout.js\r\n\r\n```\r\nvar script=document.getElementsByTagName(\"script\");\r\n//获取最后一个js文件\r\nvar endScript = script[script.length-1]\r\n\r\nvar hiddenComment= endScript.getAttribute(\"hiddenComment\");\r\n\r\nconsole.log(hiddenComment)\r\n\r\n```', '0');
INSERT INTO `be_article` VALUES ('41', '一个PHP实现的验证码库并生成文件记录', 'php,验证码,github', '', '', '<p><a href=\"https://github.com/lifei6671/php-captcha\"><img src=\"https://camo.githubusercontent.com/514abce7f4f4e57ca8e353bccf57968572abe342/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7675652e737667\" alt=\"Build Status\"></p>\r\n<h1 id=\"h1-php-\"><a name=\"PHP生成验证码图片\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>PHP生成验证码图片</h1><p>PHP生成验证码的原理：使用PHP的GD库，生成一张带验证码的图片，并将验证码保存在Session中。PHP生成验证码的大致流程有：</p>\r\n<p>1、产生一张png的图片；<br>2、为图片设置背景色；<br>3、设置字体颜色和样式；<br>4、产生指定位数的随机的验证码；<br>5、把产生的每个字符调整旋转角度和位置画到png图片上；<br>6、加入噪点和干扰线防止注册机器分析原图片来恶意破解验证码；<br>7、输出图片；<br>8、释放图片所占内存。\r\n<h1 id=\"h1-u5B89u88C5u5B8Cu6210u4E4Bu540E\"><a name=\"安装完成之后\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>安装完成之后</h1><h3 id=\"h3-index-php\"><a name=\"index.php\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>index.php</h3><pre><code class=\"lang-php\">&lt;?php\r\nrequire \'vendor/autoload.php\';\r\ndefined(\'DIR_FILE\') or define(\'DIR_FILE\', dirname(__FILE__));\r\nuse Minho\\Captcha\\CaptchaBuilder;\r\n\r\n//session_start();\r\n$captch = new CaptchaBuilder();\r\n\r\n$captch-&gt;initialize([\r\n    \'width\' =&gt; 150,     // 宽度\r\n    \'height\' =&gt; 50,     // 高度\r\n    \'line\' =&gt; false,    // 直线\r\n    \'curve\' =&gt; true,    // 曲线\r\n    \'noise\' =&gt; 1,       // 噪点背景\r\n    \'fonts\' =&gt; []       // 字体\r\n]);\r\n\r\n$captch-&gt;create();\r\n$captch-&gt;output(1);\r\n$content = [\r\n    \'overtime\' =&gt; time() + 180,\r\n    \'captcha\' =&gt; $captch-&gt;getText()\r\n];\r\nfile_put_contents(DIR_FILE.\'/file/1.captcha\', json_encode($content));\r\n//$_SESSION[\'captch\'] = $captch-&gt;getText();//存入session\r\n</code></pre>\r\n<h3 id=\"h3-getcontent-php\"><a name=\"getContent.php\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>getContent.php</h3><pre><code class=\"lang-php\">&lt;?php\r\ndefined(\'DIR_FILE\') or define(\'DIR_FILE\', dirname(__FILE__));\r\n//session_start();\r\n//echo $_SESSION[\'captch\'];\r\n\r\n$c = file_get_contents(DIR_FILE.\'/file/1.captcha\');\r\n$a = json_decode($c,true);\r\nprint_r($a);\r\n</code></pre>\r\n', '0', '1571044194', '1571232299', '10000', '52', '0', '181', '0', '0', '0', '1', '', '<a href=\"https://github.com/lifei6671/php-captcha\"><img src=\"https://camo.githubusercontent.com/514abce7f4f4e57ca8e353bccf57968572abe342/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f7675652e737667\" alt=\"Build Status\"></a>\r\n\r\n\r\n# PHP生成验证码图片\r\n\r\nPHP生成验证码的原理：使用PHP的GD库，生成一张带验证码的图片，并将验证码保存在Session中。PHP生成验证码的大致流程有：\r\n\r\n1、产生一张png的图片；\r\n2、为图片设置背景色；\r\n3、设置字体颜色和样式；\r\n4、产生指定位数的随机的验证码；\r\n5、把产生的每个字符调整旋转角度和位置画到png图片上；\r\n6、加入噪点和干扰线防止注册机器分析原图片来恶意破解验证码；\r\n7、输出图片；\r\n8、释放图片所占内存。\r\n\r\n# 安装完成之后\r\n\r\n### index.php\r\n\r\n```php\r\n<?php\r\nrequire \'vendor/autoload.php\';\r\ndefined(\'DIR_FILE\') or define(\'DIR_FILE\', dirname(__FILE__));\r\nuse Minho\\Captcha\\CaptchaBuilder;\r\n\r\n//session_start();\r\n$captch = new CaptchaBuilder();\r\n\r\n$captch->initialize([\r\n    \'width\' => 150,     // 宽度\r\n    \'height\' => 50,     // 高度\r\n    \'line\' => false,    // 直线\r\n    \'curve\' => true,    // 曲线\r\n    \'noise\' => 1,       // 噪点背景\r\n    \'fonts\' => []       // 字体\r\n]);\r\n\r\n$captch->create();\r\n$captch->output(1);\r\n$content = [\r\n    \'overtime\' => time() + 180,\r\n    \'captcha\' => $captch->getText()\r\n];\r\nfile_put_contents(DIR_FILE.\'/file/1.captcha\', json_encode($content));\r\n//$_SESSION[\'captch\'] = $captch->getText();//存入session\r\n\r\n```\r\n\r\n### getContent.php\r\n\r\n```php\r\n<?php\r\ndefined(\'DIR_FILE\') or define(\'DIR_FILE\', dirname(__FILE__));\r\n//session_start();\r\n//echo $_SESSION[\'captch\'];\r\n\r\n$c = file_get_contents(DIR_FILE.\'/file/1.captcha\');\r\n$a = json_decode($c,true);\r\nprint_r($a);\r\n```', '0');
INSERT INTO `be_article` VALUES ('42', '你可能会用到的PHP算法&数据结构', '算法,PHP,数组,递归', '', '', '<h3 id=\"h3-1-id-\"><a name=\"1. 数组关联id结合\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1. 数组关联id结合</h3><p>有评论的list和回复的list，其中回复的id等于评论的mid；通过这两个关联，让回复的list放在评论某个数组里面。</p>\r\n<pre><code>private function comment_and_reply($comment_list,$reply_list){\r\n    foreach($comment_list as &amp;$v) {\r\n        $v[\'replay\'] = [];\r\n        foreach ($reply_list as $vv){\r\n            if ($v[\'id\'] == $vv[\'mid\']){\r\n                array_push($v[\'replay\'], $vv);\r\n            }\r\n        }\r\n    }\r\n    unset($v);\r\n    return $comment_list;\r\n}\r\n</code></pre><h3 id=\"h3-2-\"><a name=\"2. 递归；通过自己找到儿子\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2. 递归；通过自己找到儿子</h3><pre><code>public function getchildrenid($table,$cid){\r\n    $table_res=db($table)-&gt;select();\r\n    if($table_res){\r\n        return $this-&gt;_getchildrenid($table_res,$cid);\r\n    }\r\n}\r\nprivate function _getchildrenid($table_res,$cid){\r\n    static $arr=array();\r\n    foreach($table_res as $k=&gt;$v){\r\n        if($v[\'pid\'] == $cid){\r\n            $arr[]=$v[\'id\'];\r\n            //防止无下限循环\r\n            $this-&gt;_getchildrenid($table_res,$v[\'id\']);\r\n        }\r\n    }\r\n    return $arr;\r\n}\r\n</code></pre><h3 id=\"h3-3-selection-sort-\"><a name=\"3. 选择排序（Selection Sort）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3. 选择排序（Selection Sort）</h3><p>选择出数组中的最小元素，将它与数组的第一个元素交换位置。再从剩下的元素中选择出最小的元素，将它与数组的第二个元素交换位置。不断进行这样的操作，直到将整个数组排序。</p>\r\n<p><img src=\"https://camo.githubusercontent.com/f6e0486dbb74ecc8d74a6c72d1c0884951ceaa98/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353232343731393539302d313433333231393832342e676966\" alt=\"\">\r\n<pre><code>/**\r\n * 选择排序  每次选取最小的一个数字与当前数字交换\r\n * @param $arr\r\n * @return array\r\n */\r\nfunction selectSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 0; $i &lt; $len; $i++) {\r\n        // 最小下标\r\n        $minIndex = $i;\r\n        for ($j = $i + 1; $j &lt; $len; $j++) {\r\n            if ($arr[$j] &lt; $arr[$minIndex]) {\r\n                // 选取最小数字的下标\r\n                $minIndex = $j;\r\n            }\r\n        }\r\n\r\n        // 如果最小数字的下标等于当前下标，继续循环\r\n        if ($minIndex == $i) {\r\n            continue;\r\n        }\r\n\r\n        // 交换数据\r\n        $temp = $arr[$i];\r\n        $arr[$i] = $arr[$minIndex];\r\n        $arr[$minIndex] = $temp;\r\n    }\r\n\r\n    return $arr;\r\n}\r\n</code></pre><h3 id=\"h3-4-insertion-sort-\"><a name=\"4. 插入排序（Insertion Sort）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4. 插入排序（Insertion Sort）</h3><p>插入排序从左到右进行，每次都将当前元素插入到左侧已经排序的数组中，使得插入之后左部数组依然有序。</p>\r\n<p>第 j 元素是通过不断向左比较并交换来实现插入过程：当第 j 元素小于第 j - 1 元素，就将它们的位置交换，然后令 j 指针向左移动一个位置，不断进行以上操作。</p>\r\n<p><img src=\"https://camo.githubusercontent.com/5e6dcf3d502a864805ecd49fefac164dd91e4b49/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353232353634353237372d313135313130303030302e676966\" alt=\"\">\r\n<pre><code>//插入排序\r\nfunction insertSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 1; $i &lt; $len; $i++) {\r\n        // 当前数字(刚抓的扑克牌)\r\n        $curr = $arr[$i];\r\n        for ($j = $i - 1; $j &gt;= 0; $j--) {\r\n            // 当前数字如果单元前面一个的时候直接结束循环，因为前面的已经排好了\r\n            if ($curr &gt; $arr[$j]) {\r\n                break;\r\n            }\r\n            // 前面所有数字往后移动\r\n            $arr[$j + 1] = $arr[$j];\r\n        }\r\n\r\n        // 因为上面循环最后$j--了，所以这里把$j\r\n        $arr[$j + 1] = $curr;\r\n    }\r\n\r\n    return $arr;\r\n}\r\n</code></pre><h3 id=\"h3-5-bubble-sort-\"><a name=\"5.冒泡排序（Bubble Sort）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5.冒泡排序（Bubble Sort）</h3><p>通过从左到右不断交换相邻逆序的相邻元素，在一轮的交换之后，可以让未排序的元素上浮到右侧。</p>\r\n<p>在一轮循环中，如果没有发生交换，就说明数组已经是有序的，此时可以直接退出。</p>\r\n<p><img src=\"https://camo.githubusercontent.com/adaf3658c694ce232520c3f2b677b3273e0e6c1a/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353232333233383434392d323134363136393139372e676966\" alt=\"\">\r\n<pre><code>function bubbleSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 标识位\r\n    $flag = false;\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 0; $i &lt; $len; $i++) {\r\n        for ($j = 0; $j &lt; $len - 1 - $i; $j++) {\r\n            if ($arr[$j] &gt; $arr[$j + 1]) {\r\n                $temp = $arr[$j];\r\n                $arr[$j] = $arr[$j + 1];\r\n                $arr[$j + 1] = $temp;\r\n                $flag = true;\r\n            }\r\n        }\r\n        if (!$flag) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return $arr;\r\n}\r\n</code></pre><h3 id=\"h3-6-shell-sort-\"><a name=\"6. 希尔排序（Shell Sort）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>6. 希尔排序（Shell Sort）</h3><p>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：</p>\r\n<ul>\r\n<li>选择一个增量序列t1，t2，…，tk，其中ti&gt;tj，tk=1；</li><li>按增量序列个数k，对序列进行k 趟排序；</li><li>每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。</li></ul>\r\n<p><img src=\"https://camo.githubusercontent.com/fda52e27af7d3624e110e94109c28fd27fa44871/68747470733a2f2f696d61676573323031382e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313830332f3834393538392d32303138303333313137303031373432312d3336343530363037332e676966\" alt=\"\">\r\n<pre><code>&lt;?php\r\nfunction shellSort($arr) {\r\n    $len = count($arr);\r\n    for ($gap = floor($len / 2); $gap &gt; 0; $gap = floor($gap / 2)) {\r\n        for($i = $gap; $i &lt; $len; $i++) {\r\n            for($j = $i - $gap; $j &gt;= 0; $j -= $gap) {\r\n                if ($arr[$j + $gap] &lt; $arr[$j]) {\r\n                    $temp = $arr[$j];\r\n                    $arr[$j] = $arr[$j+$gap];\r\n                    $arr[$j + $gap] = $temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return $arr;\r\n}\r\n// 测试\r\n$arr = range(1, 10);\r\nshuffle($arr);\r\necho \"排序前：\";\r\nprint_r($arr);\r\necho \"&lt;/br&gt;\";\r\necho \"排序后：\";\r\n$res = shellSort($arr);\r\nprint_r($res);\r\n</code></pre><h3 id=\"h3-7-merge-sort-\"><a name=\"7. 归并排序（Merge Sort）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>7. 归并排序（Merge Sort）</h3><p>归并排序的思想是将数组分成两部分，分别进行排序，然后归并起来。把长度为n的输入序列分成两个长度为n/2的子序列；对这两个子序列分别采用归并排序；将两个排序好的子序列合并成一个最终的排序序列。</p>\r\n<p><img src=\"https://camo.githubusercontent.com/207472a2903254f1706938a09fc3fa854ad23273/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353233303535373034332d33373337353031302e676966\" alt=\"\">\r\n<pre><code>//归并排序\r\nfunction mergeSort(&amp;$arr, $left, $right) {\r\n\r\n    if(empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    if ($left &lt; $right) {\r\n        // 找出中间索引\r\n        $mid = floor(($left + $right) / 2);\r\n        // 对左边数组进行递归\r\n        mergeSort($arr, $left, $mid);\r\n        // 对右边数组进行递归\r\n        mergeSort($arr, $mid + 1, $right);\r\n        // 合并\r\n        merge($arr, $left, $mid, $right);\r\n    }\r\n}\r\n\r\n// 将两个有序数组合并成一个有序数组\r\nfunction merge(&amp;$arr, $left, $mid, $right) {\r\n    $i = $left;     // 左数组的下标\r\n    $j = $mid + 1;  // 右数组的下标\r\n    $temp = array();// 临时合并数组\r\n    // 扫描第一段和第二段序列，直到有一个扫描结束\r\n    while ($i &lt;= $mid &amp;&amp; $j &lt;= $right) {\r\n        // 判断第一段和第二段取出的数哪个更小，将其存入合并序列，并继续向下扫描\r\n        if ($arr[$i] &lt; $arr[$j]) {\r\n            $temp[] = $arr[$i];\r\n            $i++;\r\n        } else {\r\n            $temp[] = $arr[$j];\r\n            $j++;\r\n        }\r\n    }\r\n    // 比完之后，假如左数组仍有剩余，则直接全部复制到 temp 数组\r\n    while ($i &lt;= $mid) {\r\n        $temp[] = $arr[$i];\r\n        $i++;\r\n    }\r\n    // 比完之后，假如右数组仍有剩余，则直接全部复制到 temp 数组\r\n    while ($j &lt;= $right) {\r\n        $temp[] = $arr[$j];\r\n        $j++;\r\n    }\r\n    // 将合并序列复制到原始序列中\r\n    for($k = 0; $k &lt; count($temp); $k++) {\r\n        $arr[$left + $k] = $temp[$k];\r\n    }\r\n}\r\n$arr= [\"2\",\"3\",\"5\",\"47\",\"21\",\"22\",\"4\",\"30\",\"148\",\"121\",\"50\"];\r\nmergeSort($arr, 0, count($arr) - 1);\r\nprint_r($arr);\r\n</code></pre><h3 id=\"h3-8-quick-sort-\"><a name=\"8. 快速排序（Quick Sort）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>8. 快速排序（Quick Sort）</h3><p><img src=\"https://camo.githubusercontent.com/4a10c066718dc2584d2b1682f8b2085920db0123/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353233303933363337312d313431333532333431322e676966\" alt=\"\">\r\n<pre><code>/**\r\n * 快速排序  分开大小集合，然后在递归排序\r\n * @param $arr\r\n * @return array\r\n */\r\nfunction quickSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 第一个作为中间值\r\n    $m = $arr[0];\r\n    // 小于中间值$m的放左边$left,反之放右边$right\r\n    $left = $right = [];\r\n\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 1; $i &lt; $len; $i++) {\r\n        if ($arr[$i] &lt; $m) {\r\n            $left[] = $arr[$i];\r\n        } else {\r\n            $right[] = $arr[$i];\r\n        }\r\n    }\r\n\r\n    $left = quickSort($left);\r\n    $right = quickSort($right);\r\n\r\n    return array_merge($left, array($m), $right);\r\n}\r\n</code></pre><h3 id=\"h3-9-heap-sort-\"><a name=\"9.堆排序（Heap Sort）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>9.堆排序（Heap Sort）</h3><p><img src=\"https://i.loli.net/2019/11/11/jqiWcTEAFh1LwYQ.gif\" alt=\"640.gif\">\r\n<p>排序过程可知：若想得到升序，则建立大顶堆，若想得到降序，则建立小顶堆。</p>\r\n<pre><code>&lt;?php\r\n// 堆排序（大顶堆）\r\nfunction heapSort(&amp;$arr) {\r\n    $len = count($arr);\r\n    // 先将数组构造成大根堆\r\n    for ($i = floor($len / 2) - 1; $i &gt;= 0; $i--) {\r\n        adjustHeap($arr, $i, $len);\r\n    }\r\n    // 调整堆结构+交换堆顶元素与末尾元素\r\n    for ($j = $len - 1; $j &gt; 0; $j--) {\r\n        swap($arr, 0, $j);  // 将堆顶元素与末尾元素进行交换\r\n        adjustHeap($arr, 0, $j); // 重新对堆进行调整\r\n    }\r\n}\r\n\r\n// 调整堆\r\nfunction adjustHeap(&amp;$arr, $i, $length) {\r\n    $temp = $arr[$i];   // 先取出当前元素\r\n    for ($k = 2 * $i + 1; $k &lt; $length; $k = 2 * $k + 1) {// 左孩子2 * i+1，右孩子2∗i + 2\r\n        if ($k + 1 &lt; $length &amp;&amp; $arr[$k] &lt; $arr[$k + 1]) {// 如果左子结点小于右子结点，k指向右子结点\r\n            $k ++;\r\n        }\r\n        if ($temp &lt; $arr[$k]) {\r\n            $arr[$i] = $arr[$k]; // 将根节点设置为子节点的较大值\r\n            $i = $k;             // 继续往下\r\n        } else {\r\n            break;  // 已经满足大根堆\r\n        }\r\n\r\n    }\r\n    $arr[$i] = $temp;   // 将temp值放到最终的位置\r\n}\r\n\r\n// 交换2个值\r\nfunction swap(&amp;$arr, $a, $b) {\r\n    $temp = $arr[$a];\r\n    $arr[$a] = $arr[$b];\r\n    $arr[$b] = $temp;\r\n}\r\n\r\n// 测试\r\n$arr = array(49, 38, 65, 97, 76, 13, 27, 50);\r\nheapSort($arr);\r\nprint_r($arr);\r\n</code></pre>', '0', '1571291317', '1576053471', '10000', '52', '0', '302', '0', '0', '0', '1', '', '### 1. 数组关联id结合\r\n有评论的list和回复的list，其中回复的id等于评论的mid；通过这两个关联，让回复的list放在评论某个数组里面。\r\n\r\n```\r\nprivate function comment_and_reply($comment_list,$reply_list){\r\n    foreach($comment_list as &$v) {\r\n        $v[\'replay\'] = [];\r\n        foreach ($reply_list as $vv){\r\n            if ($v[\'id\'] == $vv[\'mid\']){\r\n                array_push($v[\'replay\'], $vv);\r\n            }\r\n        }\r\n    }\r\n    unset($v);\r\n    return $comment_list;\r\n}\r\n```\r\n\r\n### 2. 递归；通过自己找到儿子\r\n\r\n```\r\npublic function getchildrenid($table,$cid){\r\n    $table_res=db($table)->select();\r\n    if($table_res){\r\n        return $this->_getchildrenid($table_res,$cid);\r\n    }\r\n}\r\nprivate function _getchildrenid($table_res,$cid){\r\n    static $arr=array();\r\n    foreach($table_res as $k=>$v){\r\n        if($v[\'pid\'] == $cid){\r\n            $arr[]=$v[\'id\'];\r\n            //防止无下限循环\r\n            $this->_getchildrenid($table_res,$v[\'id\']);\r\n        }\r\n    }\r\n    return $arr;\r\n}\r\n```\r\n### 3. 选择排序（Selection Sort）\r\n\r\n选择出数组中的最小元素，将它与数组的第一个元素交换位置。再从剩下的元素中选择出最小的元素，将它与数组的第二个元素交换位置。不断进行这样的操作，直到将整个数组排序。\r\n\r\n![](https://camo.githubusercontent.com/f6e0486dbb74ecc8d74a6c72d1c0884951ceaa98/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353232343731393539302d313433333231393832342e676966)\r\n```\r\n/**\r\n * 选择排序  每次选取最小的一个数字与当前数字交换\r\n * @param $arr\r\n * @return array\r\n */\r\nfunction selectSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 0; $i < $len; $i++) {\r\n        // 最小下标\r\n        $minIndex = $i;\r\n        for ($j = $i + 1; $j < $len; $j++) {\r\n            if ($arr[$j] < $arr[$minIndex]) {\r\n                // 选取最小数字的下标\r\n                $minIndex = $j;\r\n            }\r\n        }\r\n\r\n        // 如果最小数字的下标等于当前下标，继续循环\r\n        if ($minIndex == $i) {\r\n            continue;\r\n        }\r\n\r\n        // 交换数据\r\n        $temp = $arr[$i];\r\n        $arr[$i] = $arr[$minIndex];\r\n        $arr[$minIndex] = $temp;\r\n    }\r\n\r\n    return $arr;\r\n}\r\n```\r\n### 4. 插入排序（Insertion Sort）\r\n\r\n插入排序从左到右进行，每次都将当前元素插入到左侧已经排序的数组中，使得插入之后左部数组依然有序。\r\n\r\n第 j 元素是通过不断向左比较并交换来实现插入过程：当第 j 元素小于第 j - 1 元素，就将它们的位置交换，然后令 j 指针向左移动一个位置，不断进行以上操作。\r\n\r\n![](https://camo.githubusercontent.com/5e6dcf3d502a864805ecd49fefac164dd91e4b49/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353232353634353237372d313135313130303030302e676966)\r\n\r\n```\r\n//插入排序\r\nfunction insertSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 1; $i < $len; $i++) {\r\n        // 当前数字(刚抓的扑克牌)\r\n        $curr = $arr[$i];\r\n        for ($j = $i - 1; $j >= 0; $j--) {\r\n            // 当前数字如果单元前面一个的时候直接结束循环，因为前面的已经排好了\r\n            if ($curr > $arr[$j]) {\r\n                break;\r\n            }\r\n            // 前面所有数字往后移动\r\n            $arr[$j + 1] = $arr[$j];\r\n        }\r\n\r\n        // 因为上面循环最后$j--了，所以这里把$j\r\n        $arr[$j + 1] = $curr;\r\n    }\r\n\r\n    return $arr;\r\n}\r\n```\r\n### 5.冒泡排序（Bubble Sort）\r\n\r\n通过从左到右不断交换相邻逆序的相邻元素，在一轮的交换之后，可以让未排序的元素上浮到右侧。\r\n\r\n在一轮循环中，如果没有发生交换，就说明数组已经是有序的，此时可以直接退出。\r\n\r\n![](https://camo.githubusercontent.com/adaf3658c694ce232520c3f2b677b3273e0e6c1a/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353232333233383434392d323134363136393139372e676966)\r\n\r\n```\r\nfunction bubbleSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 标识位\r\n    $flag = false;\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 0; $i < $len; $i++) {\r\n        for ($j = 0; $j < $len - 1 - $i; $j++) {\r\n            if ($arr[$j] > $arr[$j + 1]) {\r\n                $temp = $arr[$j];\r\n                $arr[$j] = $arr[$j + 1];\r\n                $arr[$j + 1] = $temp;\r\n                $flag = true;\r\n            }\r\n        }\r\n        if (!$flag) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return $arr;\r\n}\r\n```\r\n### 6. 希尔排序（Shell Sort）\r\n\r\n先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：\r\n\r\n- 选择一个增量序列t1，t2，…，tk，其中ti>tj，tk=1；\r\n- 按增量序列个数k，对序列进行k 趟排序；\r\n- 每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。\r\n\r\n![](https://camo.githubusercontent.com/fda52e27af7d3624e110e94109c28fd27fa44871/68747470733a2f2f696d61676573323031382e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313830332f3834393538392d32303138303333313137303031373432312d3336343530363037332e676966)\r\n\r\n```\r\n<?php\r\nfunction shellSort($arr) {\r\n    $len = count($arr);\r\n    for ($gap = floor($len / 2); $gap > 0; $gap = floor($gap / 2)) {\r\n        for($i = $gap; $i < $len; $i++) {\r\n            for($j = $i - $gap; $j >= 0; $j -= $gap) {\r\n                if ($arr[$j + $gap] < $arr[$j]) {\r\n                    $temp = $arr[$j];\r\n                    $arr[$j] = $arr[$j+$gap];\r\n                    $arr[$j + $gap] = $temp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return $arr;\r\n}\r\n// 测试\r\n$arr = range(1, 10);\r\nshuffle($arr);\r\necho \"排序前：\";\r\nprint_r($arr);\r\necho \"</br>\";\r\necho \"排序后：\";\r\n$res = shellSort($arr);\r\nprint_r($res);\r\n```\r\n\r\n### 7. 归并排序（Merge Sort）\r\n\r\n归并排序的思想是将数组分成两部分，分别进行排序，然后归并起来。把长度为n的输入序列分成两个长度为n/2的子序列；对这两个子序列分别采用归并排序；将两个排序好的子序列合并成一个最终的排序序列。\r\n\r\n![](https://camo.githubusercontent.com/207472a2903254f1706938a09fc3fa854ad23273/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353233303535373034332d33373337353031302e676966)\r\n\r\n```\r\n//归并排序\r\nfunction mergeSort(&$arr, $left, $right) {\r\n\r\n    if(empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    if ($left < $right) {\r\n        // 找出中间索引\r\n        $mid = floor(($left + $right) / 2);\r\n        // 对左边数组进行递归\r\n        mergeSort($arr, $left, $mid);\r\n        // 对右边数组进行递归\r\n        mergeSort($arr, $mid + 1, $right);\r\n        // 合并\r\n        merge($arr, $left, $mid, $right);\r\n    }\r\n}\r\n\r\n// 将两个有序数组合并成一个有序数组\r\nfunction merge(&$arr, $left, $mid, $right) {\r\n    $i = $left;     // 左数组的下标\r\n    $j = $mid + 1;  // 右数组的下标\r\n    $temp = array();// 临时合并数组\r\n    // 扫描第一段和第二段序列，直到有一个扫描结束\r\n    while ($i <= $mid && $j <= $right) {\r\n        // 判断第一段和第二段取出的数哪个更小，将其存入合并序列，并继续向下扫描\r\n        if ($arr[$i] < $arr[$j]) {\r\n            $temp[] = $arr[$i];\r\n            $i++;\r\n        } else {\r\n            $temp[] = $arr[$j];\r\n            $j++;\r\n        }\r\n    }\r\n    // 比完之后，假如左数组仍有剩余，则直接全部复制到 temp 数组\r\n    while ($i <= $mid) {\r\n        $temp[] = $arr[$i];\r\n        $i++;\r\n    }\r\n    // 比完之后，假如右数组仍有剩余，则直接全部复制到 temp 数组\r\n    while ($j <= $right) {\r\n        $temp[] = $arr[$j];\r\n        $j++;\r\n    }\r\n    // 将合并序列复制到原始序列中\r\n    for($k = 0; $k < count($temp); $k++) {\r\n        $arr[$left + $k] = $temp[$k];\r\n    }\r\n}\r\n$arr= [\"2\",\"3\",\"5\",\"47\",\"21\",\"22\",\"4\",\"30\",\"148\",\"121\",\"50\"];\r\nmergeSort($arr, 0, count($arr) - 1);\r\nprint_r($arr);\r\n```\r\n### 8. 快速排序（Quick Sort）\r\n\r\n![](https://camo.githubusercontent.com/4a10c066718dc2584d2b1682f8b2085920db0123/68747470733a2f2f696d61676573323031372e636e626c6f67732e636f6d2f626c6f672f3834393538392f3230313731302f3834393538392d32303137313031353233303933363337312d313431333532333431322e676966)\r\n\r\n```\r\n/**\r\n * 快速排序  分开大小集合，然后在递归排序\r\n * @param $arr\r\n * @return array\r\n */\r\nfunction quickSort($arr)\r\n{\r\n    if (empty($arr) || !is_array($arr)) {\r\n        return $arr;\r\n    }\r\n    $arr = array_values($arr);\r\n\r\n    // 第一个作为中间值\r\n    $m = $arr[0];\r\n    // 小于中间值$m的放左边$left,反之放右边$right\r\n    $left = $right = [];\r\n\r\n    // 数组长度\r\n    $len = count($arr);\r\n    for ($i = 1; $i < $len; $i++) {\r\n        if ($arr[$i] < $m) {\r\n            $left[] = $arr[$i];\r\n        } else {\r\n            $right[] = $arr[$i];\r\n        }\r\n    }\r\n\r\n    $left = quickSort($left);\r\n    $right = quickSort($right);\r\n\r\n    return array_merge($left, array($m), $right);\r\n}\r\n```\r\n\r\n### 9.堆排序（Heap Sort）\r\n\r\n![640.gif](https://i.loli.net/2019/11/11/jqiWcTEAFh1LwYQ.gif)\r\n\r\n排序过程可知：若想得到升序，则建立大顶堆，若想得到降序，则建立小顶堆。\r\n\r\n```\r\n<?php\r\n// 堆排序（大顶堆）\r\nfunction heapSort(&$arr) {\r\n    $len = count($arr);\r\n    // 先将数组构造成大根堆\r\n    for ($i = floor($len / 2) - 1; $i >= 0; $i--) {\r\n        adjustHeap($arr, $i, $len);\r\n    }\r\n    // 调整堆结构+交换堆顶元素与末尾元素\r\n    for ($j = $len - 1; $j > 0; $j--) {\r\n        swap($arr, 0, $j);  // 将堆顶元素与末尾元素进行交换\r\n        adjustHeap($arr, 0, $j); // 重新对堆进行调整\r\n    }\r\n}\r\n \r\n// 调整堆\r\nfunction adjustHeap(&$arr, $i, $length) {\r\n    $temp = $arr[$i];   // 先取出当前元素\r\n    for ($k = 2 * $i + 1; $k < $length; $k = 2 * $k + 1) {// 左孩子2 * i+1，右孩子2∗i + 2\r\n        if ($k + 1 < $length && $arr[$k] < $arr[$k + 1]) {// 如果左子结点小于右子结点，k指向右子结点\r\n            $k ++;\r\n        }\r\n        if ($temp < $arr[$k]) {\r\n            $arr[$i] = $arr[$k]; // 将根节点设置为子节点的较大值\r\n            $i = $k;             // 继续往下\r\n        } else {\r\n            break;  // 已经满足大根堆\r\n        }\r\n \r\n    }\r\n    $arr[$i] = $temp;   // 将temp值放到最终的位置\r\n}\r\n \r\n// 交换2个值\r\nfunction swap(&$arr, $a, $b) {\r\n    $temp = $arr[$a];\r\n    $arr[$a] = $arr[$b];\r\n    $arr[$b] = $temp;\r\n}\r\n \r\n// 测试\r\n$arr = array(49, 38, 65, 97, 76, 13, 27, 50);\r\nheapSort($arr);\r\nprint_r($arr);\r\n```', '0');
INSERT INTO `be_article` VALUES ('43', '海贼王时尚拼接高清手机壁纸', 'one-piece,海贼王,手机壁纸', '张张都十分的好看！！！爱了', '', '<p>张张都十分的好看！！！爱了💕😍🌹🧡💙💚💜💘💖💞💕<br><img src=\"https://i.loli.net/2019/11/13/7LAw3NfWJBk4bxO.jpg\" alt=\"5dc91ba9e8fde.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/F1LZ2Tkmb7x4aRN.jpg\" alt=\"5dc91bab053fb.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/NDWsOaZ1CjmLJAF.jpg\" alt=\"5dc91bac11767.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/3wfcP5K4RVqLQnv.jpg\" alt=\"5dc91baf6bc2d.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/CVzn5QrhHufLgR4.jpg\" alt=\"5dc91bae054d2.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/3ZMrHYkCfosmutX.jpg\" alt=\"5dc91bb0b62e3.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/raK7VL9nIGzxdp6.jpg\" alt=\"5dc91bb24d2b5.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/NcsBGEn73jXdgUb.jpg\" alt=\"5dc91bb3f2a84.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/K1XZLn3heWR72Sy.jpg\" alt=\"5dc91bb87d1e6.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/PDTIcnhCVQ3KXGe.jpg\" alt=\"5dc91bb70bb6c.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/lWzQU7aRm3CwvkS.jpg\" alt=\"5dc91bb5802ab.jpg\"><br><img src=\"https://i.loli.net/2019/11/13/uZ7O1p5KDdNgPIF.jpg\" alt=\"5dc91bba1d0eb.jpg\">\r\n', '0', '1573622903', '1575958925', '10000', '35', '0', '5250', '0', '0', '0', '1', '', '张张都十分的好看！！！爱了💕😍🌹🧡💙💚💜💘💖💞💕\r\n![5dc91ba9e8fde.jpg](https://i.loli.net/2019/11/13/7LAw3NfWJBk4bxO.jpg)\r\n![5dc91bab053fb.jpg](https://i.loli.net/2019/11/13/F1LZ2Tkmb7x4aRN.jpg)\r\n![5dc91bac11767.jpg](https://i.loli.net/2019/11/13/NDWsOaZ1CjmLJAF.jpg)\r\n![5dc91baf6bc2d.jpg](https://i.loli.net/2019/11/13/3wfcP5K4RVqLQnv.jpg)\r\n![5dc91bae054d2.jpg](https://i.loli.net/2019/11/13/CVzn5QrhHufLgR4.jpg)\r\n![5dc91bb0b62e3.jpg](https://i.loli.net/2019/11/13/3ZMrHYkCfosmutX.jpg)\r\n![5dc91bb24d2b5.jpg](https://i.loli.net/2019/11/13/raK7VL9nIGzxdp6.jpg)\r\n![5dc91bb3f2a84.jpg](https://i.loli.net/2019/11/13/NcsBGEn73jXdgUb.jpg)\r\n![5dc91bb87d1e6.jpg](https://i.loli.net/2019/11/13/K1XZLn3heWR72Sy.jpg)\r\n![5dc91bb70bb6c.jpg](https://i.loli.net/2019/11/13/PDTIcnhCVQ3KXGe.jpg)\r\n![5dc91bb5802ab.jpg](https://i.loli.net/2019/11/13/lWzQU7aRm3CwvkS.jpg)\r\n![5dc91bba1d0eb.jpg](https://i.loli.net/2019/11/13/uZ7O1p5KDdNgPIF.jpg)', '0');
INSERT INTO `be_article` VALUES ('46', 'Navicat连接MySQL数据库', 'Navicat,MySQL数据库,阿里云', '', '', '<h2 id=\"h2--mysql-\"><a name=\"一、首先要mysql授权\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>一、首先要mysql授权</h2><pre><code>mysql&gt;GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' IDENTIFIED BY \'123456\' WITH GRANT OPTION;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql&gt;FLUSH PRIVILEGES;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n</code></pre><p>说明:【想要root用户使用密码123456从任何主机连接到mysql服务器】</p>\r\n<pre><code>mysql&gt; select host,user from user;\r\n+-------------------------+------+\r\n| host                    | user |\r\n+-------------------------+------+\r\n| %                       | root |\r\n| 127.0.0.1               | root |\r\n| iz2ze3hkpeilimy9kn68tvz |      |\r\n| iz2ze3hkpeilimy9kn68tvz | root |\r\n| localhost               |      |\r\n| localhost               | root |\r\n+-------------------------+------+\r\n6 rows in set (0.00 sec)\r\n</code></pre><p>说明:【修改权限后查询user表】</p>\r\n<h2 id=\"h2--navicat-ecs-\"><a name=\"二、Navicat远程连接阿里云ECS数据库\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>二、Navicat远程连接阿里云ECS数据库</h2><p>1、首先常规设置</p>\r\n<p><img src=\"http://p2.so.qhmsg.com/t01ffbd9316b0726a68.jpg\" alt=\"\">\r\n<p>2、进行SSH设置</p>\r\n<p><img src=\"http://p2.so.qhmsg.com/t015ed9142b751d2319.jpg\" alt=\"\">\r\n<p>SSH密码就是你连接服务器密码</p>\r\n', '0', '1575905118', '1576578370', '10000', '53', '0', '96', '0', '0', '0', '1', '', '## 一、首先要mysql授权\r\n\r\n```\r\nmysql>GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' IDENTIFIED BY \'123456\' WITH GRANT OPTION;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n \r\nmysql>FLUSH PRIVILEGES;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n```\r\n\r\n说明:【想要root用户使用密码123456从任何主机连接到mysql服务器】\r\n\r\n```\r\nmysql> select host,user from user;\r\n+-------------------------+------+\r\n| host                    | user |\r\n+-------------------------+------+\r\n| %                       | root |\r\n| 127.0.0.1               | root |\r\n| iz2ze3hkpeilimy9kn68tvz |      |\r\n| iz2ze3hkpeilimy9kn68tvz | root |\r\n| localhost               |      |\r\n| localhost               | root |\r\n+-------------------------+------+\r\n6 rows in set (0.00 sec)\r\n```\r\n\r\n说明:【修改权限后查询user表】\r\n\r\n## 二、Navicat远程连接阿里云ECS数据库\r\n\r\n1、首先常规设置\r\n\r\n![](http://p2.so.qhmsg.com/t01ffbd9316b0726a68.jpg)\r\n\r\n2、进行SSH设置\r\n\r\n![](http://p2.so.qhmsg.com/t015ed9142b751d2319.jpg)\r\n\r\nSSH密码就是你连接服务器密码', '0');
INSERT INTO `be_article` VALUES ('47', 'windows下使用composer', '', '', 'https://i.loli.net/2019/12/10/FvJqH3684rmjL2s.png', '<h2 id=\"h2-composer-\"><a name=\"composer的安装\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>composer的安装</h2><h4 id=\"h4-1-composer\"><a name=\"1.什么是composer\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.什么是composer</h4><p><code>Composer</code> 是 PHP5.3以上 的一个依赖管理工具。它允许你声明项目所依赖的代码库，它会在你的项目中为你安装他们。<code>Composer</code> 不是一个包管理器。是的，它涉及 <code>“packages”</code> 和 <code>“libraries”</code>，但它在每个项目的基础上进行管理，在你项目的某个目录中（例如 <code>vendor</code>）进行安装。默认情况下它不会在全局安装任何东西。因此，这仅仅是一个依赖管理。</p>\r\n<h4 id=\"h4-2-\"><a name=\"2.如何安装\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.如何安装</h4><p>composer 为我们提供的两种安装方式 一种是<code>安装包安装</code> 一种是<code>composer.phar</code> 安装</p>\r\n<h5 id=\"h5-2-1-\"><a name=\"2.1 安装包安装\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.1 安装包安装</h5><p>这是composer的安装包连接 <a href=\"https://getcomposer.org/download/\">https://getcomposer.org/download/</a><br><img src=\"https://www.yangpanyao.com/usr/uploads/2019/08/312725236.png\" alt=\"\"><br>我们打开后 点击<code>composer-Setup.exe</code> 然后下载 composer进行安装<br>运行composer安装包 <code>点击next</code> 然后会出现下面的界面<br><img src=\"https://www.yangpanyao.com/usr/uploads/2019/08/1288540115.png\" alt=\"\"><br>这个是让我我们选择自己的php执行文件 ，大家根据实际情况自行选择，然后一直继续就好了<br>安装完成后 我们打开命令行 输入 <code>composer</code> 如出现一下界面就代表你的composer 安装完成了<br><img src=\"https://www.yangpanyao.com/usr/uploads/2019/08/718114677.png\" alt=\"\"><br>接下来我们需要将composer的镜像切换为<strong>中国镜像</strong><br><a href=\"https://pkg.phpcomposer.com/\">https://pkg.phpcomposer.com/</a> 此为composer 中国镜像链接<br>composer 镜像为我们提供了两种 配置方式 一种是<strong>全局安装</strong> 一种是 <strong>局部安装</strong><br><img src=\"https://www.yangpanyao.com/usr/uploads/2019/08/640209669.png\" alt=\"\"><br>在这里我们推荐全局安装<br>在命令行输入\r\n<pre><code class=\"lang-shell\">composer config -g repo.packagist composer https://packagist.phpcomposer.com\r\n</code></pre>\r\n<p>至此 <strong>composer</strong> 的安装包安装就完成了</p>\r\n<h5 id=\"h5-2-2-composer-phar-\"><a name=\"2.2 composer.phar 安装\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.2 composer.phar 安装</h5><p>还是这个连接 <a href=\"https://getcomposer.org/download/\">https://getcomposer.org/download/</a><br>打开后我们选择最新的1.9.0 版本即可 点击 1.9.0 即可下载composer.phar<br><img src=\"https://www.yangpanyao.com/usr/uploads/2019/08/3875484114.png\" alt=\"\"><br>下载完成后我们将它放在 php执行文件的根目录 也就是跟php.exe 同一个目录<br>接下来我们创建一个执行文件 composer.bat 打开它并插入一下代码并保存\r\n<pre><code class=\"lang-bash\">@php \"%~dp0composer.phar\" %*\r\n</code></pre>\r\n<p>然后打开命令行 输入 <code>composer</code> 出现<br><img src=\"https://www.yangpanyao.com/usr/uploads/2019/08/718114677.png\" alt=\"\"><br>你的<code>composer.phar</code>方法安装composer成功了 后面的切换镜像就跟上面的一样了</p>\r\n', '0', '1575958983', '1576578364', '10000', '53', '0', '219', '0', '0', '0', '1', '', '## composer的安装\r\n\r\n#### 1.什么是composer\r\n\r\n`Composer` 是 PHP5.3以上 的一个依赖管理工具。它允许你声明项目所依赖的代码库，它会在你的项目中为你安装他们。`Composer` 不是一个包管理器。是的，它涉及 `“packages”` 和 `“libraries”`，但它在每个项目的基础上进行管理，在你项目的某个目录中（例如 `vendor`）进行安装。默认情况下它不会在全局安装任何东西。因此，这仅仅是一个依赖管理。\r\n\r\n#### 2.如何安装\r\ncomposer 为我们提供的两种安装方式 一种是`安装包安装` 一种是`composer.phar` 安装\r\n\r\n##### 2.1 安装包安装\r\n这是composer的安装包连接 https://getcomposer.org/download/\r\n![](https://www.yangpanyao.com/usr/uploads/2019/08/312725236.png)\r\n我们打开后 点击`composer-Setup.exe` 然后下载 composer进行安装\r\n运行composer安装包 `点击next` 然后会出现下面的界面\r\n![](https://www.yangpanyao.com/usr/uploads/2019/08/1288540115.png)\r\n这个是让我我们选择自己的php执行文件 ，大家根据实际情况自行选择，然后一直继续就好了\r\n安装完成后 我们打开命令行 输入 `composer` 如出现一下界面就代表你的composer 安装完成了\r\n![](https://www.yangpanyao.com/usr/uploads/2019/08/718114677.png)\r\n接下来我们需要将composer的镜像切换为**中国镜像**\r\nhttps://pkg.phpcomposer.com/ 此为composer 中国镜像链接\r\ncomposer 镜像为我们提供了两种 配置方式 一种是**全局安装** 一种是 **局部安装**\r\n![](https://www.yangpanyao.com/usr/uploads/2019/08/640209669.png)\r\n在这里我们推荐全局安装\r\n在命令行输入\r\n```shell\r\ncomposer config -g repo.packagist composer https://packagist.phpcomposer.com\r\n```\r\n至此 **composer** 的安装包安装就完成了\r\n##### 2.2 composer.phar 安装\r\n还是这个连接 https://getcomposer.org/download/\r\n打开后我们选择最新的1.9.0 版本即可 点击 1.9.0 即可下载composer.phar\r\n![](https://www.yangpanyao.com/usr/uploads/2019/08/3875484114.png)\r\n下载完成后我们将它放在 php执行文件的根目录 也就是跟php.exe 同一个目录\r\n接下来我们创建一个执行文件 composer.bat 打开它并插入一下代码并保存\r\n```bash\r\n@php \"%~dp0composer.phar\" %*\r\n```\r\n然后打开命令行 输入 `composer` 出现\r\n![](https://www.yangpanyao.com/usr/uploads/2019/08/718114677.png)\r\n你的`composer.phar`方法安装composer成功了 后面的切换镜像就跟上面的一样了', '0');
INSERT INTO `be_article` VALUES ('48', '配置Vue', 'Vue,node.js,npm', '', '', '<h1 id=\"h1--node-js-\"><a name=\"配置Node.js的环境变量\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>配置Node.js的环境变量</h1><blockquote>\r\n<p>用于npm命令行</p>\r\n</blockquote>\r\n<ol>\r\n<li>系统变量</li></ol>\r\n<p><img src=\"https://i.loli.net/2019/12/13/8AWM9QOG1xCvRVS.png\" alt=\"12353119-9a1f55c970d3b320.png\">\r\n<ol>\r\n<li>用户变量(Path)</li></ol>\r\n<p><img src=\"https://i.loli.net/2019/12/13/8AWM9QOG1xCvRVS.png\" alt=\"12353119-9a1f55c970d3b320.png\">\r\n<ol>\r\n<li>最后，重启电脑</li></ol>\r\n<h1 id=\"h1--vue-cli\"><a name=\"安装工具vue-cli\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>安装工具vue-cli</h1><ol>\r\n<li>安装<pre><code>npm install -g <a href=\"https://github.com/vue\" title=\"@vue\" class=\"at-link\">@vue</a>/cli\r\n</code></pre></li><li>运行<pre><code>vue ui\r\n</code></pre></li></ol>\r\n<p>效果图：</p>\r\n<p><img src=\"https://i.loli.net/2019/12/13/swWgLX4DrfIJ6HP.png\" alt=\"12353119-b707bf764ac75fd4.png\">\r\n<h2 id=\"h2--vue-\"><a name=\"编写vue代码（团队）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>编写vue代码（团队）</h2><p>运行</p>\r\n<blockquote>\r\n<p>在项目目录下cmd <code>shift+右击</code><br>\r\n</blockquote>\r\n<pre><code>npm run serve\r\n</code></pre><h2 id=\"h2-u65B0u5EFAu9879u76EE\"><a name=\"新建项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>新建项目</h2><p>1.目录</p>\r\n<p><img src=\"https://i.loli.net/2019/12/13/2c8gGlF1HWAOKzQ.png\" alt=\"12353119-8f705da879ff4bf1.png\">\r\n<p>2.预设</p>\r\n<p><img src=\"https://i.loli.net/2019/12/13/lT32cAs7QUPWFH1.png\" alt=\"12353119-a8a0ae2df9f8c650.png\"><br>3.功能\r\n<blockquote>\r\n<p>Linter 代码编译格式（勾上后phpstrom就会在代码前面出现波浪线）</p>\r\n</blockquote>\r\n<p><img src=\"https://i.loli.net/2019/12/13/AsQrkNtdH94vwcg.png\" alt=\"12353119-7f04220719fa501d.png\">\r\n<p>4.配置</p>\r\n<p><img src=\"https://i.loli.net/2019/12/13/x2qCQeMb1W4A9Yr.png\" alt=\"12353119-84f35e2fbbc982ef.png\">\r\n<h2 id=\"h2--vue-\"><a name=\"运行别人的vue项目\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>运行别人的vue项目</h2><ol>\r\n<li>npm i</li><li>npm run serve</li></ol>\r\n<p>有些人可能遇到<code>npm WARN</code>类型的情况</p>\r\n<p>遇到这样的情况是由于缺少.json文件的原因，运行这条命令生成对应文件便可解决</p>\r\n<p><img src=\"https://i.loli.net/2020/02/26/WtpxdioZO6wHEk7.png\" alt=\"image.png\">\r\n<pre><code>npm init -f\r\n</code></pre><h2 id=\"h2-u5982u679Cu961Fu53CBu5B89u88C5u4E86u5176u5B83u7EC4u4EF6\"><a name=\"如果队友安装了其它组件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>如果队友安装了其它组件</h2><p>方法一：<code>npm i</code><br><br>方法二：删除<code>package-lock.json</code>、<code>node_modules</code>，再运行<code>npm i</code></p>\r\n<h2 id=\"h2-u9700u8981u5B89u88C5u7684u63D2u4EF6\"><a name=\"需要安装的插件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>需要安装的插件</h2><ol>\r\n<li>axios</li><li>ant.design.vue</li><li>格式化代码：prettier</li><li>代码右侧浏览：codeglance</li></ol>\r\n<p><img src=\"https://i.loli.net/2019/07/23/5d36d9193956691085.png\" alt=\"5d36d9193956691085.png\">\r\n<h2 id=\"h2-u5F00u53D1u4F9Du8D56u4E0Eu8FD0u884Cu4F9Du8D56u7684u533Au522B\"><a name=\"开发依赖与运行依赖的区别\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>开发依赖与运行依赖的区别</h2><blockquote>\r\n<p>运行依赖（JQ，没有jq使用$就会报错），开发依赖（prettier，格式代码用的）；后面加-P或-D才会指定安装运行依赖或开发依赖。</p>\r\n</blockquote>\r\n<h3 id=\"h3--dependencies-\"><a name=\"运行依赖（dependencies）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>运行依赖（dependencies）</h3><ol>\r\n<li>vuex</li><li>qs</li><li>core-js</li><li>axios</li></ol>\r\n<h3 id=\"h3--devdependencies-\"><a name=\"开发依赖（devDependencies）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>开发依赖（devDependencies）</h3><ol>\r\n<li>prettier</li><li>eslint</li></ol>\r\n', '0', '1576203185', '1582687218', '10000', '50', '0', '81', '0', '0', '0', '1', '', '# 配置Node.js的环境变量\r\n\r\n> 用于npm命令行\r\n\r\n1. 系统变量\r\n\r\n![12353119-9a1f55c970d3b320.png](https://i.loli.net/2019/12/13/8AWM9QOG1xCvRVS.png)\r\n\r\n2. 用户变量(Path)\r\n\r\n![12353119-9a1f55c970d3b320.png](https://i.loli.net/2019/12/13/8AWM9QOG1xCvRVS.png)\r\n\r\n3. 最后，重启电脑\r\n\r\n# 安装工具vue-cli\r\n\r\n1. 安装\r\n```\r\nnpm install -g @vue/cli\r\n```\r\n2. 运行\r\n```\r\nvue ui\r\n```\r\n\r\n效果图：\r\n\r\n![12353119-b707bf764ac75fd4.png](https://i.loli.net/2019/12/13/swWgLX4DrfIJ6HP.png)\r\n\r\n## 编写vue代码（团队）\r\n\r\n运行\r\n\r\n> 在项目目录下cmd `shift+右击`<br>\r\n\r\n```\r\nnpm run serve\r\n```\r\n\r\n## 新建项目\r\n\r\n1.目录\r\n\r\n![12353119-8f705da879ff4bf1.png](https://i.loli.net/2019/12/13/2c8gGlF1HWAOKzQ.png)\r\n\r\n2.预设\r\n\r\n![12353119-a8a0ae2df9f8c650.png](https://i.loli.net/2019/12/13/lT32cAs7QUPWFH1.png)\r\n3.功能\r\n\r\n> Linter 代码编译格式（勾上后phpstrom就会在代码前面出现波浪线）\r\n\r\n![12353119-7f04220719fa501d.png](https://i.loli.net/2019/12/13/AsQrkNtdH94vwcg.png)\r\n\r\n4.配置\r\n\r\n![12353119-84f35e2fbbc982ef.png](https://i.loli.net/2019/12/13/x2qCQeMb1W4A9Yr.png)\r\n\r\n## 运行别人的vue项目\r\n\r\n1. npm i\r\n2. npm run serve\r\n\r\n有些人可能遇到`npm WARN`类型的情况\r\n\r\n遇到这样的情况是由于缺少.json文件的原因，运行这条命令生成对应文件便可解决\r\n\r\n![image.png](https://i.loli.net/2020/02/26/WtpxdioZO6wHEk7.png)\r\n\r\n```\r\nnpm init -f\r\n```\r\n\r\n## 如果队友安装了其它组件\r\n\r\n方法一：`npm i`<br>\r\n方法二：删除`package-lock.json`、`node_modules`，再运行`npm i`\r\n\r\n\r\n## 需要安装的插件\r\n\r\n1. axios\r\n2. ant.design.vue\r\n3. 格式化代码：prettier\r\n4. 代码右侧浏览：codeglance\r\n\r\n![5d36d9193956691085.png](https://i.loli.net/2019/07/23/5d36d9193956691085.png)\r\n\r\n## 开发依赖与运行依赖的区别\r\n\r\n> 运行依赖（JQ，没有jq使用$就会报错），开发依赖（prettier，格式代码用的）；后面加-P或-D才会指定安装运行依赖或开发依赖。\r\n\r\n### 运行依赖（dependencies）\r\n\r\n1. vuex\r\n2. qs\r\n3. core-js\r\n4. axios\r\n\r\n### 开发依赖（devDependencies）\r\n\r\n1. prettier\r\n2. eslint', '0');
INSERT INTO `be_article` VALUES ('49', 'Vue.js 文章常用的技巧', 'Vue.js,viewer.js,代码高亮', '', '', '<h2 id=\"h2-u4EE3u7801u9AD8u4EAE\"><a name=\"代码高亮\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>代码高亮</h2><p>引入js和css</p>\r\n<pre><code class=\"lang-html\">&lt;link href=\"https://cdn.bootcss.com/highlight.js/9.15.10/styles/monokai-sublime.min.css\" rel=\"stylesheet\"&gt;\r\n\r\n&lt;script src=\"https://cdn.bootcss.com/highlight.js/9.15.9/highlight.min.js\"&gt;&lt;/script&gt;\r\n</code></pre>\r\n<pre><code class=\"lang-js\">// 代码高亮\r\nVue.directive(\'highlight\',function (el) {\r\n   let blocks = el.querySelectorAll(\'pre code\');\r\n   blocks.forEach((block)=&gt;{\r\n       hljs.highlightBlock(block)\r\n   })\r\n})\r\n</code></pre>\r\n<h2 id=\"h2-u70B9u51FBu6587u7AE0u56FEu7247u653Eu5927\"><a name=\"点击文章图片放大\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>点击文章图片放大</h2><p>引入js和css</p>\r\n<pre><code class=\"lang-html\">&lt;link href=\"https://cdn.bootcss.com/viewerjs/1.3.7/viewer.min.css\" rel=\"stylesheet\"&gt;\r\n\r\n&lt;script src=\"https://cdn.bootcss.com/viewerjs/1.3.7/viewer.min.js\"&gt;&lt;/script&gt;\r\n</code></pre>\r\n<pre><code class=\"lang-html\">&lt;div\r\n id=\"article-content\"\r\n class=\"markdown-body\"\r\n v-html=\"post_data.content\"\r\n @click=\"imageChang($event)\"\r\n v-highlight\r\n&gt;&lt;/div&gt;\r\n</code></pre>\r\n<p><strong>挂载完毕实例化Viewer</strong></p>\r\n<pre><code class=\"lang-js\">mounted() {\r\nlet _id = document.getElementById(\"article-content\");\r\n    this.viewer =  new Viewer(_id,{\r\n        show(){  // 动态加载图片后，更新实例\r\n        this.viewer.update();\r\n    },\r\n    });\r\n},\r\n</code></pre>\r\n<p><strong>imageChang</strong>点击事件</p>\r\n<pre><code class=\"lang-js\">imageChang(e){\r\n    if (e.target.nodeName == \'IMG\') {\r\n        this.viewer.show();\r\n    }\r\n},\r\n</code></pre>\r\n', '0', '1576256013', '1581055580', '10000', '50', '0', '87', '0', '0', '0', '1', '', '## 代码高亮\r\n\r\n引入js和css\r\n```html\r\n<link href=\"https://cdn.bootcss.com/highlight.js/9.15.10/styles/monokai-sublime.min.css\" rel=\"stylesheet\">\r\n\r\n<script src=\"https://cdn.bootcss.com/highlight.js/9.15.9/highlight.min.js\"></script>\r\n```\r\n\r\n```js\r\n// 代码高亮\r\nVue.directive(\'highlight\',function (el) {\r\n   let blocks = el.querySelectorAll(\'pre code\');\r\n   blocks.forEach((block)=>{\r\n       hljs.highlightBlock(block)\r\n   })\r\n})\r\n```\r\n\r\n\r\n## 点击文章图片放大\r\n\r\n引入js和css\r\n\r\n```html\r\n<link href=\"https://cdn.bootcss.com/viewerjs/1.3.7/viewer.min.css\" rel=\"stylesheet\">\r\n\r\n<script src=\"https://cdn.bootcss.com/viewerjs/1.3.7/viewer.min.js\"></script>\r\n```\r\n\r\n```html\r\n<div\r\n id=\"article-content\"\r\n class=\"markdown-body\"\r\n v-html=\"post_data.content\"\r\n @click=\"imageChang($event)\"\r\n v-highlight\r\n></div>\r\n```\r\n**挂载完毕实例化Viewer**\r\n\r\n```js\r\nmounted() {\r\nlet _id = document.getElementById(\"article-content\");\r\n	this.viewer =  new Viewer(_id,{\r\n		show(){  // 动态加载图片后，更新实例\r\n		this.viewer.update();\r\n	},\r\n	});\r\n},\r\n```\r\n**imageChang**点击事件\r\n\r\n```js\r\nimageChang(e){\r\n	if (e.target.nodeName == \'IMG\') {\r\n		this.viewer.show();\r\n	}\r\n},\r\n```', '0');
INSERT INTO `be_article` VALUES ('50', 'MySQL 千万级大数据 SQL 查询优化技巧详解', 'MySQL,索引,查询优化', '实用干货！！', 'https://i.loli.net/2019/12/20/RFeQGDV71o4BuxL.png', '<ol>\r\n<li>对查询进行优化，应尽量避免全表扫描，首先应考虑在 <code>where</code> 及 <code>order by</code> 涉及的列上建立索引。</li><li>应尽量避免在 <code>where</code> 子句中对字段进行 <code>null</code> 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：<code>select id from t where num is null</code> 可以在 num 上设置默认值 0，确保表中 <code>num</code> 列没有 <code>null</code> 值，然后这样查询：<code>select id from t where num=0</code></li><li>应尽量避免在 <code>where</code> 子句中使用<code>!=或&lt;&gt;</code>操作符，否则引擎将放弃使用索引而进行全表扫描。</li><li>应尽量避免在 <code>where</code> 子句中使用 <code>or</code> 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<code>select id from t where num=10 or num=20</code> 可以这样查询：<code>select id from t where num=10 union all select id from t where num=20</code></li><li><code>in</code> 和 <code>not in</code> 也要慎用，否则会导致全表扫描，如：<code>select id from t where num in(1,2,3)</code> 对于连续的数值，能用 <code>between</code> 就不要用 in 了：<code>select id from t where num between 1 and 3</code></li><li>下面的查询也将导致全表扫描：<code>select id from t where name like \'%李%\'</code> 若要提高效率，可以考虑全文检索。</li><li>如果在 <code>where</code> 子句中使用参数，也会导致全表扫描。因为 SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<code>select id from t where num= num</code> 可以改为强制查询使用索引：<code>select id from t with(index(索引名)) where num= num</code></li><li>应尽量避免在 <code>where</code> 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：<code>select id from t where num/2=100</code> 应改为: <code>select id from t where num=100*2</code>。</li><li>应尽量避免在 <code>where</code> 子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<code>select id from t where substring(name,1,3)=\'abc\'</code> ，<code>name</code> 以 <code>abc</code>开头的<code>id</code> 应改为:<code>select id from t where name like ‘abc%\'</code>。</li><li>不要在 <code>where</code>子句中的 <code>“=”</code>左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</li><li>在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。</li><li>不要写一些没有意义的查询，如需要生成一个空表结构：<code>select col1,col2 into #t from t where 1=0</code>, 这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：<code>create table #t(…)</code>。</li><li>很多时候用<code>exists</code> 代替 <code>in</code> 是一个好的选择：<code>select num from a where num in(select num from b)</code>，用下面的语句替换<code>：select num from a where exists(select 1 from b where num=a.num)</code>。</li><li>并不是所有索引对查询都有效，SQL 是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL 查询可能不会去利用索引，如一表中有字段 <code>sex，male、female</code>几乎各一半，那么即使在<code>sex</code> 上建了索引也对查询效率起不了作用。</li><li>索引并不是越多越好，索引固然可以提高相应的 <code>select</code>的效率，但同时也降低了 <code>insert</code> 及 <code>update</code> 的效率，因为 <code>insert</code> 或 <code>update</code> 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。<strong>一个表的索引数 最好不要超过6个</strong>，若太多则应考虑一些不常使用到的列上建的索引是否有必要。</li><li>应尽可能的避免更新 <code>clustered</code>索引数据列，因为 <code>clustered</code> 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新<code>clustered</code> 索引数据列，那么需要考虑是否应将该索引建为 <code>clustered</code> 索引。</li><li>尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</li><li>尽可能的使用 <code>varchar/nvarchar</code>代替 <code>char/nchar</code>，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</li><li>任何地方都不要使用 <code>select * from t</code>，用具体的字段列表代替 <code>“*”</code>，不要返回用不到的任何字段。</li><li>尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。</li><li>避免频繁创建和删除临时表，以减少系统表资源的消耗。</li><li>临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。</li><li>在新建临时表时，如果一次性插入数据量很大，那么可以使用 <code>select into</code> 代替 <code>create table</code>，避免造成大量<code>log</code> ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先 <code>create table</code>，然后 <code>insert</code>。</li><li>如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 <code>truncate table</code>，然后<code>drop table</code>，这样可以避免系统表的较长时间锁定。</li><li>尽量避免使用游标，因为游标的效率较差，<strong>如果游标操作的数据超过1万行，那么就应该考虑改写</strong>。</li><li>使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。</li><li>与临时表一样，游标并不是不可使用。对小型数据集使用 <code>FAST_FORWARD</code> 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。</li><li>在所有的存储过程和触发器的开始处设置 <code>SET NOCOUNT ON</code>，在结束时设置 <code>SET NOCOUNT OFF</code>。无需在执行存储过程和触发器的每个语句后向客户端发送 <code>DONE_IN_PROC</code> 消息。</li><li>尽量避免大事务操作，提高系统并发能力。</li><li>尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</li></ol>\r\n', '0', '1576829973', '1576830313', '10000', '54', '1', '106', '1576858274', '0', '0', '1', '', '1. 对查询进行优化，应尽量避免全表扫描，首先应考虑在 `where` 及 `order by` 涉及的列上建立索引。\r\n2. 应尽量避免在 `where` 子句中对字段进行 `null` 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：`select id from t where num is null` 可以在 num 上设置默认值 0，确保表中 `num` 列没有 `null` 值，然后这样查询：`select id from t where num=0`\r\n3. 应尽量避免在 `where` 子句中使用`!=或<>`操作符，否则引擎将放弃使用索引而进行全表扫描。\r\n4. 应尽量避免在 `where` 子句中使用 `or` 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：`select id from t where num=10 or num=20` 可以这样查询：`select id from t where num=10 union all select id from t where num=20`\r\n5. `in` 和 `not in` 也要慎用，否则会导致全表扫描，如：`select id from t where num in(1,2,3)` 对于连续的数值，能用 `between` 就不要用 in 了：`select id from t where num between 1 and 3`\r\n6. 下面的查询也将导致全表扫描：`select id from t where name like \'%李%\'` 若要提高效率，可以考虑全文检索。\r\n7. 如果在 `where` 子句中使用参数，也会导致全表扫描。因为 SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：`select id from t where num= num` 可以改为强制查询使用索引：`select id from t with(index(索引名)) where num= num`\r\n8. 应尽量避免在 `where` 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：`select id from t where num/2=100` 应改为: `select id from t where num=100*2`。\r\n9. 应尽量避免在 `where` 子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：`select id from t where substring(name,1,3)=\'abc\'` ，`name` 以 `abc `开头的` id` 应改为:`select id from t where name like ‘abc%\'`。\r\n10. 不要在 `where `子句中的 `“=”`左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。\r\n11. 在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。\r\n12. 不要写一些没有意义的查询，如需要生成一个空表结构：`select col1,col2 into #t from t where 1=0`, 这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：`create table #t(…)`。\r\n13. 很多时候用` exists` 代替 `in` 是一个好的选择：`select num from a where num in(select num from b)`，用下面的语句替换`：select num from a where exists(select 1 from b where num=a.num)`。\r\n14. 并不是所有索引对查询都有效，SQL 是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL 查询可能不会去利用索引，如一表中有字段 `sex，male、female `几乎各一半，那么即使在` sex` 上建了索引也对查询效率起不了作用。\r\n15. 索引并不是越多越好，索引固然可以提高相应的 `select `的效率，但同时也降低了 `insert` 及 `update` 的效率，因为 `insert` 或 `update` 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。**一个表的索引数 最好不要超过6个**，若太多则应考虑一些不常使用到的列上建的索引是否有必要。\r\n16. 应尽可能的避免更新 `clustered `索引数据列，因为 `clustered` 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新` clustered` 索引数据列，那么需要考虑是否应将该索引建为 `clustered` 索引。\r\n17. 尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。\r\n18. 尽可能的使用 `varchar/nvarchar `代替 `char/nchar`，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。\r\n19. 任何地方都不要使用 `select * from t`，用具体的字段列表代替 `“*”`，不要返回用不到的任何字段。\r\n20. 尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。\r\n21. 避免频繁创建和删除临时表，以减少系统表资源的消耗。\r\n22. 临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。\r\n23. 在新建临时表时，如果一次性插入数据量很大，那么可以使用 `select into` 代替 `create table`，避免造成大量` log` ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先 `create table`，然后 `insert`。\r\n24. 如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 `truncate table`，然后` drop table`，这样可以避免系统表的较长时间锁定。\r\n25. 尽量避免使用游标，因为游标的效率较差，**如果游标操作的数据超过1万行，那么就应该考虑改写**。\r\n26. 使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。\r\n27. 与临时表一样，游标并不是不可使用。对小型数据集使用 `FAST_FORWARD` 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。\r\n28. 在所有的存储过程和触发器的开始处设置 `SET NOCOUNT ON`，在结束时设置 `SET NOCOUNT OFF`。无需在执行存储过程和触发器的每个语句后向客户端发送 `DONE_IN_PROC` 消息。\r\n29. 尽量避免大事务操作，提高系统并发能力。\r\n30. 尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。', '0');
INSERT INTO `be_article` VALUES ('51', 'PHP获取客户端URL信息', '域名,主机地址,端口号,http协议', '', '', '<pre><code class=\"lang-php\">//测试地址\r\n$url = \'http://192.168.1.111:80/time/url.php?moudle=5&amp;id=666\';\r\n//获取http协议\r\n$http_type = ((isset($_SERVER[\'HTTPS\']) &amp;&amp; $_SERVER[\'HTTPS\'] == \'on\') || (isset($_SERVER[\'HTTP_X_FORWARDED_PROTO\']) &amp;&amp; $_SERVER[\'HTTP_X_FORWARDED_PROTO\'] == \'https\')) ? \'https://\' : \'http://\';\r\necho $http_type.\"&lt;br&gt;\";    #http://\r\n\r\n//获取域名或主机地址\r\necho $_SERVER[\'HTTP_HOST\'].\"&lt;br&gt;\";    #192.168.1.111\r\n\r\n//获取网页地址\r\necho $_SERVER[\'PHP_SELF\'].\"&lt;br&gt;\";    #/blog/testurl.php\r\n\r\n//获取网址参数\r\necho $_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\";    #moudle=5&amp;id=666\r\n\r\n//获取用户代理\r\n$HTTP_REFERER = isset($_SERVER[\'HTTP_REFERER\'])?$_SERVER[\'HTTP_REFERER\']:\'null\';\r\necho $HTTP_REFERER.\"&lt;br&gt;\";    #null\r\n\r\n//获取完整的url\r\necho $http_type.$_SERVER[\'HTTP_HOST\'].$_SERVER[\'REQUEST_URI\'].\"&lt;br&gt;\";\r\necho $http_type.$_SERVER[\'HTTP_HOST\'].$_SERVER[\'PHP_SELF\'].\'?\'.$_SERVER[\'QUERY_STRING\'].\"&lt;br&gt;\";\r\n#http://192.168.1.111/time/url.php?moudle=5&amp;id=666\r\n\r\n//包含端口号的完整url\r\necho $http_type.$_SERVER[\'SERVER_NAME\'].\':\'.$_SERVER[\"SERVER_PORT\"].$_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\";\r\n#http://192.168.1.111:80/time/url.php?moudle=5&amp;id=666\r\n\r\n//只取路径\r\n$url=\'http://\'.$_SERVER[\'SERVER_NAME\'].$_SERVER[\"REQUEST_URI\"];\r\necho dirname($url);    #http://192.168.1.111/time\r\n</code></pre>\r\n<p>获取系统类型及版本号： php_uname() (例：Windows NT COMPUTER 5.1 build 2600)</p>\r\n<p>只获取系统类型： php_uname(‘s’) (或：PHP_OS，例：Windows NT)</p>\r\n<p>只获取系统版本号： php_uname(‘r’)</p>\r\n<p>获取PHP运行方式： php_sapi_name() (PHP run mode：apache2handler)</p>\r\n<p>获取前进程用户名： Get_Current_User()</p>\r\n<p>获取PHP版本： PHP_VERSION</p>\r\n<p>获取Zend版本： Zend_Version()</p>\r\n<p>获取PHP安装路径： DEFAULT_INCLUDE_PATH</p>\r\n<p>获取当前文件绝对路径： FILE</p>\r\n<p>获取Http请求中Host值： $_SERVER[“HTTP_HOST”] (返回值为域名或IP)</p>\r\n<p>获取服务器IP： GetHostByName($_SERVER[‘SERVER_NAME’])</p>\r\n<p>接受请求的服务器IP： $_SERVER[“SERVER_ADDR”] (有时候获取不到，推荐用：GetHostByName($_SERVER[‘SERVER_NAME’]))</p>\r\n<p>获取客户端IP： $_SERVER[‘REMOTE_ADDR’]</p>\r\n<p>获取服务器解译引擎： $_SERVER[‘SERVER_SOFTWARE’]</p>\r\n<p>获取服务器CPU数量： $_SERVER[‘PROCESSOR_IDENTIFIER’]</p>\r\n<p>获取服务器系统目录： $_SERVER[‘SystemRoot’]</p>\r\n<p>获取服务器域名：$_SERVER[‘SERVER_NAME’] (建议使用：$_SERVER[“HTTP_HOST”])</p>\r\n<p>获取用户域名： $_SERVER[‘USERDOMAIN’]</p>\r\n<p>获取服务器语言： $_SERVER[‘HTTP_ACCEPT_LANGUAGE’]</p>\r\n<p>获取服务器Web端口： $_SERVER[‘SERVER_PORT’]</p>\r\n', '0', '1576832482', '1577348630', '10000', '52', '0', '45', '0', '0', '0', '1', '', '```php\r\n//测试地址\r\n$url = \'http://192.168.1.111:80/time/url.php?moudle=5&id=666\';\r\n//获取http协议\r\n$http_type = ((isset($_SERVER[\'HTTPS\']) && $_SERVER[\'HTTPS\'] == \'on\') || (isset($_SERVER[\'HTTP_X_FORWARDED_PROTO\']) && $_SERVER[\'HTTP_X_FORWARDED_PROTO\'] == \'https\')) ? \'https://\' : \'http://\';\r\necho $http_type.\"<br>\";    #http://\r\n\r\n//获取域名或主机地址\r\necho $_SERVER[\'HTTP_HOST\'].\"<br>\";    #192.168.1.111\r\n\r\n//获取网页地址\r\necho $_SERVER[\'PHP_SELF\'].\"<br>\";    #/blog/testurl.php\r\n\r\n//获取网址参数\r\necho $_SERVER[\"QUERY_STRING\"].\"<br>\";    #moudle=5&id=666\r\n\r\n//获取用户代理\r\n$HTTP_REFERER = isset($_SERVER[\'HTTP_REFERER\'])?$_SERVER[\'HTTP_REFERER\']:\'null\';\r\necho $HTTP_REFERER.\"<br>\";    #null\r\n\r\n//获取完整的url\r\necho $http_type.$_SERVER[\'HTTP_HOST\'].$_SERVER[\'REQUEST_URI\'].\"<br>\";\r\necho $http_type.$_SERVER[\'HTTP_HOST\'].$_SERVER[\'PHP_SELF\'].\'?\'.$_SERVER[\'QUERY_STRING\'].\"<br>\";\r\n#http://192.168.1.111/time/url.php?moudle=5&id=666\r\n\r\n//包含端口号的完整url\r\necho $http_type.$_SERVER[\'SERVER_NAME\'].\':\'.$_SERVER[\"SERVER_PORT\"].$_SERVER[\"REQUEST_URI\"].\"<br>\";\r\n#http://192.168.1.111:80/time/url.php?moudle=5&id=666\r\n\r\n//只取路径\r\n$url=\'http://\'.$_SERVER[\'SERVER_NAME\'].$_SERVER[\"REQUEST_URI\"];\r\necho dirname($url);    #http://192.168.1.111/time\r\n```\r\n\r\n获取系统类型及版本号： php_uname() (例：Windows NT COMPUTER 5.1 build 2600)\r\n\r\n只获取系统类型： php_uname(\'s\') (或：PHP_OS，例：Windows NT)\r\n\r\n只获取系统版本号： php_uname(\'r\')\r\n\r\n获取PHP运行方式： php_sapi_name() (PHP run mode：apache2handler)\r\n\r\n获取前进程用户名： Get_Current_User()\r\n\r\n获取PHP版本： PHP_VERSION\r\n\r\n获取Zend版本： Zend_Version()\r\n\r\n获取PHP安装路径： DEFAULT_INCLUDE_PATH\r\n\r\n获取当前文件绝对路径： FILE\r\n\r\n获取Http请求中Host值： $_SERVER[\"HTTP_HOST\"] (返回值为域名或IP)\r\n\r\n获取服务器IP： GetHostByName($_SERVER[\'SERVER_NAME\'])\r\n\r\n接受请求的服务器IP： $_SERVER[\"SERVER_ADDR\"] (有时候获取不到，推荐用：GetHostByName($_SERVER[\'SERVER_NAME\']))\r\n\r\n获取客户端IP： $_SERVER[\'REMOTE_ADDR\']\r\n\r\n获取服务器解译引擎： $_SERVER[\'SERVER_SOFTWARE\']\r\n\r\n获取服务器CPU数量： $_SERVER[\'PROCESSOR_IDENTIFIER\']\r\n\r\n获取服务器系统目录： $_SERVER[\'SystemRoot\']\r\n\r\n获取服务器域名：$_SERVER[\'SERVER_NAME\'] (建议使用：$_SERVER[\"HTTP_HOST\"])\r\n\r\n获取用户域名： $_SERVER[\'USERDOMAIN\']\r\n\r\n获取服务器语言： $_SERVER[\'HTTP_ACCEPT_LANGUAGE\']\r\n\r\n获取服务器Web端口： $_SERVER[\'SERVER_PORT\']', '0');
INSERT INTO `be_article` VALUES ('52', '跨域解决方案&部署vue-element-admin遇到的跨域', 'vue-element-admin,跨域', '完美解决vue+php出现跨域的问题', '', '<h2 id=\"h2-u540Cu6E90u7B56u7565\"><a name=\"同源策略\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>同源策略</h2><p><strong>同源策略</strong>是一种约定，由Netscape公司1995年引入浏览器，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。所谓同源是指”协议+域名+端口”三者相同，即便两个不同的域名指向同一个ip地址，也非同源。</p>\r\n<h2 id=\"h2-u5E38u89C1u7684u8DE8u57DFu573Au666F\"><a name=\"常见的跨域场景\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>常见的跨域场景</h2><table>\r\n<thead>\r\n<tr>\r\n<th>URL</th>\r\n<th>说明</th>\r\n<th>是否允许通信</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>www.domain.com/a.js<br>www.domain.com/b.js<br>www.domain.com/lab/c.js\r\n<td>同一域名，不同文件或路径</td>\r\n<td>允许</td>\r\n</tr>\r\n<tr>\r\n<td>www.domain.com:8000/a.js<br>www.domain.com/b.js\r\n<td>同一域名，不同端口</td>\r\n<td>不允许</td>\r\n</tr>\r\n<tr>\r\n<td><a href=\"http://www.domain.com/a.js\">http://www.domain.com/a.js</a><br><a href=\"https://www.domain.com/b.js\">https://www.domain.com/b.js</a></td>\r\n<td>同一域名，不同协议</td>\r\n<td>不允许</td>\r\n</tr>\r\n<tr>\r\n<td><a href=\"http://www.domain.com/a.js\">http://www.domain.com/a.js</a><br><a href=\"http://192.168.4.12/b.js\">http://192.168.4.12/b.js</a></td>\r\n<td>域名和域名对应相同ip</td>\r\n<td>不允许</td>\r\n</tr>\r\n<tr>\r\n<td><a href=\"http://www.domain.com/a.js\">http://www.domain.com/a.js</a><br><a href=\"http://x.domain.com/b.js\">http://x.domain.com/b.js</a><br><a href=\"http://domain.com/c.js\">http://domain.com/c.js</a></td>\r\n<td>主域相同，子域不同</td>\r\n<td>不允许</td>\r\n</tr>\r\n<tr>\r\n<td><a href=\"http://www.domain1.com/a.js\">http://www.domain1.com/a.js</a><br><a href=\"http://www.domain2.com/b.js\">http://www.domain2.com/b.js</a></td>\r\n<td>不同域名</td>\r\n<td>不允许</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"h2--vue-element-admin\"><a name=\"部署vue-element-admin\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>部署vue-element-admin</h2><p>跨域报错：</p>\r\n<p><img src=\"https://i.loli.net/2019/12/20/EaZR8oDv3SJ5V9g.png\" alt=\"X6VAI_RWX9KI4WY_VJ1L5_R.png\">\r\n<p>前端：</p>\r\n<ol>\r\n<li>在<code>axios.js</code>中加上运行跨域<code>axios.defaults.withCredentials = true;</code></li><li>在<code>vue.config.js</code>中检查<code>devServer</code></li></ol>\r\n<pre><code class=\"lang-js\">devServer: {\r\n    port: port,\r\n    open: true,\r\n    https: false,\r\n    proxy: {\r\n      \"/api\": {\r\n        target: process.env.VUE_APP_ApiURL, // 需要请求的地址\r\n        changeOrigin: true, // 是否跨域\r\n        ws: true,\r\n        pathRewrite: {\r\n          \"^/api/\": \"/\" // 替换target中的请求地址\r\n        }\r\n      }\r\n    }\r\n},\r\n</code></pre>\r\n<p>至此，前端任务完成</p>\r\n<p>后端（tp5）：</p>\r\n<ul>\r\n<li>在 application-&gt;tags.php 文件中添加如下代码</li></ul>\r\n<pre><code>// 应用初始化\r\n\'app_init\'     =&gt; [\r\n  \'app\\\\api\\\\behavior\\\\CORS\'\r\n],\r\n</code></pre><ul>\r\n<li>新建文件 application-&gt;api-&gt;behavior-&gt;CORS.php</li></ul>\r\n<p><strong>注意：跨域如果想带cookie（本项目就带有cookie），<code>Access-Control-Allow-Origin</code>就不能设置为<code>*</code>，需要指定具体域名。<br><code>Access-Control-Allow-Credentials: true</code> 和 <code>Access-Control-Allow-Origin: *</code>不能同时使用。</strong></p>\r\n<pre><code class=\"lang-php\">&lt;?php\r\n\r\nnamespace app\\api\\behavior;\r\n\r\nclass CORS\r\n{\r\n    public function appInit(&amp;$params)\r\n    {\r\n        $white_list = [\'https://a.baidu.fun\', \'http://b.baidu.fun\'];\r\n\r\n        if (!empty($_SERVER[\'HTTP_ORIGIN\']) &amp;&amp; in_array($_SERVER[\'HTTP_ORIGIN\'], $white_list)) {\r\n            $http_origin = $_SERVER[\'HTTP_ORIGIN\'];\r\n\r\n            //设置 header 信息\r\n            header(\"Access-Control-Allow-Origin: {$http_origin}\");\r\n            header(\"Access-Control-Allow-Methods\", \"POST,GET\");\r\n            header(\'Access-Control-Allow-Credentials:true\');  //允许访问Cookie\r\n            header(\'Access-Control-Allow-Headers : x-token, Origin, X-Requested-With, Content-Type, Accept\'); //设置Headers\r\n            if (request()-&gt;isOptions()) {\r\n                exit();\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<p>至此，后端任务完成</p>\r\n<h2 id=\"h2-u53EFu80FDu4F1Au9047u89C1u7684u95EEu9898\"><a name=\"可能会遇见的问题\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>可能会遇见的问题</h2><h4 id=\"h4--\"><a name=\"两次请求的头居然都不同:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>两次请求的头居然都不同:</h4><blockquote>\r\n<p>主要是后端问题</p>\r\n</blockquote>\r\n<p><img src=\"https://i.loli.net/2019/12/20/JATS27VE4Q8ZBwN.png\" alt=\"F0HXN_EGQ_5SF22GXPGI_UG.jpg\"><br><img src=\"https://i.loli.net/2019/12/20/s9aQvKWGUkNp7zI.png\" alt=\"F~Y__2F5_9_42_WI32U`8C0.jpg\">\r\n<h4 id=\"h4--getuserinfo-option-\"><a name=\"为何获取getUserInfo接口请求的是option？\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>为何获取getUserInfo接口请求的是option？</h4><p>原因(群里的一位大佬解释)：浏览器的嗅探；浏览器发现你要跨域了，于是决定给api发个options请求看看后台支持不支持跨域，后台如果返回符合要求的响应头，就可以跨域，否则就报错；需要有个中间件处理option请求，这里就是用<code>CORS.php</code>来处理的。</p>\r\n<h4 id=\"h4-u62A5u9519u770Bu56FE\"><a name=\"报错看图\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>报错看图</h4><p><img src=\"https://i.loli.net/2019/12/20/O8nbQoXGCPxgRBZ.png\" alt=\"7_UZJZKNLQ_4X_MDRLUAW_E.png\">\r\n<p>因为我这里自定义了cookie：<code>x-token</code>，所以要在<code>Access-Control-Allow-Headers</code>加上</p>\r\n<h2 id=\"h2-u53C2u8003u8D44u6599\"><a name=\"参考资料\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>参考资料</h2><p><a href=\"https://juejin.im/post/5d1ecb96f265da1b6d404433\">掘金</a>、<a href=\"https://segmentfault.com/a/1190000006962355\">思否</a>、<a href=\"http://element.liuhai.fun/\">fuller-admin</a></p>\r\n', '0', '1576834157', '1576859359', '10000', '53', '1', '100', '1576858247', '0', '0', '1', '', '## 同源策略\r\n\r\n**同源策略**是一种约定，由Netscape公司1995年引入浏览器，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。所谓同源是指\"协议+域名+端口\"三者相同，即便两个不同的域名指向同一个ip地址，也非同源。\r\n\r\n## 常见的跨域场景\r\n\r\nURL |  说明 | 是否允许通信\r\n---|--- | ---\r\nwww.domain.com/a.js<br>www.domain.com/b.js<br>www.domain.com/lab/c.js | 同一域名，不同文件或路径 | 允许\r\nwww.domain.com:8000/a.js<br>www.domain.com/b.js | 同一域名，不同端口 | 不允许\r\nhttp://www.domain.com/a.js<br>https://www.domain.com/b.js | 同一域名，不同协议 | 不允许\r\nhttp://www.domain.com/a.js<br>http://192.168.4.12/b.js | 域名和域名对应相同ip | 不允许\r\nhttp://www.domain.com/a.js<br>http://x.domain.com/b.js<br>http://domain.com/c.js | 主域相同，子域不同 | 不允许\r\nhttp://www.domain1.com/a.js<br>http://www.domain2.com/b.js | 不同域名 | 不允许\r\n\r\n## 部署vue-element-admin\r\n\r\n跨域报错：\r\n\r\n![X6VAI_RWX9KI4WY_VJ1L5_R.png](https://i.loli.net/2019/12/20/EaZR8oDv3SJ5V9g.png)\r\n\r\n前端：\r\n\r\n1. 在`axios.js`中加上运行跨域`axios.defaults.withCredentials = true;`\r\n2. 在`vue.config.js`中检查`devServer`\r\n\r\n```js\r\ndevServer: {\r\n    port: port,\r\n    open: true,\r\n    https: false,\r\n    proxy: {\r\n      \"/api\": {\r\n        target: process.env.VUE_APP_ApiURL, // 需要请求的地址\r\n        changeOrigin: true, // 是否跨域\r\n        ws: true,\r\n        pathRewrite: {\r\n          \"^/api/\": \"/\" // 替换target中的请求地址\r\n        }\r\n      }\r\n    }\r\n},\r\n```\r\n至此，前端任务完成\r\n\r\n后端（tp5）：\r\n\r\n- 在 application->tags.php 文件中添加如下代码\r\n\r\n\r\n```\r\n// 应用初始化\r\n\'app_init\'     => [\r\n  \'app\\\\api\\\\behavior\\\\CORS\'\r\n],\r\n```\r\n\r\n- 新建文件 application->api->behavior->CORS.php\r\n\r\n**注意：跨域如果想带cookie（本项目就带有cookie），`Access-Control-Allow-Origin`就不能设置为`*`，需要指定具体域名。\r\n`Access-Control-Allow-Credentials: true` 和 `Access-Control-Allow-Origin: *`不能同时使用。**\r\n\r\n```php\r\n<?php\r\n\r\nnamespace app\\api\\behavior;\r\n\r\nclass CORS\r\n{\r\n    public function appInit(&$params)\r\n    {\r\n        $white_list = [\'https://a.baidu.fun\', \'http://b.baidu.fun\'];\r\n\r\n        if (!empty($_SERVER[\'HTTP_ORIGIN\']) && in_array($_SERVER[\'HTTP_ORIGIN\'], $white_list)) {\r\n            $http_origin = $_SERVER[\'HTTP_ORIGIN\'];\r\n\r\n            //设置 header 信息\r\n            header(\"Access-Control-Allow-Origin: {$http_origin}\");\r\n            header(\"Access-Control-Allow-Methods\", \"POST,GET\");\r\n            header(\'Access-Control-Allow-Credentials:true\');  //允许访问Cookie\r\n            header(\'Access-Control-Allow-Headers : x-token, Origin, X-Requested-With, Content-Type, Accept\'); //设置Headers\r\n            if (request()->isOptions()) {\r\n                exit();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n至此，后端任务完成\r\n\r\n## 可能会遇见的问题\r\n\r\n#### 两次请求的头居然都不同:\r\n\r\n> 主要是后端问题\r\n\r\n![F0HXN_EGQ_5SF22GXPGI_UG.jpg](https://i.loli.net/2019/12/20/JATS27VE4Q8ZBwN.png)\r\n![F~Y__2F5_9_42_WI32U`8C0.jpg](https://i.loli.net/2019/12/20/s9aQvKWGUkNp7zI.png)\r\n\r\n#### 为何获取getUserInfo接口请求的是option？\r\n\r\n原因(群里的一位大佬解释)：浏览器的嗅探；浏览器发现你要跨域了，于是决定给api发个options请求看看后台支持不支持跨域，后台如果返回符合要求的响应头，就可以跨域，否则就报错；需要有个中间件处理option请求，这里就是用`CORS.php`来处理的。\r\n\r\n#### 报错看图\r\n\r\n![7_UZJZKNLQ_4X_MDRLUAW_E.png](https://i.loli.net/2019/12/20/O8nbQoXGCPxgRBZ.png)\r\n\r\n因为我这里自定义了cookie：`x-token`，所以要在`Access-Control-Allow-Headers`加上\r\n\r\n## 参考资料\r\n[掘金](https://juejin.im/post/5d1ecb96f265da1b6d404433)、[思否](https://segmentfault.com/a/1190000006962355)、[fuller-admin](http://element.liuhai.fun/)\r\n\r\n', '0');
INSERT INTO `be_article` VALUES ('54', '成都---黄龙溪古镇', '', '', '', '<p>周六随处乱逛，景色可嘉。<br><img src=\"http://chuantu.xyz/t6/707/1576986823x992245975.jpg\" alt=\"\"><img src=\"http://chuantu.xyz/t6/707/1576986854x977013264.jpg\" alt=\"\"><span class=\"caption\">入口</span><img src=\"https://i.loli.net/2019/12/22/nEUDHA2PB8JlVIa.jpg\" alt=\"微信图片_20191222114853.jpg\"><img src=\"https://i.loli.net/2019/12/22/6uySWiYkpAQFEOv.jpg\" alt=\"微信图片_20191222114846.jpg\"><img src=\"https://i.loli.net/2019/12/22/1XgSxZPVOoE4Uaf.jpg\" alt=\"微信图片_20191222114856.jpg\"><img src=\"https://i.loli.net/2019/12/22/quCyVPgxsJMQEGt.jpg\" alt=\"微信图片_20191222114858.jpg\"><span class=\"caption\">古风+二次元组合？</span><img src=\"https://i.loli.net/2019/12/22/Clm7dGIZunRfbwa.jpg\" alt=\"微信图片_20191222114843.jpg\"><img src=\"https://i.loli.net/2019/12/22/jNFo76JaHnUh2Cg.jpg\" alt=\"微信图片_20191222114840.jpg\"><img src=\"https://i.loli.net/2019/12/22/1KxLa2g8hwmHpGX.jpg\" alt=\"微信图片_20191222114826.jpg\"><img src=\"https://i.loli.net/2019/12/22/h5ex94WqwzaCsfg.jpg\" alt=\"微信图片_20191222114837.jpg\"><img src=\"https://i.loli.net/2019/12/22/TFhfO7g4xn12mMv.jpg\" alt=\"微信图片_20191222114850.jpg\">\r\n', '0', '1576987006', '1576987371', '10000', '35', '0', '35', '0', '0', '0', '1', '', '周六随处乱逛，景色可嘉。\r\n![](http://chuantu.xyz/t6/707/1576986823x992245975.jpg)![](http://chuantu.xyz/t6/707/1576986854x977013264.jpg)<span class=\"caption\">入口</span>![微信图片_20191222114853.jpg](https://i.loli.net/2019/12/22/nEUDHA2PB8JlVIa.jpg)![微信图片_20191222114846.jpg](https://i.loli.net/2019/12/22/6uySWiYkpAQFEOv.jpg)![微信图片_20191222114856.jpg](https://i.loli.net/2019/12/22/1XgSxZPVOoE4Uaf.jpg)![微信图片_20191222114858.jpg](https://i.loli.net/2019/12/22/quCyVPgxsJMQEGt.jpg)<span class=\"caption\">古风+二次元组合？</span>![微信图片_20191222114843.jpg](https://i.loli.net/2019/12/22/Clm7dGIZunRfbwa.jpg)![微信图片_20191222114840.jpg](https://i.loli.net/2019/12/22/jNFo76JaHnUh2Cg.jpg)![微信图片_20191222114826.jpg](https://i.loli.net/2019/12/22/1KxLa2g8hwmHpGX.jpg)![微信图片_20191222114837.jpg](https://i.loli.net/2019/12/22/h5ex94WqwzaCsfg.jpg)![微信图片_20191222114850.jpg](https://i.loli.net/2019/12/22/TFhfO7g4xn12mMv.jpg)', '0');
INSERT INTO `be_article` VALUES ('56', 'PHP笔记', 'php,php笔记', '', '', '<h2 id=\"h2-php-\"><a name=\"php获取当前在线人数的方法\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>php获取当前在线人数的方法</h2><pre><code>&lt;?php\r\nheader(\'Content-type: text/html; charset=utf-8\');\r\n//author:www.phpernote.com\r\n$online_log=\'count.txt\';//保存在线人数数据的文件, \r\n$timeout=45;//45秒内没有动作，则被认识是掉线 \r\n$entries=file($online_log);//将文件作为一个数组返回，数组中的每个单元都是文件中相应的一行，包括换行符在内\r\n$temp=array();\r\nfor($i=0;$i&lt;count($entries);$i++){\r\n    $entry=explode(\',\',trim($entries[$i]));\r\n    if(($entry[0]!=getenv(\'REMOTE_ADDR\'))&amp;&amp;($entry[1]&gt;time())){\r\n        array_push($temp,$entry[0].\',\'.$entry[1].\'n\');//取出其他浏览者的信息,并去掉超时者,保存进$temp \r\n    }\r\n}\r\narray_push($temp,getenv(\'REMOTE_ADDR\').\',\'.(time()+($timeout)).\"\\n\");//更新浏览者的时间 \r\n$users_online=count($temp);//计算在线人数\r\n$entries=implode(\'\',$temp);\r\n//写入文件 \r\n$fp=fopen($online_log,\'w\');\r\nflock($fp,LOCK_EX);//注意 flock() 不能在NFS以及其他的一些网络文件系统中正常工作 \r\nfputs($fp,$entries);\r\nflock($fp,LOCK_UN);\r\nfclose($fp);\r\necho \'当前有\'.$users_online.\'人在线\';\r\n</code></pre><h2 id=\"h2-php-\"><a name=\"php获取当前内存占用的方法\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>php获取当前内存占用的方法</h2><pre><code class=\"lang-php\">$_LANG[\'memory_info\']=\'占用内存 %0.3f MB\';\r\n/* 内存占用情况 */\r\nif($_LANG[\'memory_info\']&amp;&amp;function_exists(\'memory_get_usage\')){\r\n    echo sprintf($_LANG[\'memory_info\'], memory_get_usage()/1048576);\r\n}\r\n</code></pre>\r\n<h2 id=\"h2-php-\"><a name=\"php过滤垃圾留言(评论)信息功能\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>php过滤垃圾留言(评论)信息功能</h2><pre><code>function isValidData($s){\r\n    if(preg_match(\"/([\\x{4e00}-\\x{9fa5}]|.+)\\\\1{4,}/u\",$s)){\r\n        return false;//同字重复５次以上\r\n    }elseif(preg_match(\"/^[0-9a-zA-Z]*$/\",$s)){\r\n        return false;//全数字，全英文或全数字英文混合的\r\n    }elseif(strlen($s)&lt;10){\r\n        return false;//输入字符长度过短\r\n    }\r\n    return true;\r\n}\r\n</code></pre><h2 id=\"h2--make_by_id-makebyid-\"><a name=\"写一个函数将字符串’make_by_id’装换成’MakeById’\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>写一个函数将字符串’make_by_id’装换成’MakeById’</h2><p>知识准备:</p>\r\n<pre><code>ucfirst() 把字符串首字符转换成大写\r\nexplode() 把字符串分割成数组\r\nimplode() 把数组合并成字符串\r\n</code></pre><pre><code>&lt;?php\r\n\r\nfunction convertStr($str)\r\n{\r\n    $arr = explode(\'_\', $str);\r\n    foreach ($arr as $k =&gt; $v) {\r\n        $arr[$k] = ucfirst($v);\r\n    }\r\n    return implode(\'\', $arr);\r\n}\r\n\r\n$str = \'make_by_id\';\r\necho convertStr($str);\r\n</code></pre><h2 id=\"h2-thinkphp-sql-\"><a name=\"thinkphp打印最后一条sql语句\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>thinkphp打印最后一条sql语句</h2><pre><code class=\"lang-php\">$form=db(\'user\');\r\n$result=$form-&gt;where(array(\'username\'=&gt;\'www.phpernote.com\'))-&gt;select();\r\n//下面就是打印这条sql语句的方法\r\n$form-&gt;getLastSql();\r\n</code></pre>\r\n', '0', '1577349166', '1582604873', '10000', '52', '0', '72', '0', '0', '0', '1', '', '## php获取当前在线人数的方法\r\n\r\n```\r\n<?php\r\nheader(\'Content-type: text/html; charset=utf-8\');\r\n//author:www.phpernote.com\r\n$online_log=\'count.txt\';//保存在线人数数据的文件, \r\n$timeout=45;//45秒内没有动作，则被认识是掉线 \r\n$entries=file($online_log);//将文件作为一个数组返回，数组中的每个单元都是文件中相应的一行，包括换行符在内\r\n$temp=array();\r\nfor($i=0;$i<count($entries);$i++){\r\n	$entry=explode(\',\',trim($entries[$i]));\r\n	if(($entry[0]!=getenv(\'REMOTE_ADDR\'))&&($entry[1]>time())){\r\n		array_push($temp,$entry[0].\',\'.$entry[1].\'n\');//取出其他浏览者的信息,并去掉超时者,保存进$temp \r\n	}\r\n}\r\narray_push($temp,getenv(\'REMOTE_ADDR\').\',\'.(time()+($timeout)).\"\\n\");//更新浏览者的时间 \r\n$users_online=count($temp);//计算在线人数\r\n$entries=implode(\'\',$temp);\r\n//写入文件 \r\n$fp=fopen($online_log,\'w\');\r\nflock($fp,LOCK_EX);//注意 flock() 不能在NFS以及其他的一些网络文件系统中正常工作 \r\nfputs($fp,$entries);\r\nflock($fp,LOCK_UN);\r\nfclose($fp);\r\necho \'当前有\'.$users_online.\'人在线\';\r\n```\r\n\r\n## php获取当前内存占用的方法\r\n\r\n```php\r\n$_LANG[\'memory_info\']=\'占用内存 %0.3f MB\';\r\n/* 内存占用情况 */\r\nif($_LANG[\'memory_info\']&&function_exists(\'memory_get_usage\')){\r\n	echo sprintf($_LANG[\'memory_info\'], memory_get_usage()/1048576);\r\n}\r\n```\r\n\r\n## php过滤垃圾留言(评论)信息功能\r\n```\r\nfunction isValidData($s){\r\n	if(preg_match(\"/([\\x{4e00}-\\x{9fa5}]|.+)\\\\1{4,}/u\",$s)){\r\n		return false;//同字重复５次以上\r\n	}elseif(preg_match(\"/^[0-9a-zA-Z]*$/\",$s)){\r\n		return false;//全数字，全英文或全数字英文混合的\r\n	}elseif(strlen($s)<10){\r\n		return false;//输入字符长度过短\r\n	}\r\n	return true;\r\n}\r\n```\r\n\r\n## 写一个函数将字符串\'make_by_id\'装换成\'MakeById\'\r\n\r\n知识准备:\r\n\r\n```\r\nucfirst() 把字符串首字符转换成大写\r\nexplode() 把字符串分割成数组\r\nimplode() 把数组合并成字符串\r\n```\r\n\r\n```\r\n<?php\r\n\r\nfunction convertStr($str)\r\n{\r\n    $arr = explode(\'_\', $str);\r\n    foreach ($arr as $k => $v) {\r\n        $arr[$k] = ucfirst($v);\r\n    }\r\n    return implode(\'\', $arr);\r\n}\r\n\r\n$str = \'make_by_id\';\r\necho convertStr($str);\r\n```\r\n## thinkphp打印最后一条sql语句\r\n\r\n```php\r\n$form=db(\'user\');\r\n$result=$form->where(array(\'username\'=>\'www.phpernote.com\'))->select();\r\n//下面就是打印这条sql语句的方法\r\n$form->getLastSql();\r\n```', '0');
INSERT INTO `be_article` VALUES ('57', '12306的搭建教程', '12306', '', 'https://www.liuhai.fun/upload/20200223/a76950afe9599b4eca9cdf968d46eff4.png', '<blockquote>\r\n<p>系统：Linux（CentOS7）</p>\r\n</blockquote>\r\n<h2 id=\"h2-u524Du63D0u6761u4EF6\"><a name=\"前提条件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>前提条件</h2><ol>\r\n<li>请确认你安装的docker版本为18.09及以上: <code>docker -v</code></li><li>请确认你安装的docker-compose版本为1.23.2及以上: <code>docker-compose -v</code></li><li>请根据自己需要修改好配置文件:<code>TickerConfig.py</code></li><li>请修改配置文件TickerConfig.py中的变量<code>AUTO_CODE_TYPE</code>和<code>HOST</code>，<code>AUTO_CODE_TYPE</code>改为3, HOST改为<code>\"captcha:80\"</code>（这里很重要，这是本地打码服务器的配置）</li></ol>\r\n<h2 id=\"h2-u7B80u5355u6B65u9AA4\"><a name=\"简单步骤\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>简单步骤</h2><p><img width=\"200\" src=\"https://i.loli.net/2019/12/27/u6YFbviRS8DGBAP.png\" title=\"1\" alt=\"1\">\r\n<h2 id=\"h2-u8BE6u7EC6u6B65u9AA4\"><a name=\"详细步骤\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>详细步骤</h2><h3 id=\"h3-1-docker\"><a name=\"1.安装docker\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.安装docker</h3><pre><code class=\"lang-bash\"># 通过yum源安装docker\r\nyum -y install docker\r\n# 启动docker\r\nsystemctl start docker\r\n# 开机自启\r\nsudo systemctl enable docker\r\n# 查看版本\r\ndocker -v\r\n</code></pre>\r\n<h3 id=\"h3-2-docker-compose\"><a name=\"2.安装docker-compose\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.安装docker-compose</h3><pre><code class=\"lang-bash\"># 下载Docker-Compose\r\nsudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\r\n# 安装Docker-Compose\r\nsudo chmod +x /usr/local/bin/docker-compose\r\n# 查看版本\r\ndocker-compose -v\r\n# 卸载\r\nsudo rm /usr/local/bin/docker-compose\r\n</code></pre>\r\n<h3 id=\"h3-3-git\"><a name=\"3. 安装git\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3. 安装git</h3><pre><code class=\"lang-bash\"># 安装git\r\nyum install git\r\n# 查看版本\r\ngit --version\r\n</code></pre>\r\n<h3 id=\"h3-4-12306\"><a name=\"4.安装12306\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.安装12306</h3><blockquote>\r\n<p>使用最新包</p>\r\n</blockquote>\r\n<p>进入目录，下载</p>\r\n<pre><code class=\"lang-bash\">git clone https://github.com/Im-Kevin/12306.git\r\n</code></pre>\r\n<p><img src=\"https://i.loli.net/2019/12/26/Y5eScApNnlBKrdW.png\" alt=\"image.png\">\r\n<p><img src=\"https://i.loli.net/2019/12/26/uHh2yPSMmNOdATE.png\" alt=\"image.png\">\r\n<h3 id=\"h3-5-\"><a name=\"5.配置并使用\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5.配置并使用</h3><pre><code class=\"lang-bash\"># 进入目录\r\ncd 12306\r\n# 修改配置\r\nvi TickerConfig.py\r\n# 保存后开始抢票\r\ndocker-compose up --build -d\r\n# 停止抢票\r\ndocker-compose down\r\n# 查看抢票log\r\ndocker logs --follow ticket\r\n</code></pre>\r\n<h3 id=\"h3-6-tickerconfig-py-\"><a name=\"6.TickerConfig.py 必填参数\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>6.TickerConfig.py 必填参数</h3><pre><code class=\"lang-bash\"># 填入需要购买的车次(list)，\"G1353\"\r\n# 修改车次填入规则，注：(以前设置的车次逻辑不变)，如果车次填入为空，那么就是当日乘车所有车次都纳入筛选返回\r\n# 不填车次是整个list为空才算，如果不是为空，依然会判断车次的，这种是错误的写法 [\"\"], 正确的写法 []\r\nSTATION_TRAINS = [\"G1353\",\"A1687\",\"C2020\"]\r\n\r\n# 时间范围 如果所有时间段,则用 00:00-23:59\r\nSTART_TIME = \"00:00\"\r\nEND_TIME = \"23:59\"\r\n\r\n# 出发日期(list) \"2018-01-06\", \"2018-01-07\"\r\nSTATION_DATES = [\r\n    \"2020-01-18\"\r\n]\r\n# 出发城市，比如深圳北，就填深圳就搜得到\r\nFROM_STATION = \"广州南\"\r\n\r\n# 到达城市 比如深圳北，就填深圳就搜得到\r\nTO_STATION = \"隆回\"\r\n\r\n# 座位(list) 多个座位ex:\r\n# \"商务座\",\r\n# \"一等座\",\r\n# \"二等座\",\r\n# \"特等座\",\r\n# \"软卧\",\r\n# \"硬卧\",\r\n# \"硬座\",\r\n# \"无座\",\r\n# \"动卧\",\r\nSET_TYPE = [\"二等座\"]\r\n\r\n# 乘车人(list) 多个乘车人ex:\r\n# \"张三\",\r\n# \"李四\"\r\nTICKET_PEOPLES = [\"张三\"]\r\n\r\n# 12306登录账号\r\nUSER = \"\"\r\nPWD = \"\"\r\n\r\n# 云打码服务器地址\r\nHOST = \"120.24.62.193\"\r\n\r\n# 如果COOKIE_TYPE=3, 则需配置RAIL_EXPIRATION、RAIL_DEVICEID的值\r\nRAIL_EXPIRATION = \"\"\r\nRAIL_DEVICEID = \"\"\r\n</code></pre>\r\n<h3 id=\"h3--\"><a name=\"🎐 可能遇到的问题（持续更新中…）\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>🎐 可能遇到的问题（持续更新中…）</h3><ul>\r\n<li>一定要去下新版本的包</li><li>更改了<code>TickerConfig.py</code>最好重启下（先关闭再开启）</li><li>下载太慢，把<code>VPN</code>修改为<strong>全局模式</strong>（不是硬性要求）</li><li>headers-Cookies；把<code>TickerConfig.py</code>文件里面的<code>RAIL_DEVICEID,RAIL_EXPIRATION</code>填上<br><img src=\"https://i.loli.net/2019/12/27/FyIYkj7wSQ4mKgv.png\" title=\"报错图片\" alt=\"报错图片\"><span class=\"caption\">报错图片</span></li></ul>\r\n<p><img src=\"https://i.loli.net/2019/12/27/mAb68G5vB3ZpQri.png\" title=\"RAIL_DEVICEID,RAIL_EXPIRATION所在位置\" alt=\"RAIL_DEVICEID,RAIL_EXPIRATION所在位置\"><span class=\"caption\">RAIL_DEVICEID,RAIL_EXPIRATION所在位置</span></p>\r\n<ul>\r\n<li>云打码服务器：<a href=\"https://github.com/testerSunshine/12306/issues/446\">https://github.com/testerSunshine/12306/issues/446</a></li></ul>\r\n<h2 id=\"h2--\"><a name=\"🎊 成功页面\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>🎊 成功页面</h2><p><img src=\"https://i.loli.net/2019/12/27/q4rmaBpvgDQlUeA.png\" alt=\"image.png\">\r\n<h2 id=\"h2--\"><a name=\"🎉 最后\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>🎉 最后</h2><p>记得为大佬献上Star：<a href=\"https://github.com/testerSunshine/12306\">https://github.com/testerSunshine/12306</a></p>\r\n', '0', '1577376544', '1582471819', '10000', '53', '0', '794', '0', '0', '0', '1', '/upload/20200223/a76950afe9599b4eca9cdf968d46eff4.png', '> 系统：Linux（CentOS7）\r\n\r\n## 前提条件\r\n1. 请确认你安装的docker版本为18.09及以上: `docker -v`\r\n2. 请确认你安装的docker-compose版本为1.23.2及以上: `docker-compose -v`\r\n3. 请根据自己需要修改好配置文件:`TickerConfig.py`\r\n4. 请修改配置文件TickerConfig.py中的变量`AUTO_CODE_TYPE`和`HOST`，`AUTO_CODE_TYPE`改为3, HOST改为`\"captcha:80\"`（这里很重要，这是本地打码服务器的配置）\r\n\r\n\r\n## 简单步骤\r\n<img\r\nwidth=\"200\" src=\"https://i.loli.net/2019/12/27/u6YFbviRS8DGBAP.png\" title=\"1\" alt=\"1\">\r\n\r\n## 详细步骤\r\n\r\n### 1.安装docker\r\n\r\n```bash\r\n# 通过yum源安装docker\r\nyum -y install docker\r\n# 启动docker\r\nsystemctl start docker\r\n# 开机自启\r\nsudo systemctl enable docker\r\n# 查看版本\r\ndocker -v\r\n```\r\n\r\n### 2.安装docker-compose\r\n\r\n```bash\r\n# 下载Docker-Compose\r\nsudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\r\n# 安装Docker-Compose\r\nsudo chmod +x /usr/local/bin/docker-compose\r\n# 查看版本\r\ndocker-compose -v\r\n# 卸载\r\nsudo rm /usr/local/bin/docker-compose\r\n```\r\n\r\n### 3. 安装git\r\n\r\n```bash\r\n# 安装git\r\nyum install git\r\n# 查看版本\r\ngit --version\r\n```\r\n### 4.安装12306\r\n\r\n> 使用最新包\r\n\r\n进入目录，下载\r\n```bash\r\ngit clone https://github.com/Im-Kevin/12306.git\r\n```\r\n\r\n![image.png](https://i.loli.net/2019/12/26/Y5eScApNnlBKrdW.png)\r\n\r\n![image.png](https://i.loli.net/2019/12/26/uHh2yPSMmNOdATE.png)\r\n\r\n### 5.配置并使用\r\n\r\n```bash\r\n# 进入目录\r\ncd 12306\r\n# 修改配置\r\nvi TickerConfig.py\r\n# 保存后开始抢票\r\ndocker-compose up --build -d\r\n# 停止抢票\r\ndocker-compose down\r\n# 查看抢票log\r\ndocker logs --follow ticket\r\n```\r\n\r\n### 6.TickerConfig.py 必填参数\r\n\r\n```bash\r\n# 填入需要购买的车次(list)，\"G1353\"\r\n# 修改车次填入规则，注：(以前设置的车次逻辑不变)，如果车次填入为空，那么就是当日乘车所有车次都纳入筛选返回\r\n# 不填车次是整个list为空才算，如果不是为空，依然会判断车次的，这种是错误的写法 [\"\"], 正确的写法 []\r\nSTATION_TRAINS = [\"G1353\",\"A1687\",\"C2020\"]\r\n\r\n# 时间范围 如果所有时间段,则用 00:00-23:59\r\nSTART_TIME = \"00:00\"\r\nEND_TIME = \"23:59\"\r\n\r\n# 出发日期(list) \"2018-01-06\", \"2018-01-07\"\r\nSTATION_DATES = [\r\n    \"2020-01-18\"\r\n]\r\n# 出发城市，比如深圳北，就填深圳就搜得到\r\nFROM_STATION = \"广州南\"\r\n\r\n# 到达城市 比如深圳北，就填深圳就搜得到\r\nTO_STATION = \"隆回\"\r\n\r\n# 座位(list) 多个座位ex:\r\n# \"商务座\",\r\n# \"一等座\",\r\n# \"二等座\",\r\n# \"特等座\",\r\n# \"软卧\",\r\n# \"硬卧\",\r\n# \"硬座\",\r\n# \"无座\",\r\n# \"动卧\",\r\nSET_TYPE = [\"二等座\"]\r\n\r\n# 乘车人(list) 多个乘车人ex:\r\n# \"张三\",\r\n# \"李四\"\r\nTICKET_PEOPLES = [\"张三\"]\r\n\r\n# 12306登录账号\r\nUSER = \"\"\r\nPWD = \"\"\r\n\r\n# 云打码服务器地址\r\nHOST = \"120.24.62.193\"\r\n\r\n# 如果COOKIE_TYPE=3, 则需配置RAIL_EXPIRATION、RAIL_DEVICEID的值\r\nRAIL_EXPIRATION = \"\"\r\nRAIL_DEVICEID = \"\"\r\n```\r\n### 🎐 可能遇到的问题（持续更新中...）\r\n\r\n- 一定要去下新版本的包\r\n- 更改了`TickerConfig.py `最好重启下（先关闭再开启）\r\n- 下载太慢，把`VPN`修改为**全局模式**（不是硬性要求）\r\n- headers-Cookies；把`TickerConfig.py`文件里面的`RAIL_DEVICEID,RAIL_EXPIRATION`填上\r\n<img src=\"https://i.loli.net/2019/12/27/FyIYkj7wSQ4mKgv.png\" title=\"报错图片\" alt=\"报错图片\"><span class=\"caption\">报错图片</span>\r\n\r\n<img src=\"https://i.loli.net/2019/12/27/mAb68G5vB3ZpQri.png\" title=\"RAIL_DEVICEID,RAIL_EXPIRATION所在位置\" alt=\"RAIL_DEVICEID,RAIL_EXPIRATION所在位置\"><span class=\"caption\">RAIL_DEVICEID,RAIL_EXPIRATION所在位置</span>\r\n\r\n- 云打码服务器：https://github.com/testerSunshine/12306/issues/446\r\n\r\n## 🎊 成功页面\r\n\r\n![image.png](https://i.loli.net/2019/12/27/q4rmaBpvgDQlUeA.png)\r\n\r\n## 🎉 最后\r\n\r\n记得为大佬献上Star：https://github.com/testerSunshine/12306', '0');
INSERT INTO `be_article` VALUES ('58', 'MySQL 快速创建千万级测试数据', 'mysql', '', '', '<h2 id=\"h2-u80CCu666F\"><a name=\"背景\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>背景</h2><p>在进行查询操作的性能测试或者 <code>sql</code> 优化时，我们经常需要在线下环境构建大量的基础数据供我们测试，这时需要大量的测试数据</p>\r\n<p>创建测试数据的方式</p>\r\n<pre><code>1. 编写代码，通过代码批量插库（步骤太繁琐，性能不高，不推荐）\r\n2. 编写存储过程和函数执行 (繁琐)\r\n3. 临时数据表方式执行（强烈推荐, 本文用实例演示）\r\n4. 一行一行手动插入 (当我没说~)\r\n5. 从生产环境复制 (不现实)\r\n</code></pre><p>下面我们用临时数据表方式实现快速创建千万级测试数据</p>\r\n<p><strong>1.创建基础表结构</strong></p>\r\n<pre><code>CREATE TABLE `t_user` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `c_user_id` varchar(36) NOT NULL DEFAULT \'\',\r\n  `c_name` varchar(22) NOT NULL DEFAULT \'\',\r\n  `c_province_id` int(11) NOT NULL,\r\n  `c_city_id` int(11) NOT NULL,\r\n  `create_time` datetime NOT NULL,\r\n  PRIMARY KEY (`id`),\r\n  KEY `idx_user_id` (`c_user_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\r\n</code></pre><p><strong>2.创建临时数据表 <code>tmp_table</code></strong></p>\r\n<p>后续会用临时表的数据填充到基础表里</p>\r\n<pre><code>CREATE TABLE tmp_table (\r\n  id INT,\r\n  PRIMARY KEY (id)\r\n);\r\n</code></pre><p><strong>3.用 <code>python</code> 或者 <code>bash</code> 生成100w条数据的文件</strong></p>\r\n<p>python(推荐):</p>\r\n<pre><code>python -c \"for i in range(1, 1+1000000): print(i)\" &gt; base.txt\r\n</code></pre><p>bash(不推荐，会比较慢):</p>\r\n<pre><code>bash i=1; while [ $i -le 1000000 ]; do echo $i; let i+=1; done  &gt; base.txt\r\n</code></pre><p><strong>4.登录 <code>MySQL</code> 导入数据到临时表 <code>tmp_table</code> 中</strong></p>\r\n<pre><code>mysql&gt; load data infile \'/Users/Hoe/temp/base.txt\' replace into table tmp_table;\r\nQuery OK, 1000000 rows affected (2.55 sec)\r\nRecords: 1000000  Deleted: 0  Skipped: 0  Warnings: 0\r\n</code></pre><p>Windows 系统看这里, 绝对路径需要 <code>\\\\</code> 双斜杠 如:<code>C:\\\\Users\\\\Hoe\\\\base.txt</code></p>\r\n<pre><code>mysql&gt; load data infile \'C:\\\\Users\\\\Hoe\\\\base.txt\' replace into table tmp_table;\r\n</code></pre><p>出坑记录</p>\r\n<hr>\r\n<p>导入数据时有可能会报错<br>原因是 <code>mysql</code> 默认没有开 <code>secure_file_priv</code>（这个参数用来限制数据导入和导出操作这些操作需要用户具有FILE权限。 ）</p>\r\n<p>报错如下:</p>\r\n<pre><code>mysql&gt; load data infile \'/Users/Hoe/temp/base.txt\' replace into table tmp_table;\r\nERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement\r\n</code></pre><p>解决办法：在mysql的配置文件中（my.ini 或者 my.conf）中添加 <code>secure_file_priv = /Users/Hoe/temp/</code>, 然后重启 <code>mysql</code></p>\r\n<p>查看配置是否生效：</p>\r\n<pre><code>mysql&gt; show variables like \'%secure%\';\r\n+------------------+------------------+\r\n| Variable_name    |      Value       |\r\n+------------------+------------------+\r\n| secure_auth      | OFF              |\r\n| secure_file_priv | /Users/Hoe/temp/ |\r\n+------------------+------------------+\r\n2 rows in set (0.00 sec)\r\n</code></pre><p><strong>5.插入数据到主表</strong><br>以临时表为基础数据，插入数据到 <code>t_user</code> 中，100W数据插入需要10.37s</p>\r\n<pre><code>mysql&gt; INSERT INTO t_user\r\n    -&gt;   SELECT\r\n    -&gt;     id,\r\n    -&gt;     uuid(),\r\n    -&gt;     CONCAT(\'userNickName\', id),\r\n    -&gt;     FLOOR(Rand() * 1000),\r\n    -&gt;     FLOOR(Rand() * 100),\r\n    -&gt;     NOW()\r\n    -&gt;   FROM\r\n    -&gt;     tmp_table;\r\nQuery OK, 1000000 rows affected (10.37 sec)\r\nRecords: 1000000  Duplicates: 0  Warnings: 0\r\n</code></pre><p>更新创建时间字段, 让创建时间字段变成随机</p>\r\n<pre><code>mysql&gt; UPDATE t_user SET create_time=date_add(create_time, interval FLOOR(1 + (RAND() * 7)) year);\r\nQuery OK, 1000000 rows affected (4.77 sec)\r\nRows matched: 1000000  Changed: 1000000  Warnings: 0\r\n</code></pre><p>完成~! 100W条数据瞬间搞定(速度由电脑配置决定)</p>\r\n<p>记得把之前生成的 <code>base.txt</code> 和临时表 <code>tmp_table</code> 删除</p>\r\n<pre><code>mysql&gt; select * from t_user limit 10;\r\n+----+--------------------------------------+----------------+---------------+-----------+---------------------+\r\n| id | c_user_id                            | c_name         | c_province_id | c_city_id | create_time         |\r\n+----+--------------------------------------+----------------+---------------+-----------+---------------------+\r\n|  1 | 6ba472dc-7c78-11e9-9555-64006a06b70a | userNickName1  |           197 |         7 | 2028-05-22 18:00:25 |\r\n|  2 | 6ba476ec-7c78-11e9-9555-64006a06b70a | userNickName2  |           793 |        73 | 2028-05-22 18:00:25 |\r\n|  3 | 6ba47775-7c78-11e9-9555-64006a06b70a | userNickName3  |           297 |        28 | 2025-05-22 18:00:25 |\r\n|  4 | 6ba477cc-7c78-11e9-9555-64006a06b70a | userNickName4  |           512 |        71 | 2033-05-22 18:00:25 |\r\n|  5 | 6ba4781c-7c78-11e9-9555-64006a06b70a | userNickName5  |            53 |        11 | 2024-05-22 18:00:25 |\r\n|  6 | 6ba47873-7c78-11e9-9555-64006a06b70a | userNickName6  |           410 |        70 | 2028-05-22 18:00:25 |\r\n|  7 | 6ba478c0-7c78-11e9-9555-64006a06b70a | userNickName7  |           307 |        41 | 2026-05-22 18:00:25 |\r\n|  8 | 6ba4790a-7c78-11e9-9555-64006a06b70a | userNickName8  |           149 |        50 | 2026-05-22 18:00:25 |\r\n|  9 | 6ba47960-7c78-11e9-9555-64006a06b70a | userNickName9  |            76 |        86 | 2026-05-22 18:00:25 |\r\n| 10 | 6ba479aa-7c78-11e9-9555-64006a06b70a | userNickName10 |           107 |        93 | 2024-05-22 18:00:25 |\r\n+----+--------------------------------------+----------------+---------------+-----------+---------------------+\r\n10 rows in set (0.00 sec)\r\n</code></pre>', '0', '1582195137', '1582604900', '10000', '54', '0', '29', '0', '0', '0', '1', '', '## 背景\r\n在进行查询操作的性能测试或者 `sql` 优化时，我们经常需要在线下环境构建大量的基础数据供我们测试，这时需要大量的测试数据\r\n\r\n创建测试数据的方式\r\n```\r\n1. 编写代码，通过代码批量插库（步骤太繁琐，性能不高，不推荐）\r\n2. 编写存储过程和函数执行 (繁琐)\r\n3. 临时数据表方式执行（强烈推荐, 本文用实例演示）\r\n4. 一行一行手动插入 (当我没说~)\r\n5. 从生产环境复制 (不现实)\r\n```\r\n\r\n下面我们用临时数据表方式实现快速创建千万级测试数据\r\n\r\n**1.创建基础表结构**\r\n\r\n```\r\nCREATE TABLE `t_user` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `c_user_id` varchar(36) NOT NULL DEFAULT \'\',\r\n  `c_name` varchar(22) NOT NULL DEFAULT \'\',\r\n  `c_province_id` int(11) NOT NULL,\r\n  `c_city_id` int(11) NOT NULL,\r\n  `create_time` datetime NOT NULL,\r\n  PRIMARY KEY (`id`),\r\n  KEY `idx_user_id` (`c_user_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\r\n```\r\n**2.创建临时数据表 `tmp_table`**\r\n\r\n后续会用临时表的数据填充到基础表里\r\n\r\n```\r\nCREATE TABLE tmp_table (\r\n  id INT,\r\n  PRIMARY KEY (id)\r\n);\r\n```\r\n\r\n**3.用 `python` 或者 `bash` 生成100w条数据的文件**\r\n\r\npython(推荐):\r\n\r\n```\r\npython -c \"for i in range(1, 1+1000000): print(i)\" > base.txt\r\n```\r\nbash(不推荐，会比较慢):\r\n\r\n```\r\nbash i=1; while [ $i -le 1000000 ]; do echo $i; let i+=1; done  > base.txt\r\n```\r\n\r\n**4.登录 `MySQL` 导入数据到临时表 `tmp_table` 中**\r\n\r\n```\r\nmysql> load data infile \'/Users/Hoe/temp/base.txt\' replace into table tmp_table;\r\nQuery OK, 1000000 rows affected (2.55 sec)\r\nRecords: 1000000  Deleted: 0  Skipped: 0  Warnings: 0\r\n```\r\n\r\nWindows 系统看这里, 绝对路径需要 `\\\\` 双斜杠 如:`C:\\\\Users\\\\Hoe\\\\base.txt`\r\n\r\n```\r\nmysql> load data infile \'C:\\\\Users\\\\Hoe\\\\base.txt\' replace into table tmp_table;\r\n```\r\n\r\n出坑记录\r\n\r\n---\r\n\r\n导入数据时有可能会报错\r\n原因是 `mysql` 默认没有开 `secure_file_priv`（这个参数用来限制数据导入和导出操作这些操作需要用户具有FILE权限。 ）\r\n\r\n报错如下:\r\n\r\n```\r\nmysql> load data infile \'/Users/Hoe/temp/base.txt\' replace into table tmp_table;\r\nERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement\r\n```\r\n\r\n解决办法：在mysql的配置文件中（my.ini 或者 my.conf）中添加 `secure_file_priv = /Users/Hoe/temp/`, 然后重启 `mysql`\r\n\r\n查看配置是否生效：\r\n\r\n```\r\nmysql> show variables like \'%secure%\';\r\n+------------------+------------------+\r\n| Variable_name    |      Value       |\r\n+------------------+------------------+\r\n| secure_auth      | OFF              |\r\n| secure_file_priv | /Users/Hoe/temp/ |\r\n+------------------+------------------+\r\n2 rows in set (0.00 sec)\r\n```\r\n\r\n**5.插入数据到主表**\r\n以临时表为基础数据，插入数据到 `t_user` 中，100W数据插入需要10.37s\r\n\r\n```\r\nmysql> INSERT INTO t_user\r\n    ->   SELECT\r\n    ->     id,\r\n    ->     uuid(),\r\n    ->     CONCAT(\'userNickName\', id),\r\n    ->     FLOOR(Rand() * 1000),\r\n    ->     FLOOR(Rand() * 100),\r\n    ->     NOW()\r\n    ->   FROM\r\n    ->     tmp_table;\r\nQuery OK, 1000000 rows affected (10.37 sec)\r\nRecords: 1000000  Duplicates: 0  Warnings: 0\r\n```\r\n\r\n更新创建时间字段, 让创建时间字段变成随机\r\n\r\n```\r\nmysql> UPDATE t_user SET create_time=date_add(create_time, interval FLOOR(1 + (RAND() * 7)) year);\r\nQuery OK, 1000000 rows affected (4.77 sec)\r\nRows matched: 1000000  Changed: 1000000  Warnings: 0\r\n```\r\n完成~! 100W条数据瞬间搞定(速度由电脑配置决定)\r\n\r\n记得把之前生成的 `base.txt` 和临时表 `tmp_table` 删除\r\n\r\n```\r\nmysql> select * from t_user limit 10;\r\n+----+--------------------------------------+----------------+---------------+-----------+---------------------+\r\n| id | c_user_id                            | c_name         | c_province_id | c_city_id | create_time         |\r\n+----+--------------------------------------+----------------+---------------+-----------+---------------------+\r\n|  1 | 6ba472dc-7c78-11e9-9555-64006a06b70a | userNickName1  |           197 |         7 | 2028-05-22 18:00:25 |\r\n|  2 | 6ba476ec-7c78-11e9-9555-64006a06b70a | userNickName2  |           793 |        73 | 2028-05-22 18:00:25 |\r\n|  3 | 6ba47775-7c78-11e9-9555-64006a06b70a | userNickName3  |           297 |        28 | 2025-05-22 18:00:25 |\r\n|  4 | 6ba477cc-7c78-11e9-9555-64006a06b70a | userNickName4  |           512 |        71 | 2033-05-22 18:00:25 |\r\n|  5 | 6ba4781c-7c78-11e9-9555-64006a06b70a | userNickName5  |            53 |        11 | 2024-05-22 18:00:25 |\r\n|  6 | 6ba47873-7c78-11e9-9555-64006a06b70a | userNickName6  |           410 |        70 | 2028-05-22 18:00:25 |\r\n|  7 | 6ba478c0-7c78-11e9-9555-64006a06b70a | userNickName7  |           307 |        41 | 2026-05-22 18:00:25 |\r\n|  8 | 6ba4790a-7c78-11e9-9555-64006a06b70a | userNickName8  |           149 |        50 | 2026-05-22 18:00:25 |\r\n|  9 | 6ba47960-7c78-11e9-9555-64006a06b70a | userNickName9  |            76 |        86 | 2026-05-22 18:00:25 |\r\n| 10 | 6ba479aa-7c78-11e9-9555-64006a06b70a | userNickName10 |           107 |        93 | 2024-05-22 18:00:25 |\r\n+----+--------------------------------------+----------------+---------------+-----------+---------------------+\r\n10 rows in set (0.00 sec)\r\n```\r\n', '0');
INSERT INTO `be_article` VALUES ('59', 'CentOS7下安装redis和其扩展phpredis', 'redis,服务器', '', 'https://www.liuhai.fun/upload/20200220/305485e6cd08f6e64d6a017517bb61be.jpg', '<h2 id=\"h2-u5B98u65B9u4E2Du6587u6587u6863\"><a name=\"官方中文文档\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>官方中文文档</h2><p><a href=\"http://www.redis.cn/download.html\">http://www.redis.cn/download.html</a></p>\r\n<h3 id=\"h3--redis\"><a name=\"安装redis\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>安装redis</h3><pre><code>$ cd /usr/local\r\n$ wget http://download.redis.io/releases/redis-5.0.5.tar.gz\r\n$ tar xzf redis-5.0.5.tar.gz\r\n$ cd redis-5.0.5\r\n$ make\r\n$ service nginx restart\r\n$ ps aux | grep redis # 查看是否运行\r\n</code></pre><h3 id=\"h3--phpredis\"><a name=\"安装phpredis\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>安装phpredis</h3><blockquote>\r\n<p>转载于 <a href=\"https://www.cnblogs.com/haozhen/p/9851712.html\">https://www.cnblogs.com/haozhen/p/9851712.html</a></p>\r\n</blockquote>\r\n<pre><code>$ wget https://github.com/phpredis/phpredis/archive/4.0.2.tar.gz\r\n$ tar -zxvf phpredis-4.0.2.tar.gz\r\n$ cd phpredis-4.0.2\r\n$ /usr/local/php/bin/phpize              # php安装后的路径\r\n$ ./configure --with-php-config=/usr/local/php/bin/php-config\r\n$ make &amp;&amp; make install\r\n$ echo \'extension=redis.so\' &gt;&gt; /usr/local/php/etc/php.ini\r\n$ /etc/init.d/php-fpm restart # 重启php-fpm服务\r\n$ $ php -m | grep redis 【redis】 # 查看redis扩展是否安装成功\r\n</code></pre><h3 id=\"h3-u5B89u88C5u4E2Du53EFu80FDu9047u5230u7684u95EEu9898\"><a name=\"安装中可能遇到的问题\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>安装中可能遇到的问题</h3><ol>\r\n<li><a href=\"https://www.cnblogs.com/two-bees/p/10730465.html\">php -v查看到版本与phpinfo()版本不一致问题</a></li></ol>\r\n<h2 id=\"h2-u7CFBu7EDFu6587u4EF6\"><a name=\"系统文件\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>系统文件</h2><table>\r\n<thead>\r\n<tr>\r\n<th>值</th>\r\n<th>说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>redis-benchmark</td>\r\n<td>redis性能测试工具</td>\r\n</tr>\r\n<tr>\r\n<td>redis-check-aof</td>\r\n<td>检查aof日志</td>\r\n</tr>\r\n<tr>\r\n<td>redis-check-dump</td>\r\n<td>检查rbd日志</td>\r\n</tr>\r\n<tr>\r\n<td>redis-cli</td>\r\n<td>连接用的客户端</td>\r\n</tr>\r\n<tr>\r\n<td>redis-server</td>\r\n<td>redis服务进程</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2 id=\"h2-redis-\"><a name=\"redis目录\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>redis目录</h2><pre><code>cd /var/redis-5.0.5/\r\n</code></pre><h3 id=\"h3-u542Fu52A8\"><a name=\"启动\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>启动</h3><pre><code>src/redis-server redis.conf【推荐】\r\n</code></pre><h3 id=\"h3--redis-\"><a name=\"使用内置的客户端与Redis进行交互:\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>使用内置的客户端与Redis进行交互:</h3><pre><code>src/redis-cli\r\n</code></pre><h2 id=\"h2-u540Eu53F0u8FD0u884C\"><a name=\"后台运行\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>后台运行</h2><p>让redis以后台进程的形式运行,编辑 redis.conf 配置文件，<strong>daemonize yes</strong></p>\r\n<h2 id=\"h2-u8BBEu7F6Eu5168u5C40u53D8u91CF\"><a name=\"设置全局变量\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>设置全局变量</h2><p>进入src</p>\r\n<p>用cp命令复制到usr目录下运行，可以使用redis-server，redis-cli启动</p>\r\n<pre><code>cp redis-server /usr/local/bin/\r\n\r\ncp redis-cli /usr/local/bin/\r\n</code></pre><h2 id=\"h2-u662Fu5426u8FD0u884C\"><a name=\"是否运行\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>是否运行</h2><pre><code>ps aux | grep redis\r\n</code></pre><h2 id=\"h2--redis-\"><a name=\"关闭redis进程\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>关闭redis进程</h2><pre><code># 首先使用ps -aux | grep redis查看redis进程\r\n[root@iZwz991stxdwj560bfmadtZ src]# ps -aux | grep redis\r\nroot     18714  0.0  0.1 141752  2008 ?        Ssl  13:07   0:00 ./redis-server 127.0.0.1:6379\r\nroot     18719  0.0  0.0 112644   968 pts/0    R+   13:09   0:00 grep --color=auto redis\r\n\r\n\r\n# 使用kill命令杀死进程\r\n[root@iZwz991stxdwj560bfmadtZ src]# kill 18714\r\n</code></pre>', '1', '1582208048', '1582209334', '10000', '53', '0', '26', '0', '1583035769', '0', '1', '/upload/20200220/305485e6cd08f6e64d6a017517bb61be.jpg', '## 官方中文文档\r\n\r\nhttp://www.redis.cn/download.html\r\n\r\n### 安装redis\r\n```\r\n$ cd /usr/local\r\n$ wget http://download.redis.io/releases/redis-5.0.5.tar.gz\r\n$ tar xzf redis-5.0.5.tar.gz\r\n$ cd redis-5.0.5\r\n$ make\r\n$ service nginx restart\r\n$ ps aux | grep redis # 查看是否运行\r\n```\r\n\r\n### 安装phpredis\r\n\r\n> 转载于 https://www.cnblogs.com/haozhen/p/9851712.html\r\n\r\n```\r\n$ wget https://github.com/phpredis/phpredis/archive/4.0.2.tar.gz\r\n$ tar -zxvf phpredis-4.0.2.tar.gz\r\n$ cd phpredis-4.0.2\r\n$ /usr/local/php/bin/phpize              # php安装后的路径\r\n$ ./configure --with-php-config=/usr/local/php/bin/php-config\r\n$ make && make install\r\n$ echo \'extension=redis.so\' >> /usr/local/php/etc/php.ini\r\n$ /etc/init.d/php-fpm restart # 重启php-fpm服务\r\n$ $ php -m | grep redis 【redis】 # 查看redis扩展是否安装成功\r\n```\r\n### 安装中可能遇到的问题\r\n\r\n1. [php -v查看到版本与phpinfo()版本不一致问题](https://www.cnblogs.com/two-bees/p/10730465.html)\r\n\r\n## 系统文件\r\n\r\n值 |  说明\r\n---|---\r\nredis-benchmark | redis性能测试工具\r\nredis-check-aof | 检查aof日志\r\nredis-check-dump | 检查rbd日志\r\nredis-cli | 连接用的客户端\r\nredis-server | redis服务进程\r\n\r\n## redis目录\r\n\r\n```\r\ncd /var/redis-5.0.5/\r\n```\r\n\r\n### 启动\r\n\r\n```\r\nsrc/redis-server redis.conf【推荐】\r\n```\r\n\r\n### 使用内置的客户端与Redis进行交互:\r\n```\r\nsrc/redis-cli\r\n```\r\n\r\n\r\n## 后台运行\r\n\r\n让redis以后台进程的形式运行,编辑 redis.conf 配置文件，**daemonize yes**\r\n\r\n## 设置全局变量\r\n\r\n进入src\r\n\r\n用cp命令复制到usr目录下运行，可以使用redis-server，redis-cli启动\r\n```\r\ncp redis-server /usr/local/bin/\r\n\r\ncp redis-cli /usr/local/bin/\r\n```\r\n## 是否运行\r\n\r\n```\r\nps aux | grep redis\r\n```\r\n\r\n## 关闭redis进程\r\n\r\n```\r\n# 首先使用ps -aux | grep redis查看redis进程\r\n[root@iZwz991stxdwj560bfmadtZ src]# ps -aux | grep redis\r\nroot     18714  0.0  0.1 141752  2008 ?        Ssl  13:07   0:00 ./redis-server 127.0.0.1:6379\r\nroot     18719  0.0  0.0 112644   968 pts/0    R+   13:09   0:00 grep --color=auto redis\r\n \r\n\r\n# 使用kill命令杀死进程\r\n[root@iZwz991stxdwj560bfmadtZ src]# kill 18714\r\n```', '0');
INSERT INTO `be_article` VALUES ('60', '可怜的御田殿下！', '海贼王', '', 'https://www.liuhai.fun/upload/20200221/d7375381831c117c0ae5c7744d0160d9.jpeg', '', '0', '1582214447', '1582270800', '10000', '55', '0', '20', '0', '0', '0', '1', '/upload/20200221/d7375381831c117c0ae5c7744d0160d9.jpeg', '', '0');
INSERT INTO `be_article` VALUES ('62', 'CSS 故障艺术', 'CSS', '', 'https://www.liuhai.fun/upload/20200222/048c12aee08c5f9635140c081001c571.png', '<h2 id=\"h2--mix-blend-mode-logo\"><a name=\"使用 mix-blend-mode 实现抖音 LOGO\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>使用 mix-blend-mode 实现抖音 LOGO</h2><p>CSS3 新增了一个很有意思的属性 — <code>mix-blend-mode</code> ，其中 mix 和 blend 的中文意译均为混合，那么这个属性的作用直译过来就是混合混合模式，当然，我们我们通常称之为 <code>混合模式</code>。</p>\r\n<h3 id=\"h3-u5173u952Eu70B9\"><a name=\"关键点\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>关键点</h3><ul>\r\n<li><p>主要借助伪元素实现了整体 J 结构，借助了 mix-blend-mode 实现融合效果</p>\r\n</li><li><p>利用 mix-blend-mode: lighten 混合模式实现两个 J 形结构重叠部分为白色</p>\r\n</li></ul>\r\n<p><img src=\"https://i.loli.net/2020/02/22/4lgvkdRJf5paUxj.gif\" alt=\"640 _1_.gif\">\r\n<p>完整demo：<a href=\"https://codepen.io/haiwar/pen/gOpLGPN\">https://codepen.io/haiwar/pen/gOpLGPN</a></p>\r\n<h2 id=\"h2-clip-path-\"><a name=\"clip-path 实现图片的故障艺术风格动画\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>clip-path 实现图片的故障艺术风格动画</h2><h3 id=\"h3-u5173u952Eu70B9\"><a name=\"关键点\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>关键点</h3><ul>\r\n<li><p>使用元素的伪元素复制两份图片副本，再使用 clip-path 对图片进行裁剪并且添加位移、变形、滤镜等等。</p>\r\n</li><li><p>动画部分代码太多了，有一半使用了 SASS 的循环函数随机生成<br><img src=\"https://i.loli.net/2020/02/22/aS1dnIgNTfzGmsw.gif\" alt=\"640 _3_.gif\">\r\n</li></ul>\r\n<p>完整demo：<a href=\"https://codepen.io/Chokcoco/pen/eYmaoNg\">https://codepen.io/Chokcoco/pen/eYmaoNg</a></p>\r\n<h2 id=\"h2-404-\"><a name=\"404故障效果\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>404故障效果</h2><p><img src=\"https://i.loli.net/2020/02/22/iq3QrL2z1b6tnks.gif\" alt=\"640 _1_.gif\">\r\n<p>完整demo：<a href=\"https://codepen.io/Chokcoco/pen/OJPexEm\">https://codepen.io/Chokcoco/pen/OJPexEm</a></p>\r\n<p><img src=\"https://i.loli.net/2020/02/22/XrU86Z2cgGzMDQq.gif\" alt=\"640 _2_.gif\">\r\n<p>完整demo：<a href=\"https://codepen.io/Chokcoco/pen/QWwXqra\">https://codepen.io/Chokcoco/pen/QWwXqra</a></p>\r\n', '0', '1582342884', '0', '10000', '56', '0', '46', '0', '0', '0', '1', '/upload/20200222/048c12aee08c5f9635140c081001c571.png', '## 使用 mix-blend-mode 实现抖音 LOGO\r\n\r\nCSS3 新增了一个很有意思的属性 -- `mix-blend-mode` ，其中 mix 和 blend 的中文意译均为混合，那么这个属性的作用直译过来就是混合混合模式，当然，我们我们通常称之为 `混合模式 `。\r\n\r\n### 关键点\r\n\r\n- 主要借助伪元素实现了整体 J 结构，借助了 mix-blend-mode 实现融合效果\r\n\r\n- 利用 mix-blend-mode: lighten 混合模式实现两个 J 形结构重叠部分为白色\r\n\r\n![640 _1_.gif](https://i.loli.net/2020/02/22/4lgvkdRJf5paUxj.gif)\r\n\r\n完整demo：https://codepen.io/haiwar/pen/gOpLGPN\r\n\r\n## clip-path 实现图片的故障艺术风格动画\r\n\r\n### 关键点\r\n\r\n- 使用元素的伪元素复制两份图片副本，再使用 clip-path 对图片进行裁剪并且添加位移、变形、滤镜等等。\r\n\r\n- 动画部分代码太多了，有一半使用了 SASS 的循环函数随机生成\r\n![640 _3_.gif](https://i.loli.net/2020/02/22/aS1dnIgNTfzGmsw.gif)\r\n\r\n完整demo：https://codepen.io/Chokcoco/pen/eYmaoNg\r\n\r\n## 404故障效果\r\n\r\n![640 _1_.gif](https://i.loli.net/2020/02/22/iq3QrL2z1b6tnks.gif)\r\n\r\n完整demo：https://codepen.io/Chokcoco/pen/OJPexEm\r\n\r\n![640 _2_.gif](https://i.loli.net/2020/02/22/XrU86Z2cgGzMDQq.gif)\r\n\r\n完整demo：https://codepen.io/Chokcoco/pen/QWwXqra', '0');
INSERT INTO `be_article` VALUES ('63', 'JavaScript中的面向对象', 'js,面向对象', '在 JavaScript 中，大多数事物都是对象, 从作为核心功能的字符串和数组，到建立在 JavaScript 之上的浏览器API。', '', '<h2 id=\"h2-1-\"><a name=\"1.构造函数模式\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1.构造函数模式</h2><p>通过创建自定义的构造函数，来定义自定义对象类型的属性和方法。</p>\r\n<pre><code>function cons(name,age){\r\n this.name = name;\r\n this.age = age;\r\n this.getMes = function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\nvar mesge = new cons(\'will\',21);\r\nmesge.getMes();\r\n</code></pre><h2 id=\"h2-2-\"><a name=\"2.工厂模式\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2.工厂模式</h2><p>该模式抽象了创建具体对象的过程，用函数来封装以特定接口创建对象的细节</p>\r\n<pre><code>function cons(name,age){\r\n var obj = new Object();\r\n obj.name = name;\r\n obj.age = age;\r\n obj.getMes = function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n return obj;\r\n}\r\nvar mesge = cons(\'will\',21);\r\nmesge.getMes();\r\n</code></pre><h2 id=\"h2-3-\"><a name=\"3.字面量模式\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3.字面量模式</h2><p>字面量可以用来创建单个对象，但如果要创建多个对象，会产生大量的重复代码</p>\r\n<pre><code>var cons = {\r\n name: \'will\',\r\n age : 21,\r\n getMes: function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\ncons.getMes();\r\n</code></pre><h2 id=\"h2-4-\"><a name=\"4.原型模式\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4.原型模式</h2><p>使用原型对象，可以让所有实例共享它的属性和方法</p>\r\n<pre><code>function cons(){\r\n cons.prototype.name = \"will\";\r\n cons.prototype.age = 21;\r\n cons.prototype.getMes = function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\n\r\nvar mesge = new cons();\r\nmesge.getMes();\r\n\r\nvar mesge1 = new cons();\r\nmesge1.getMes();\r\nconsole.log(mesge.sayName == mesge1.sayName);//true\r\n</code></pre><h2 id=\"h2-5-\"><a name=\"5.组合模式\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5.组合模式</h2><p>最常见的方式。构造函数模式用于定义实例属性，而原型模式用于定义方法和共享的属性，这种组合模式还支持向构造函数传递参数。实例对象都有自己的一份实例属性的副本，同时又共享对方法的引用，最大限度地节省了内存。该模式是目前使用最广泛、认同度最高的一种创建自定义对象的模式</p>\r\n<pre><code>function cons(name,age){\r\n this.name = name;\r\n this.age = age;\r\n this.friends = [\"arr\",\"all\"];\r\n}\r\ncons.prototype = {\r\n getMes : function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\nvar mesge = new cons(\"will\",21);\r\nvar mesge1 = new cons(\"jalo\",21);\r\nconsole.log(mesge.friends);\r\nmesge.friends.push(\'wc\'); //还可以操作数组哈O(∩_∩)O！\r\nconsole.log(mesge.friends);\r\nconsole.log(mesge1.friends);\r\nmesge.getMes();\r\nmesge1.getMes();\r\nconsole.log(mesge.friends === mesge1.friends);\r\nconsole.log(mesge.sayName === mesge1.sayName);\r\n</code></pre><p>最后在告诉你个秘密，ES6引入了类（Class），让对象的创建、继承更加直观了</p>\r\n<pre><code>// 定义类\r\nclass Cons{\r\n constructor(name,age){\r\n  this.name = name;\r\n  this.age = age;\r\n }\r\n getMes(){\r\n  console.log(`hello ${this.name} !`);\r\n }\r\n}\r\nlet mesge = new Cons(\'啦啦啦~\',21);\r\nmesge.getMes();\r\n</code></pre><p>在上面的代码片段里，先是定义了一个Cons类，里面还有一个constructor函数，这就是构造函数。而this关键字则代表实例对象。</p>\r\n<p>而继承可以通过extends关键字实现。</p>\r\n<pre><code>class Ctrn extends Cons{\r\n constructor(name,anu){\r\n  super(name); //等同于super.constructor(x)\r\n  this.anu = anu;\r\n }\r\n ingo(){\r\n  console.log(`my name is ${this.name},this year ${this.anu}`);\r\n }\r\n}\r\nlet ster = new Ctrn(\'will\',21);\r\nster.ingo();\r\nster.getMes();\r\n</code></pre><h2 id=\"h2-6-vue-cli-\"><a name=\"6.在Vue-Cli中使用\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>6.在Vue-Cli中使用</h2><p>构造方法：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/constructor\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/constructor</a></p>\r\n<h3 id=\"h3-u6587u4EF6u76EEu5F55\"><a name=\"文件目录\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>文件目录</h3><pre><code>|--- components\r\n|------ ControlJs\r\n|-------- CmdCenterProject.js\r\n|-------- ControllerUserProject.js\r\n|--- ProjectPost.vue\r\n</code></pre><p>ProjectPost.vue</p>\r\n<pre><code>&lt;template&gt;\r\n    &lt;div&gt;\r\n        &lt;h2&gt;{{ this.Controller.getId() }}&lt;/h2&gt;\r\n    &lt;/div&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\n  import { ControllerUserMaker } from \'./ControlJs/ControllerUserMaker\';\r\n\r\n  export default {\r\n    name: \'ProjectPost\',\r\n    data () {\r\n      return {\r\n        Controller: undefined\r\n      }\r\n    },\r\n    mounted () {\r\n      this.Controller = new ControllerUserMaker(\"User\")\r\n      console.log(this.Controller.getId()) // 这里是父类的方法，因为他继承【CmdCenterMarker】，所以可以直接调用\r\n      console.log(this.Controller.getContent()) // 这里是他自己的方法\r\n    }\r\n  }\r\n&lt;/script&gt;\r\n\r\n&lt;style scoped&gt;&lt;/style&gt;\r\n</code></pre><p>CmdCenterMarker.js</p>\r\n<pre><code>export class CmdCenterMarker {\r\n  constructor(data){\r\n    this.data = data;\r\n  }\r\n  getId() {\r\n    return this.data;\r\n  }\r\n}\r\n</code></pre><p>ControllerUserMaker.js</p>\r\n<pre><code>import { CmdCenterMarker } from \'./CmdCenterMarker\';\r\nexport class ControllerUserMaker extends CmdCenterMarker {\r\n  constructor(data) {\r\n    super(data);\r\n    this.UserData = data;\r\n  }\r\n  getContent() {\r\n    if(this.UserData === \'Admin\') {\r\n      return \"管理员\";\r\n    }\r\n    return \"普通用户\";\r\n  }\r\n}\r\n</code></pre>', '0', '1582530335', '1582615604', '10000', '51', '1', '18', '1583223427', '0', '0', '1', '', '## 1.构造函数模式\r\n\r\n通过创建自定义的构造函数，来定义自定义对象类型的属性和方法。\r\n\r\n```\r\nfunction cons(name,age){\r\n this.name = name;\r\n this.age = age;\r\n this.getMes = function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\nvar mesge = new cons(\'will\',21);\r\nmesge.getMes();\r\n```\r\n\r\n## 2.工厂模式\r\n\r\n该模式抽象了创建具体对象的过程，用函数来封装以特定接口创建对象的细节\r\n\r\n```\r\nfunction cons(name,age){\r\n var obj = new Object();\r\n obj.name = name;\r\n obj.age = age;\r\n obj.getMes = function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n return obj;\r\n}\r\nvar mesge = cons(\'will\',21);\r\nmesge.getMes();\r\n```\r\n\r\n## 3.字面量模式\r\n\r\n字面量可以用来创建单个对象，但如果要创建多个对象，会产生大量的重复代码\r\n\r\n```\r\nvar cons = {\r\n name: \'will\',\r\n age : 21,\r\n getMes: function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\ncons.getMes();\r\n```\r\n\r\n## 4.原型模式\r\n\r\n使用原型对象，可以让所有实例共享它的属性和方法\r\n\r\n```\r\nfunction cons(){\r\n cons.prototype.name = \"will\";\r\n cons.prototype.age = 21;\r\n cons.prototype.getMes = function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\n \r\nvar mesge = new cons();\r\nmesge.getMes();\r\n \r\nvar mesge1 = new cons();\r\nmesge1.getMes();\r\nconsole.log(mesge.sayName == mesge1.sayName);//true\r\n```\r\n\r\n## 5.组合模式\r\n\r\n最常见的方式。构造函数模式用于定义实例属性，而原型模式用于定义方法和共享的属性，这种组合模式还支持向构造函数传递参数。实例对象都有自己的一份实例属性的副本，同时又共享对方法的引用，最大限度地节省了内存。该模式是目前使用最广泛、认同度最高的一种创建自定义对象的模式\r\n\r\n```\r\nfunction cons(name,age){\r\n this.name = name;\r\n this.age = age;\r\n this.friends = [\"arr\",\"all\"];\r\n}\r\ncons.prototype = {\r\n getMes : function(){\r\n  console.log(`my name is ${this.name},this year ${this.age}`);\r\n }\r\n}\r\nvar mesge = new cons(\"will\",21);\r\nvar mesge1 = new cons(\"jalo\",21);\r\nconsole.log(mesge.friends);\r\nmesge.friends.push(\'wc\'); //还可以操作数组哈O(∩_∩)O！\r\nconsole.log(mesge.friends);\r\nconsole.log(mesge1.friends);\r\nmesge.getMes();\r\nmesge1.getMes();\r\nconsole.log(mesge.friends === mesge1.friends);\r\nconsole.log(mesge.sayName === mesge1.sayName);\r\n\r\n```\r\n\r\n最后在告诉你个秘密，ES6引入了类（Class），让对象的创建、继承更加直观了\r\n\r\n```\r\n// 定义类\r\nclass Cons{\r\n constructor(name,age){\r\n  this.name = name;\r\n  this.age = age;\r\n }\r\n getMes(){\r\n  console.log(`hello ${this.name} !`);\r\n }\r\n}\r\nlet mesge = new Cons(\'啦啦啦~\',21);\r\nmesge.getMes();\r\n```\r\n\r\n在上面的代码片段里，先是定义了一个Cons类，里面还有一个constructor函数，这就是构造函数。而this关键字则代表实例对象。\r\n\r\n而继承可以通过extends关键字实现。\r\n\r\n```\r\nclass Ctrn extends Cons{\r\n constructor(name,anu){\r\n  super(name); //等同于super.constructor(x)\r\n  this.anu = anu;\r\n }\r\n ingo(){\r\n  console.log(`my name is ${this.name},this year ${this.anu}`);\r\n }\r\n}\r\nlet ster = new Ctrn(\'will\',21);\r\nster.ingo();\r\nster.getMes();\r\n```\r\n\r\n## 6.在Vue-Cli中使用\r\n\r\n构造方法：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/constructor\r\n\r\n### 文件目录\r\n\r\n```\r\n|--- components\r\n|------ ControlJs\r\n|-------- CmdCenterProject.js\r\n|-------- ControllerUserProject.js\r\n|--- ProjectPost.vue\r\n```\r\n\r\nProjectPost.vue\r\n\r\n```\r\n<template>\r\n    <div>\r\n        <h2>{{ this.Controller.getId() }}</h2>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import { ControllerUserMaker } from \'./ControlJs/ControllerUserMaker\';\r\n\r\n  export default {\r\n    name: \'ProjectPost\',\r\n    data () {\r\n      return {\r\n        Controller: undefined\r\n      }\r\n    },\r\n    mounted () {\r\n      this.Controller = new ControllerUserMaker(\"User\")\r\n      console.log(this.Controller.getId()) // 这里是父类的方法，因为他继承【CmdCenterMarker】，所以可以直接调用\r\n      console.log(this.Controller.getContent()) // 这里是他自己的方法\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped></style>\r\n\r\n```\r\n\r\nCmdCenterMarker.js\r\n\r\n```\r\nexport class CmdCenterMarker {\r\n  constructor(data){\r\n    this.data = data;\r\n  }\r\n  getId() {\r\n    return this.data;\r\n  }\r\n}\r\n\r\n```\r\n\r\nControllerUserMaker.js\r\n\r\n```\r\nimport { CmdCenterMarker } from \'./CmdCenterMarker\';\r\nexport class ControllerUserMaker extends CmdCenterMarker {\r\n  constructor(data) {\r\n    super(data);\r\n    this.UserData = data;\r\n  }\r\n  getContent() {\r\n    if(this.UserData === \'Admin\') {\r\n      return \"管理员\";\r\n    }\r\n    return \"普通用户\";\r\n  }\r\n}\r\n```\r\n', '0');
INSERT INTO `be_article` VALUES ('66', 'Http状态码以及分别代表是什么意思？', 'Http状态码', '', '', '<h2 id=\"h2-u7B80u5355u7248\"><a name=\"简单版\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>简单版</h2><pre><code>100  Continue    继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息\r\n200  OK         正常返回信息\r\n201  Created      请求成功并且服务器创建了新的资源\r\n202  Accepted     服务器已接受请求，但尚未处理\r\n301  Moved Permanently  请求的网页已永久移动到新位置。\r\n302  Found          临时性重定向。\r\n303  See Other      临时性重定向，且总是使用 GET 请求新的 URI。\r\n304  Not Modified 自从上次请求后，请求的网页未修改过。\r\n\r\n400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。\r\n401 Unauthorized 请求未授权。\r\n403 Forbidden      禁止访问。\r\n404 Not Found      找不到如何与 URI 相匹配的资源。\r\n\r\n500 Internal Server Error  最常见的服务器端错误。\r\n503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。\r\n</code></pre><h2 id=\"h2-u5B8Cu6574u7248\"><a name=\"完整版\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>完整版</h2><h3 id=\"h3-1-\"><a name=\"1 (信息类)：表示接收到请求并且继续处理\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>1 (信息类)：表示接收到请求并且继续处理</h3><pre><code class=\"lang-bash\">100——客户必须继续发出请求\r\n101——客户要求服务器根据请求转换HTTP协议版本\r\n</code></pre>\r\n<h3 id=\"h3-2-\"><a name=\"2 (响应成功)：表示动作被成功接收、理解和接受\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>2 (响应成功)：表示动作被成功接收、理解和接受</h3><pre><code class=\"lang-bash\">200——表明该请求被成功地完成，所请求的资源发送回客户端\r\n201——提示知道新文件的URL\r\n202——接受和处理、但处理未完成\r\n203——返回信息不确定或不完整\r\n204——请求收到，但返回信息为空\r\n205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件\r\n206——服务器已经完成了部分用户的GET请求\r\n</code></pre>\r\n<h3 id=\"h3-3-\"><a name=\"3 (重定向类)：为了完成指定的动作，必须接受进一步处理\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>3 (重定向类)：为了完成指定的动作，必须接受进一步处理</h3><pre><code class=\"lang-bash\">300——请求的资源可在多处得到\r\n301——本网页被永久性转移到另一个URL\r\n302——请求的网页被转移到一个新的地址，但客户访问仍继续通过原始URL地址，重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request。\r\n303——建议客户访问其他URL或访问方式\r\n304——自从上次请求后，请求的网页未修改过，服务器返回此响应时，不会返回网页内容，代表上次的文档已经被缓存了，还可以继续使用\r\n305——请求的资源必须从服务器指定的地址得到\r\n306——前一版本HTTP中使用的代码，现行版本中不再使用\r\n307——申明请求的资源临时性删除\r\n</code></pre>\r\n<h3 id=\"h3-4-\"><a name=\"4 (客户端错误类)：请求包含错误语法或不能正确执行\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>4 (客户端错误类)：请求包含错误语法或不能正确执行</h3><pre><code class=\"lang-bash\">400——客户端请求有语法错误，不能被服务器所理解\r\n401——请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用\r\nHTTP 401.1 - 未授权：登录失败\r\nHTTP 401.2 - 未授权：服务器配置问题导致登录失败\r\nHTTP 401.3 - ACL 禁止访问资源\r\nHTTP 401.4 - 未授权：授权被筛选器拒绝\r\nHTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败\r\n402——保留有效ChargeTo头响应\r\n403——禁止访问，服务器收到请求，但是拒绝提供服务\r\nHTTP 403.1 禁止访问：禁止可执行访问\r\nHTTP 403.2 - 禁止访问：禁止读访问\r\nHTTP 403.3 - 禁止访问：禁止写访问\r\nHTTP 403.4 - 禁止访问：要求 SSL\r\nHTTP 403.5 - 禁止访问：要求 SSL 128\r\nHTTP 403.6 - 禁止访问：IP 地址被拒绝\r\nHTTP 403.7 - 禁止访问：要求客户证书\r\nHTTP 403.8 - 禁止访问：禁止站点访问\r\nHTTP 403.9 - 禁止访问：连接的用户过多\r\nHTTP 403.10 - 禁止访问：配置无效\r\nHTTP 403.11 - 禁止访问：密码更改\r\nHTTP 403.12 - 禁止访问：映射器拒绝访问\r\nHTTP 403.13 - 禁止访问：客户证书已被吊销\r\nHTTP 403.15 - 禁止访问：客户访问许可过多\r\nHTTP 403.16 - 禁止访问：客户证书不可信或者无效\r\nHTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效\r\n404——一个404错误表明可连接服务器，但服务器无法取得所请求的网页，请求资源不存在。eg：输入了错误的URL\r\n405——用户在Request-Line字段定义的方法不允许\r\n406——根据用户发送的Accept拖，请求资源不可访问\r\n407——类似401，用户必须首先在代理服务器上得到授权\r\n408——客户端没有在用户指定的饿时间内完成请求\r\n409——对当前资源状态，请求不能完成\r\n410——服务器上不再有此资源且无进一步的参考地址\r\n411——服务器拒绝用户定义的Content-Length属性请求\r\n412——一个或多个请求头字段在当前请求中错误\r\n413——请求的资源大于服务器允许的大小\r\n414——请求的资源URL长于服务器允许的长度\r\n415——请求资源不支持请求项目格式\r\n416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段\r\n417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求长。\r\n</code></pre>\r\n<h3 id=\"h3-5-\"><a name=\"5 (服务端错误类)：服务器不能正确执行一个正确的请求\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>5 (服务端错误类)：服务器不能正确执行一个正确的请求</h3><pre><code class=\"lang-bash\">HTTP 500 - 服务器遇到错误，无法完成请求\r\nHTTP 500.100 - 内部服务器错误 - ASP 错误\r\nHTTP 500-11 服务器关闭\r\nHTTP 500-12 应用程序重新启动\r\nHTTP 500-13 - 服务器太忙\r\nHTTP 500-14 - 应用程序无效\r\nHTTP 500-15 - 不允许请求 global.asa\r\nError 501 - 未实现\r\nHTTP 502 - 网关错误\r\nHTTP 503：由于超载或停机维护，服务器目前无法使用，一段时间后可能恢复正常\r\n</code></pre>\r\n<p>转载: <a href=\"https://github.com/qiu-deqing/FE-interview\">https://github.com/qiu-deqing/FE-interview</a></p>\r\n', '0', '1582603653', '1582604222', '10000', '58', '0', '23', '0', '0', '0', '1', '', '## 简单版\r\n\r\n```\r\n100  Continue	继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息\r\n200  OK 		正常返回信息\r\n201  Created  	请求成功并且服务器创建了新的资源\r\n202  Accepted 	服务器已接受请求，但尚未处理\r\n301  Moved Permanently  请求的网页已永久移动到新位置。\r\n302  Found  		临时性重定向。\r\n303  See Other  	临时性重定向，且总是使用 GET 请求新的 URI。\r\n304  Not Modified 自从上次请求后，请求的网页未修改过。\r\n\r\n400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。\r\n401 Unauthorized 请求未授权。\r\n403 Forbidden  	禁止访问。\r\n404 Not Found  	找不到如何与 URI 相匹配的资源。\r\n\r\n500 Internal Server Error  最常见的服务器端错误。\r\n503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。\r\n```\r\n\r\n## 完整版\r\n\r\n### 1 (信息类)：表示接收到请求并且继续处理\r\n\r\n```bash\r\n100——客户必须继续发出请求\r\n101——客户要求服务器根据请求转换HTTP协议版本\r\n```\r\n\r\n### 2 (响应成功)：表示动作被成功接收、理解和接受\r\n\r\n```bash\r\n200——表明该请求被成功地完成，所请求的资源发送回客户端\r\n201——提示知道新文件的URL\r\n202——接受和处理、但处理未完成\r\n203——返回信息不确定或不完整\r\n204——请求收到，但返回信息为空\r\n205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件\r\n206——服务器已经完成了部分用户的GET请求\r\n```\r\n\r\n### 3 (重定向类)：为了完成指定的动作，必须接受进一步处理\r\n\r\n```bash\r\n300——请求的资源可在多处得到\r\n301——本网页被永久性转移到另一个URL\r\n302——请求的网页被转移到一个新的地址，但客户访问仍继续通过原始URL地址，重定向，新的URL会在response中的Location中返回，浏览器将会使用新的URL发出新的Request。\r\n303——建议客户访问其他URL或访问方式\r\n304——自从上次请求后，请求的网页未修改过，服务器返回此响应时，不会返回网页内容，代表上次的文档已经被缓存了，还可以继续使用\r\n305——请求的资源必须从服务器指定的地址得到\r\n306——前一版本HTTP中使用的代码，现行版本中不再使用\r\n307——申明请求的资源临时性删除\r\n```\r\n\r\n### 4 (客户端错误类)：请求包含错误语法或不能正确执行\r\n\r\n```bash\r\n400——客户端请求有语法错误，不能被服务器所理解\r\n401——请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用\r\nHTTP 401.1 - 未授权：登录失败\r\nHTTP 401.2 - 未授权：服务器配置问题导致登录失败\r\nHTTP 401.3 - ACL 禁止访问资源\r\nHTTP 401.4 - 未授权：授权被筛选器拒绝\r\nHTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败\r\n402——保留有效ChargeTo头响应\r\n403——禁止访问，服务器收到请求，但是拒绝提供服务\r\nHTTP 403.1 禁止访问：禁止可执行访问\r\nHTTP 403.2 - 禁止访问：禁止读访问\r\nHTTP 403.3 - 禁止访问：禁止写访问\r\nHTTP 403.4 - 禁止访问：要求 SSL\r\nHTTP 403.5 - 禁止访问：要求 SSL 128\r\nHTTP 403.6 - 禁止访问：IP 地址被拒绝\r\nHTTP 403.7 - 禁止访问：要求客户证书\r\nHTTP 403.8 - 禁止访问：禁止站点访问\r\nHTTP 403.9 - 禁止访问：连接的用户过多\r\nHTTP 403.10 - 禁止访问：配置无效\r\nHTTP 403.11 - 禁止访问：密码更改\r\nHTTP 403.12 - 禁止访问：映射器拒绝访问\r\nHTTP 403.13 - 禁止访问：客户证书已被吊销\r\nHTTP 403.15 - 禁止访问：客户访问许可过多\r\nHTTP 403.16 - 禁止访问：客户证书不可信或者无效\r\nHTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效\r\n404——一个404错误表明可连接服务器，但服务器无法取得所请求的网页，请求资源不存在。eg：输入了错误的URL\r\n405——用户在Request-Line字段定义的方法不允许\r\n406——根据用户发送的Accept拖，请求资源不可访问\r\n407——类似401，用户必须首先在代理服务器上得到授权\r\n408——客户端没有在用户指定的饿时间内完成请求\r\n409——对当前资源状态，请求不能完成\r\n410——服务器上不再有此资源且无进一步的参考地址\r\n411——服务器拒绝用户定义的Content-Length属性请求\r\n412——一个或多个请求头字段在当前请求中错误\r\n413——请求的资源大于服务器允许的大小\r\n414——请求的资源URL长于服务器允许的长度\r\n415——请求资源不支持请求项目格式\r\n416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示值，请求也不包含If-Range请求头字段\r\n417——服务器不满足请求Expect头字段指定的期望值，如果是代理服务器，可能是下一级服务器不能满足请求长。\r\n```\r\n\r\n### 5 (服务端错误类)：服务器不能正确执行一个正确的请求\r\n\r\n```bash\r\nHTTP 500 - 服务器遇到错误，无法完成请求\r\nHTTP 500.100 - 内部服务器错误 - ASP 错误\r\nHTTP 500-11 服务器关闭\r\nHTTP 500-12 应用程序重新启动\r\nHTTP 500-13 - 服务器太忙\r\nHTTP 500-14 - 应用程序无效\r\nHTTP 500-15 - 不允许请求 global.asa\r\nError 501 - 未实现\r\nHTTP 502 - 网关错误\r\nHTTP 503：由于超载或停机维护，服务器目前无法使用，一段时间后可能恢复正常\r\n```\r\n\r\n转载: https://github.com/qiu-deqing/FE-interview', '0');
INSERT INTO `be_article` VALUES ('67', '网页添加占位符', '占位符,骨架,CSS', '', '', '<p>网页添加占位符：</p>\r\n<pre><code class=\"lang-html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n  &lt;meta charset=\"UTF-8\"&gt;\r\n  &lt;title&gt;Facebook content placeholder deconstruction&lt;/title&gt;\r\n  &lt;style type=\"text/css\"&gt;\r\n    .timeline-item {\r\n    background: #fff;\r\n    border: 1px solid;\r\n    border-color: #e5e6e9 #dfe0e4 #d0d1d5;\r\n    border-radius: 3px;\r\n    padding: 12px;\r\n    margin: 0 auto;\r\n    max-width: 472px;\r\n    min-height: 200px;\r\n}\r\n@keyframes placeHolderShimmer{\r\n    0%{\r\n        background-position: -468px 0\r\n    }\r\n    100%{\r\n        background-position: 468px 0\r\n    }\r\n}\r\n.animated-background {\r\n    animation-duration: 1s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-name: placeHolderShimmer;\r\n    animation-timing-function: linear;\r\n    background: #f6f7f8;\r\n    background: linear-gradient(to right, #eeeeee 8%, #dddddd 18%, #eeeeee 33%);\r\n    background-size: 800px 104px;\r\n    height: 96px;\r\n    position: relative;\r\n}\r\n.background-masker {\r\n    background: #fff;\r\n    position: absolute;\r\n}\r\n/* Every thing below this is just positioning */\r\n.background-masker.header-top,\r\n.background-masker.header-bottom,\r\n.background-masker.subheader-bottom {\r\n    top: 0;\r\n    left: 40px;\r\n    right: 0;\r\n    height: 10px;\r\n}\r\n.background-masker.header-left,\r\n.background-masker.subheader-left,\r\n.background-masker.header-right,\r\n.background-masker.subheader-right {\r\n    top: 10px;\r\n    left: 40px;\r\n    height: 8px;\r\n    width: 10px;\r\n}\r\n.background-masker.header-bottom {\r\n    top: 18px;\r\n    height: 6px;\r\n}\r\n.background-masker.subheader-left,\r\n.background-masker.subheader-right {\r\n    top: 24px;\r\n    height: 6px;\r\n}\r\n.background-masker.header-right,\r\n.background-masker.subheader-right {\r\n    width: auto;\r\n    left: 300px;\r\n    right: 0;\r\n}\r\n.background-masker.subheader-right {\r\n    left: 230px;\r\n}\r\n.background-masker.subheader-bottom {\r\n    top: 30px;\r\n    height: 10px;\r\n}\r\n.background-masker.content-top,\r\n.background-masker.content-second-line,\r\n.background-masker.content-third-line,\r\n.background-masker.content-second-end,\r\n.background-masker.content-third-end,\r\n.background-masker.content-first-end {\r\n    top: 40px;\r\n    left: 0;\r\n    right: 0;\r\n    height: 6px;\r\n}\r\n.background-masker.content-top {\r\n    height:20px;\r\n}\r\n.background-masker.content-first-end,\r\n.background-masker.content-second-end,\r\n.background-masker.content-third-end{\r\n    width: auto;\r\n    left: 380px;\r\n    right: 0;\r\n    top: 60px;\r\n    height: 8px;\r\n}\r\n.background-masker.content-second-line  {\r\n    top: 68px;\r\n}\r\n.background-masker.content-second-end {\r\n    left: 420px;\r\n    top: 74px;\r\n}\r\n.background-masker.content-third-line {\r\n    top: 82px;\r\n}\r\n.background-masker.content-third-end {\r\n    left: 300px;\r\n    top: 88px;\r\n}\r\n  &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n  &lt;div class=\"timeline-wrapper\"&gt;\r\n    &lt;div class=\"timeline-item\"&gt;\r\n        &lt;div class=\"animated-background\"&gt;\r\n            &lt;div class=\"background-masker header-top\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker header-left\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker header-right\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker header-bottom\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker subheader-left\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker subheader-right\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker subheader-bottom\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker content-top\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker content-first-end\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker content-second-line\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker content-second-end\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker content-third-line\"&gt;&lt;/div&gt;\r\n            &lt;div class=\"background-masker content-third-end\"&gt;&lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;!-- &lt;script src=\"http://cdn.bootcss.com/jquery/1.11.0/jquery.min.js\"&gt;&lt;/script&gt; --&gt;\r\n&lt;/html&gt;\r\n</code></pre>\r\n<p>效果图：<br><img style=\"float: left;\" src=\"https://i.loli.net/2020/02/29/V95WgElhnfMzR7y.png\">\r\n', '0', '1582945965', '1582946361', '10000', '56', '0', '29', '0', '0', '0', '1', '', '网页添加占位符：\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Facebook content placeholder deconstruction</title>\r\n  <style type=\"text/css\">\r\n    .timeline-item {\r\n    background: #fff;\r\n    border: 1px solid;\r\n    border-color: #e5e6e9 #dfe0e4 #d0d1d5;\r\n    border-radius: 3px;\r\n    padding: 12px;\r\n    margin: 0 auto;\r\n    max-width: 472px;\r\n    min-height: 200px;\r\n}\r\n@keyframes placeHolderShimmer{\r\n    0%{\r\n        background-position: -468px 0\r\n    }\r\n    100%{\r\n        background-position: 468px 0\r\n    }\r\n}\r\n.animated-background {\r\n    animation-duration: 1s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-name: placeHolderShimmer;\r\n    animation-timing-function: linear;\r\n    background: #f6f7f8;\r\n    background: linear-gradient(to right, #eeeeee 8%, #dddddd 18%, #eeeeee 33%);\r\n    background-size: 800px 104px;\r\n    height: 96px;\r\n    position: relative;\r\n}\r\n.background-masker {\r\n    background: #fff;\r\n    position: absolute;\r\n}\r\n/* Every thing below this is just positioning */\r\n.background-masker.header-top,\r\n.background-masker.header-bottom,\r\n.background-masker.subheader-bottom {\r\n    top: 0;\r\n    left: 40px;\r\n    right: 0;\r\n    height: 10px;\r\n}\r\n.background-masker.header-left,\r\n.background-masker.subheader-left,\r\n.background-masker.header-right,\r\n.background-masker.subheader-right {\r\n    top: 10px;\r\n    left: 40px;\r\n    height: 8px;\r\n    width: 10px;\r\n}\r\n.background-masker.header-bottom {\r\n    top: 18px;\r\n    height: 6px;\r\n}\r\n.background-masker.subheader-left,\r\n.background-masker.subheader-right {\r\n    top: 24px;\r\n    height: 6px;\r\n}\r\n.background-masker.header-right,\r\n.background-masker.subheader-right {\r\n    width: auto;\r\n    left: 300px;\r\n    right: 0;\r\n}\r\n.background-masker.subheader-right {\r\n    left: 230px;\r\n}\r\n.background-masker.subheader-bottom {\r\n    top: 30px;\r\n    height: 10px;\r\n}\r\n.background-masker.content-top,\r\n.background-masker.content-second-line,\r\n.background-masker.content-third-line,\r\n.background-masker.content-second-end,\r\n.background-masker.content-third-end,\r\n.background-masker.content-first-end {\r\n    top: 40px;\r\n    left: 0;\r\n    right: 0;\r\n    height: 6px;\r\n}\r\n.background-masker.content-top {\r\n    height:20px;\r\n}\r\n.background-masker.content-first-end,\r\n.background-masker.content-second-end,\r\n.background-masker.content-third-end{\r\n    width: auto;\r\n    left: 380px;\r\n    right: 0;\r\n    top: 60px;\r\n    height: 8px;\r\n}\r\n.background-masker.content-second-line  {\r\n    top: 68px;\r\n}\r\n.background-masker.content-second-end {\r\n    left: 420px;\r\n    top: 74px;\r\n}\r\n.background-masker.content-third-line {\r\n    top: 82px;\r\n}\r\n.background-masker.content-third-end {\r\n    left: 300px;\r\n    top: 88px;\r\n}\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"timeline-wrapper\">\r\n    <div class=\"timeline-item\">\r\n        <div class=\"animated-background\">\r\n            <div class=\"background-masker header-top\"></div>\r\n            <div class=\"background-masker header-left\"></div>\r\n            <div class=\"background-masker header-right\"></div>\r\n            <div class=\"background-masker header-bottom\"></div>\r\n            <div class=\"background-masker subheader-left\"></div>\r\n            <div class=\"background-masker subheader-right\"></div>\r\n            <div class=\"background-masker subheader-bottom\"></div>\r\n            <div class=\"background-masker content-top\"></div>\r\n            <div class=\"background-masker content-first-end\"></div>\r\n            <div class=\"background-masker content-second-line\"></div>\r\n            <div class=\"background-masker content-second-end\"></div>\r\n            <div class=\"background-masker content-third-line\"></div>\r\n            <div class=\"background-masker content-third-end\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</body>\r\n<!-- <script src=\"http://cdn.bootcss.com/jquery/1.11.0/jquery.min.js\"></script> -->\r\n</html>\r\n```\r\n\r\n效果图：\r\n<img style=\"float: left;\" src=\"https://i.loli.net/2020/02/29/V95WgElhnfMzR7y.png\">', '0');

-- -----------------------------
-- Table structure for `be_auth_group`
-- -----------------------------
DROP TABLE IF EXISTS `be_auth_group`;
CREATE TABLE `be_auth_group` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `title` char(100) NOT NULL DEFAULT '',
  `status` tinyint(1) NOT NULL DEFAULT '1',
  `rules` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_auth_group`
-- -----------------------------
INSERT INTO `be_auth_group` VALUES ('4', 'test用户', '1', '81,105,82,103,41,42,27,28,31,32,116,119,117,45,83,46,47,37,38,35,36,69,70,65,66');

-- -----------------------------
-- Table structure for `be_auth_group_access`
-- -----------------------------
DROP TABLE IF EXISTS `be_auth_group_access`;
CREATE TABLE `be_auth_group_access` (
  `uid` mediumint(8) unsigned NOT NULL,
  `group_id` mediumint(8) unsigned NOT NULL,
  UNIQUE KEY `uid_group_id` (`uid`,`group_id`) USING BTREE,
  KEY `uid` (`uid`) USING BTREE,
  KEY `group_id` (`group_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_auth_group_access`
-- -----------------------------
INSERT INTO `be_auth_group_access` VALUES ('1', '4');
INSERT INTO `be_auth_group_access` VALUES ('33', '4');
INSERT INTO `be_auth_group_access` VALUES ('35', '4');
INSERT INTO `be_auth_group_access` VALUES ('36', '4');
INSERT INTO `be_auth_group_access` VALUES ('37', '4');
INSERT INTO `be_auth_group_access` VALUES ('41', '4');

-- -----------------------------
-- Table structure for `be_auth_rule`
-- -----------------------------
DROP TABLE IF EXISTS `be_auth_rule`;
CREATE TABLE `be_auth_rule` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `name` char(80) NOT NULL DEFAULT '',
  `title` char(20) NOT NULL DEFAULT '',
  `type` tinyint(1) NOT NULL DEFAULT '1' COMMENT '1菜单(只是做下拉框) 2列表(显示数据) 3不显示(删除或者修改等隐藏操作)',
  `status` tinyint(1) NOT NULL DEFAULT '1',
  `condition` char(100) NOT NULL DEFAULT '',
  `pid` mediumint(9) DEFAULT '0',
  `level` tinyint(1) DEFAULT NULL,
  `sort` int(5) DEFAULT '1000',
  `style` varchar(50) DEFAULT NULL,
  `is_fun` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `name` (`name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=123 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_auth_rule`
-- -----------------------------
INSERT INTO `be_auth_rule` VALUES ('27', 'Article', '文章管理', '1', '1', '', '0', '0', '8000', 'fa-stack-overflow', '0');
INSERT INTO `be_auth_rule` VALUES ('28', 'article/index', '文章列表', '2', '1', '', '27', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('29', 'article/edit', '文章修改', '2', '1', '', '27', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('30', 'article/delete', '文章删除', '2', '1', '', '27', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('31', 'Cate', '栏目管理', '1', '1', '', '0', '0', '7000', 'fa-align-justify', '0');
INSERT INTO `be_auth_rule` VALUES ('32', 'cate/index', '栏目列表', '2', '1', '', '31', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('33', 'cate/edit', '栏目修改', '2', '1', '', '31', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('34', 'cate/delete', '栏目删除', '2', '1', '', '31', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('35', 'Data', '数据备份/还原', '1', '1', '', '0', '0', '1000', 'fa-desktop', '0');
INSERT INTO `be_auth_rule` VALUES ('36', 'data/index', '数据库表', '2', '1', '', '35', '1', '1000', '0', '0');
INSERT INTO `be_auth_rule` VALUES ('37', 'Img', '轮播图管理', '1', '0', '', '0', '0', '1000', 'fa-caret-square-o-left', '0');
INSERT INTO `be_auth_rule` VALUES ('38', 'img/index', '轮播图列表', '2', '1', '', '37', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('39', 'img/edit', '轮播图修改', '2', '1', '', '37', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('40', 'img/delete', '轮播图删除', '2', '1', '', '37', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('41', 'Admin', '管理员', '1', '1', '', '0', '0', '9000', 'fa-users', '0');
INSERT INTO `be_auth_rule` VALUES ('42', 'admin/index', '管理员列表', '2', '1', '', '41', '1', '1000', '0', '0');
INSERT INTO `be_auth_rule` VALUES ('43', 'admin/edit', '管理员修改', '2', '1', '', '41', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('44', 'admin/delete', '管理员删除', '2', '1', '', '41', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('45', 'Conf', '系统', '1', '1', '', '0', '0', '1000', 'fa-gear', '0');
INSERT INTO `be_auth_rule` VALUES ('46', 'conf/index', '配置项', '2', '1', '', '45', '1', '1000', '0', '0');
INSERT INTO `be_auth_rule` VALUES ('47', 'conf/lists', '配置列表（配置功能）', '2', '1', '', '45', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('48', 'conf/edit', '配置项修改', '2', '1', '', '45', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('49', 'conf/delete', '配置项删除', '2', '1', '', '45', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('52', 'data/handler', '数据表操作', '2', '1', '', '35', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('65', 'Comment', '评论管理', '1', '1', '', '0', '0', '1000', 'fa-comment', '0');
INSERT INTO `be_auth_rule` VALUES ('66', 'comment/index', '评论列表', '2', '1', '', '65', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('67', 'comment/delete', '评论删除', '2', '1', '', '65', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('68', 'comment/edit', '评论修改', '2', '1', '', '65', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('69', 'Link', '友情链接', '1', '1', '', '0', '0', '1000', 'fa-link', '0');
INSERT INTO `be_auth_rule` VALUES ('70', 'link/index', '链接列表', '2', '1', '', '69', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('71', 'link/delete', '链接删除', '2', '1', '', '69', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('72', 'link/edit', '链接修改', '2', '1', '', '69', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('73', 'link/add', '链接添加', '2', '1', '', '69', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('74', 'img/add', '轮播图添加', '2', '1', '', '37', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('75', 'cate/add', '栏目添加', '2', '1', '', '31', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('76', 'article/add', '文章添加', '2', '1', '', '27', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('77', 'conf/add', '配置项添加', '2', '1', '', '45', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('78', 'admin/add', '管理员添加', '2', '1', '', '41', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('81', 'AuthRule', '节点列表管理', '1', '1', '', '0', '0', '10001', 'fa-list-ul', '0');
INSERT INTO `be_auth_rule` VALUES ('82', 'AuthGroup', '权限用户组', '1', '1', '', '0', '0', '10000', 'fa-sitemap', '0');
INSERT INTO `be_auth_rule` VALUES ('83', 'conf/awesome', '图标库', '2', '1', '', '45', '1', '1000', '0', '0');
INSERT INTO `be_auth_rule` VALUES ('84', 'article/addpost', '文章提交添加', '2', '1', '', '27', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('85', 'article/editpost', '文章提交修改', '2', '1', '', '27', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('86', 'admin/addpost', '管理员提交添加', '2', '1', '', '41', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('87', 'admin/editpost', '管理员提交修改', '2', '1', '', '41', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('88', 'cate/addpost', '栏目提交添加', '2', '1', '', '31', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('89', 'cate/editpost', '栏目提交修改', '2', '1', '', '31', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('90', 'link/addpost', '链接提交添加', '2', '1', '', '69', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('91', 'link/editpost', '链接提交修改', '2', '1', '', '69', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('92', 'auth_rule/addpost', '节点提交添加', '2', '1', '', '81', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('93', 'auth_rule/editpost', '节点提交修改', '2', '1', '', '81', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('94', 'auth_group/addpost', '用户组提交添加', '2', '1', '', '82', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('95', 'auth_group/editpost', '用户组提交修改', '2', '1', '', '82', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('96', 'img/addpost', '轮播图提交添加', '2', '1', '', '37', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('97', 'img/editpost', '轮播图提交修改', '2', '1', '', '37', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('98', 'conf/editpost', '配置项提交修改', '2', '1', '', '45', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('99', 'conf/addpost', '配置项提交添加', '2', '1', '', '45', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('100', 'comment/editpost', '评论提交修改', '2', '1', '', '65', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('101', 'auth_group/edit', '权限用户组修改', '2', '1', '', '82', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('102', 'auth_group/add', '权限用户组添加', '2', '1', '', '82', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('103', 'auth_group/index', '权限用户组列表', '2', '1', '', '82', '1', '1000', '0', '0');
INSERT INTO `be_auth_rule` VALUES ('105', 'auth_rule/index', '节点列表', '2', '1', '', '81', '1', '1000', '0', '0');
INSERT INTO `be_auth_rule` VALUES ('107', 'auth_rule/delete', '节点列表删除', '2', '1', '', '81', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('108', 'auth_rule/add', '节点列表添加', '2', '1', '', '81', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('109', 'auth_group/delete', '权限用户组删除', '2', '1', '', '82', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('112', 'auth_rule/status', '节点的禁止与开启', '2', '1', '', '81', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('113', 'auth_rule/edit', '节点列表修改', '2', '1', '', '81', '1', '1000', '0', '1');
INSERT INTO `be_auth_rule` VALUES ('115', 'conf/listspost', '配置列表提交修改（配置功能）', '2', '1', '', '45', '1', '1000', '', '1');
INSERT INTO `be_auth_rule` VALUES ('116', 'Log', '日志管理', '1', '1', '', '0', '0', '1000', 'fa-clipboard', '0');
INSERT INTO `be_auth_rule` VALUES ('117', 'log/login', '登录日志', '2', '1', '', '116', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('119', 'log/operate', '操作日志', '2', '1', '', '116', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('120', 'Timeline', '时间轴管理', '1', '1', '', '0', '0', '1000', 'fa-clock-o', '0');
INSERT INTO `be_auth_rule` VALUES ('121', 'timeline/index', '时间轴列表', '2', '1', '', '120', '1', '1000', '', '0');
INSERT INTO `be_auth_rule` VALUES ('122', 'data/importlist', '导出SQL列表', '2', '1', '', '35', '1', '1000', '', '0');

-- -----------------------------
-- Table structure for `be_cate`
-- -----------------------------
DROP TABLE IF EXISTS `be_cate`;
CREATE TABLE `be_cate` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `catename` varchar(64) DEFAULT NULL,
  `url` varchar(15) DEFAULT NULL,
  `keywords` varchar(255) DEFAULT NULL,
  `desc` varchar(64) DEFAULT NULL,
  `type` tinyint(1) DEFAULT '0',
  `sort` int(11) DEFAULT '10000',
  `create_time` int(11) DEFAULT NULL,
  `content` text,
  `pid` int(11) DEFAULT NULL COMMENT '上级id',
  `edit_time` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=gbk;

-- -----------------------------
-- Records of `be_cate`
-- -----------------------------
INSERT INTO `be_cate` VALUES ('14', '随笔集', 'artlist.html', '', '', '1', '10000', '1538897944', '', '0', '1558023302');
INSERT INTO `be_cate` VALUES ('15', 'Laravel55', '', '', '', '1', '10000', '1538897964', '', '14', '1542592954');
INSERT INTO `be_cate` VALUES ('16', 'ThinkPHP5', '', '', '', '1', '10000', '1538897977', '', '14', '1542592935');
INSERT INTO `be_cate` VALUES ('18', '代码', '', '', '', '1', '10000', '1538898120', '', '0', '1552143480');
INSERT INTO `be_cate` VALUES ('35', '二〇一九年', '', '', '', '1', '10000', '1539093243', '', '36', '1542870378');
INSERT INTO `be_cate` VALUES ('36', '闲言', '', '', '', '1', '10000', '1539093339', '', '0', '1544079248');
INSERT INTO `be_cate` VALUES ('39', '二〇一七年', '', '', '', '1', '10000', '1539093722', '', '36', '1542870168');
INSERT INTO `be_cate` VALUES ('40', '二〇一八年', '', '', '', '1', '10000', '1539093339', '', '36', '1542870181');
INSERT INTO `be_cate` VALUES ('41', '关于我', '', 'About Me', '我没有梦想，只想做一只咸鱼', '2', '60', '1539486240', '<p>Time is the currency of your life, spend it wisely</p><p><br/></p><p>时间就像是生命的金钱，要学会合理支配</p><p><br/></p><p>Don’t let others no matter how well intentioned spend it for you, it’s all you’ve got</p><p><br/></p><p>不要让别人为你浪费时间，你该自己去处理你应做的</p><p><br/></p><p>In the end, you may falter, but rest assured, time will not</p><p><br/></p><p>你最后也许会动摇，但时间不会</p><p><br/></p><p>&nbsp;</p><p><br/></p><p>Time is an endless, relentless stream, moving in one direction, while your memories move in another</p><p><br/></p><p>时间在无尽、无情的向前流逝，就像你的记忆一样</p><p><br/></p><p>It is not something you choose, but rather, it is something that chooses you</p><p><br/></p><p>这不是你选择了事物（时间），而是事物（时间）选择了你</p><p><br/></p><p>Ironically, it’s the timeless part of you that understands full well the true value of time</p><p><br/></p><p>讽刺的是，你对时间价值的全部理解就是，时间是永恒的</p><p><br/></p><p>Time, more than treasure, is the greatest gift you can give</p><p><br/></p><p>时间（的意义）并不仅仅是宝藏，更是你能给予（他人）最好的礼物</p><p><br/></p><p>&nbsp;</p><p><br/></p><p>It’s about time</p><p><br/></p><p>这就是时间</p><p><br/></p><p>&nbsp;</p><p><br/></p><p>It’s about time you do what you were put on earth to do</p><p><br/></p><p>是时候在这颗星球上做你该做的事了</p><p><br/></p><p>It’s about time you let go of negative people and habits and move to higher ground</p><p><br/></p><p>是时候放弃那些消极的人和习惯，去重新出发</p><p><br/></p><p>It’s okay to waste time, but only on things you truly love and enjoy</p><p><br/></p><p>浪费时间也可以，但也要浪费在你喜爱并且享受的事情上</p><p><br/></p><p>It’s much too precious to waste on anger and fear</p><p><br/></p><p>把时间用在恐惧和愤怒上才是最浪费的</p><p><br/></p><p>Remember time doesn’t change anything, it’s you that changes, everything</p><p><br/></p><p>要记住，时间的流逝改变不了什么，只有你能改变一切</p><p><br/></p><p>We are all traveling through life at the same speed, sixty minutes per hour</p><p><br/></p><p>我们所有人度过的时间都一样，一小时都有60分</p><p><br/></p><p>And if this is not the hour, when will be?</p><p><br/></p><p>（这个道理）你现在（这一小时不明白），那什么时候（你才懂）</p><p><br/></p><p>When will you realize that this is the time of your life?</p><p><br/></p><p>什么时候你才能明白时间对于你生命（的意义）</p><p><br/></p><p>The past is merely a dream and the future merely a prayer</p><p><br/></p><p>梦想早已留到过去，还在为未来而祈祷？</p><p><br/></p><p>Your future starts right here, right now, not tomorrow</p><p><br/></p><p>你的未来应该在当下，是现在，而不是明天！</p><p><br/></p><p>The most important moment of your life is this one</p><p><br/></p><p>你人生中最重要的时刻是现在（活在当下）</p><p><br/></p><p>It’s about time</p><p><br/></p><p>这才是时间（的意义）</p><p><br/></p><p style=\"text-align: center;\"><img src=\"https://i.loli.net/2019/11/27/nbVOeJkAUXam3sC.png\" title=\"v.png\" alt=\"v.png\" width=\"510\" height=\"255\" border=\"0\" vspace=\"0\" style=\"width: 510px; height: 255px;\"/></p><p><br/></p>', '0', '1574870157');
INSERT INTO `be_cate` VALUES ('42', 'Linux', '', '', '', '1', '10000', '1542593449', '', '14', '');
INSERT INTO `be_cate` VALUES ('44', 'Git', '', '', '', '1', '10000', '1543664446', '', '14', '');
INSERT INTO `be_cate` VALUES ('47', 'workman', '', '', '', '1', '10000', '1539093339', '', '14', '1552057560');
INSERT INTO `be_cate` VALUES ('48', '邻居', '', '', '友情链接', '2', '10000', '1564329325', '', '0', '1564329369');
INSERT INTO `be_cate` VALUES ('50', 'Vue', '', '', '', '1', '10000', '1566284427', '', '14', '');
INSERT INTO `be_cate` VALUES ('51', 'JavaScript', '', '', '', '1', '10000', '1568105057', '', '14', '');
INSERT INTO `be_cate` VALUES ('52', 'PHP', '', '', '', '1', '10000', '1571043516', '', '14', '');
INSERT INTO `be_cate` VALUES ('53', '部署', '', '', '', '1', '10000', '1576578350', '', '14', '');
INSERT INTO `be_cate` VALUES ('54', 'Database', '', '', '', '1', '10000', '1576829480', '', '14', '');
INSERT INTO `be_cate` VALUES ('59', '简历', '', 'resume', '', '2', '10000', '1582611412', '<h2>个人信息</h2>\n<ul>\n<li>刘海/男/1997</li>\n<li>专科/软件技术</li>\n<li>工作年限：1 年</li>\n<li>电话：199 5049 3316</li>\n<li>邮箱：814029073@qq.com</li>\n<li>期望职位：PHP 开发工程师</li>\n<li>期望薪资: 7K ~ 8K</li>\n<li>期望城市：成都</li>\n<li>GitHub：<a href=\"https://github.com/Haiwar\">https://github.com/Haiwar</a></li>\n<li>博客：<a href=\"https://www.liuhai.fun/\">https://www.liuhai.fun/</a></li>\n</ul>\n<h2>技能清单</h2>\n<ul>\n<li>Web开发：PHP/Html5/JavaScript/CSS</li>\n<li>前端：Bootstrap/jQuery/Vue</li>\n<li>Web框架：ThinkPHP</li>\n<li>数据库相关：MySQL/PDO</li>\n<li>版本管理和自动化部署工具：Svn/Git/Composer</li>\n<li>单元测试：PHPUnit/SimpleTest/Travis CI</li>\n<li>缓存：Redis/Memecached</li>\n<li>其他: 微信支付、微信公众号、小程序开发</li>\n</ul>\n<h2>个人优势</h2>\n<ul>\n<li>3.5 年软件开发经验，积累了较多的业务和开发经验，能独立完成一个 Web 应用的开发</li>\n<li>有良好的学习能力、沟通能力、解决问题能力，拥有较强的工作责任感</li>\n<li>拥有 Geek 精神，热爱开源，在 GitHub 上有多个开源项目</li>\n<li>英语良好，无障碍阅读英文文档，有多篇英文技术翻译文章</li>\n<li>熟练写作，无压力编写技术文档、项目文档</li>\n</ul>\n<h2>工作经历</h2>\n<h4>TCL 数码科技有限公司 （ 2014.7 ~ 2017.4）软件工程师</h4>\n<ul>\n<li>参与项目需求调研、分析、产品设计，并负责完成核心代码</li>\n<li>参与热门技术的调研，并将成熟的技术/方案引入带项目中</li>\n<li>参与完善现有项目的框架结构以及迭代优化</li>\n</ul>\n<h4>北京优帆远扬科技有限公司 （2017.4 ~ 2018.1）项目负责人</h4>\n<ul>\n<li>负责对项目整体需求分析、重难点技术的技术调研</li>\n<li>负责项目的开发进度规划、定制 UserStory，指导并管理研发人员的开发</li>\n<li>负责项目重难点模块的开发工作，项目部署、后期维护</li>\n</ul>\n<h2>项目经验</h2>\n<h4>TCL 智能云拼接屏系统</h4>\n<ul>\n<li>项目介绍 \n<ul>\n<li>此项目是为拼接墙提供一套实时和定时控制拼接屏的技术解决方案。</li>\n</ul></li>\n<li>项目职责 \n<ul>\n<li>担任软件端负责人，负责编写前端和通讯端所有代码。</li>\n</ul></li>\n<li>项目收获 \n<ul>\n<li>自定义 ExtJS 主题，将 web 应用打包成 Native app</li>\n<li>自定义 ExtJS 组件，完成了移动端多手势操作</li>\n<li>使用 ffmpeg、WebSocket 完成了实时预览摄像头，相当于视频直播</li>\n<li>熟练使用 NodeJS KOA 框架、Socket 通讯</li>\n<li>自定义浮点数算法，将虚拟的逻辑数据转化为实际的物理数据误差不超过 1 像素</li>\n<li>有深刻的认知和理解 HTTP 协议、TCP 协议</li>\n</ul></li>\n<li>项目结果 \n<ul>\n<li>2017 年初上线后，应用到煤矿、广电总局、安防监控等场景。</li>\n</ul></li>\n</ul>\n<h4>福彩信息发布系统</h4>\n<ul>\n<li>项目介绍 \n<ul>\n<li>此项目是对福彩机构所定制的一套信息发布系统的解决方案。</li>\n</ul></li>\n<li>项目职责 \n<ul>\n<li>担任项目主程，负责编写项目核心代码、后期维护。</li>\n</ul></li>\n<li>项目收获 \n<ul>\n<li>熟练使用 ExtJS 组件的应用和编写</li>\n<li>深刻认知、理解JavaScript的同步异步、作用域、事件处理机制</li>\n<li>使用 Memcached 缓存，提高系统运行效率</li>\n</ul></li>\n</ul>\n<h4>科技寺</h4>\n<ul>\n<li>项目介绍 \n<ul>\n<li>此项目是对科技寺（创业公司孵化器）门户信息、入住公司、举办活动等等信息的介绍，包含门户网站、微信公众号、微信小程序等等应用</li>\n</ul></li>\n<li>项目职责 \n<ul>\n<li>此项目担任项目技术负责人，负责核心代码开发、开发任务分发、项目团队管理、跟进项目进展等等</li>\n</ul></li>\n<li>项目收获 \n<ul>\n<li>使用 EasyWechat 扩展包完成了公众号、小程序的开发</li>\n<li>完成了活动在线报名的微信支付、取消订单、退款等功能</li>\n<li>调用云片网 API 短信接口，完成了短信验证码、用户消息提醒等功能</li>\n</ul></li>\n</ul>\n<h2>开源项目</h2>\n<h4><a href=\"https://github.com/todayqq/notification\">Notification</a></h4>\n<ul>\n<li>项目介绍 \n<ul>\n<li>项目消息通知管理系统，支持 Coding、GitHub 提交信息，利用 WebHook 方式传输到指定项目消息讨论组，还可将项目错误报警信息已任务的方式指派给指定任务人。</li>\n</ul></li>\n<li>项目收获 \n<ul>\n<li>Oauth2 授权协议</li>\n<li>Teambition 消息组插件开发</li>\n<li>WebHook 调用</li>\n<li>项目异常报警工具 Sentry</li>\n</ul></li>\n</ul>\n<h4><a href=\"https://github.com/todayqq/PHPerInterviewGuide\">PHPer 技术栈梳理</a></h4>\n<ul>\n<li>此项目是对 PHPer 技术栈的梳理，包含且不限于 Web、PHP、Laravel、算法、MySQL、Linux、Git 等技术栈相关知识、技巧。</li>\n</ul>\n<h2>教育经历</h2>\n<ul>\n<li>2015.9 - 2017.12 北京航空航天大学/专科/计算机科学与技术（远程教育）</li>\n</ul>\n<h2>获得荣誉</h2>\n<ul>\n<li>\n<p>2016 年获得 TCL 技术研发团队最佳成员称号，KPI 绩效评分为 S 级</p>\n</li>\n<li>\n<p>技术专栏文章多次被技术论坛转载，也多次登上精选文章</p>\n</li>\n<li>\n<hr />\n</li>\n</ul>\n<h2>致谢</h2>\n<p>感谢您花时间阅读我的简历，期待能有机会和您一起工作。</p>', '41', '1583415312');
INSERT INTO `be_cate` VALUES ('60', '点点滴滴', '', '', '', '3', '10000', '1583415335', '', '0', '');

-- -----------------------------
-- Table structure for `be_comment`
-- -----------------------------
DROP TABLE IF EXISTS `be_comment`;
CREATE TABLE `be_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uid` int(11) DEFAULT '0' COMMENT 'oath用户id',
  `user_name` varchar(64) DEFAULT NULL,
  `user_email` varchar(64) DEFAULT NULL,
  `user_avatar` varchar(255) DEFAULT NULL,
  `user_comment` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `create_time` int(11) DEFAULT NULL,
  `aid` int(11) DEFAULT NULL,
  `cid` int(11) DEFAULT NULL,
  `status` tinyint(3) DEFAULT '1' COMMENT '0禁止 1启用',
  `ip` varchar(64) DEFAULT NULL,
  `path` varchar(25) DEFAULT NULL,
  `send_email` bigint(5) DEFAULT '0' COMMENT '1发送,0不发送',
  `link` varchar(30) DEFAULT NULL,
  `rule` tinyint(3) DEFAULT '0' COMMENT '0游客，1邻居，2管理员',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=215 DEFAULT CHARSET=gbk ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_comment`
-- -----------------------------
INSERT INTO `be_comment` VALUES ('13', '0', '大哥', '814029073@qq.com', '', '刚好用到，非常感谢🙏🙏🙏', '1571819567', '23', '', '1', '222.209.78.119', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('14', '0', '大哥', '814029073@qq.com', '', '14', '1571885154', '33', '', '0', '222.209.78.119', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('15', '0', '大哥', '814029073@qq.com', '', '111111', '1571885154', '33', '', '0', '222.209.78.119', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('16', '0', '宁也是憨憨吗', 'ytp892598640@gmail.com', '', '憨憨', '1571907386', '24', '', '0', '222.209.78.119', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('76', '0', '邵轩', '84123124@qq.com', '', '哈哈哈', '1575125273', '42', '', '1', '117.136.62.19', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('77', '0', '邵轩', '84123124@qq.com', '', '111', '1575125293', '42', '', '0', '117.136.62.19', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('82', '0', '致命毒药', '814029073@qq.com', '', '来过🤯', '1576811330', '46', '', '1', '171.213.40.153', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('83', '0', '苏酒', '814029073@qq.com', '', '一生会有多少的路程🎶\n遇到多少人🎶', '1577240453', '50', '', '1', '171.213.50.14', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('84', '0', '苏酒', '814029073@qq.com', '', '我收到过最好的圣诞礼物，是穿越风雪为我而来的你', '1577241446', '', '41', '1', '171.213.50.14', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('85', '0', '张立峰', '81449455@qq.com', '', '谢谢！', '1577635438', '57', '', '1', '222.209.35.48', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('94', '0', 'admin', '814029073@qq.com', '', '光辉岁月', '1578565025', '50', '', '1', '171.88.106.56', '', '1', '', '0');
INSERT INTO `be_comment` VALUES ('106', '0', '沐风', '65256651@qq.com', '', '能否提供下qq联系下', '1581659219', '', '41', '1', '27.195.238.206', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('182', '0', '张立峰', '81449455@qq.com', '', '嗨，2020年武汉肺炎', '1581835140', '', '41', '1', '222.215.26.243', '', '0', '', '0');
INSERT INTO `be_comment` VALUES ('183', '0', 'camellia', '805795955@qq.com', '', '交换友情链接\n网址：https://guanchao.site\n标题：时间里的博客', '1581836298', '', '41', '1', '175.188.20.183', '', '0', '', '0');

-- -----------------------------
-- Table structure for `be_conf`
-- -----------------------------
DROP TABLE IF EXISTS `be_conf`;
CREATE TABLE `be_conf` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cn_name` varchar(64) DEFAULT NULL,
  `en_name` varchar(64) DEFAULT NULL,
  `type` tinyint(3) DEFAULT '1' COMMENT '配置类型:1:单行文本框、2:文本域、3:单选按钮、4:复选按钮、5:下拉菜单',
  `value` text COMMENT '配置值',
  `values` varchar(255) DEFAULT NULL COMMENT '配置可选值',
  `sort` int(11) DEFAULT '10000',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `status` tinyint(3) DEFAULT '1' COMMENT '中英文转换',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=gbk ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_conf`
-- -----------------------------
INSERT INTO `be_conf` VALUES ('1', '网站名称', 'seo_name', '1', 'I\'m Sonder', '', '8', '1538814376', '1539012946', '1');
INSERT INTO `be_conf` VALUES ('2', '网站关键字', 'keywords', '1', '个人技术博客,PHP,JQ,刘海,刘海的个人博客', '', '2', '1538814421', '1538831877', '1');
INSERT INTO `be_conf` VALUES ('3', '网站描述', 'desc', '2', '个人技术博客，记录生活点点滴滴，分享PHP技术的个人博客', '', '1', '1538814507', '', '1');
INSERT INTO `be_conf` VALUES ('4', '是否关闭网站', 'close', '3', '否', '是,否', '3', '1538814572', '1538840202', '1');
INSERT INTO `be_conf` VALUES ('6', '导航栏是否固定', 'fixed', '4', '是', '是', '5', '1538824206', '1544842490', '1');
INSERT INTO `be_conf` VALUES ('8', '网站申明', 'copyright', '1', '2018-2020', '', '6', '1538831582', '1539506514', '1');
INSERT INTO `be_conf` VALUES ('9', '备案号', 'banquan', '1', '蜀ICP备19030690号', '', '9', '1539506562', '1539742949', '1');
INSERT INTO `be_conf` VALUES ('10', '个性签名', 'qianming', '1', '乘风波浪会有时,直挂云帆破沧海', '', '10', '1539506909', '', '1');
INSERT INTO `be_conf` VALUES ('12', '轮播图特效', 'effect', '2', 'jQuery(\".slideBox\").slide({mainCell:\".bd ul\",effect:\"leftLoop\",autoPlay:true,delayTime:1000});', '', '12', '1544603496', '1551890310', '1');
INSERT INTO `be_conf` VALUES ('13', '回到顶部', 'top', '1', 'https://i.loli.net/2019/09/16/LYqM3reZlRJabUG.png', '', '13', '1565853625', '', '1');
INSERT INTO `be_conf` VALUES ('14', '去掉轮播图部分', 'del_lunbo', '3', '开启', '开启,关闭', '14', '1565854293', '', '1');
INSERT INTO `be_conf` VALUES ('15', '文章列表显示数目', 'artlsit_number', '1', '3', '用于api', '15', '1569675459', '', '1');
INSERT INTO `be_conf` VALUES ('16', '通知提醒框---警告', 'danger_info', '2', '', '危险警告', '10000', '1575988663', '1575991472', '1');
INSERT INTO `be_conf` VALUES ('17', '通知提醒框---提醒', 'remind_info', '2', '', '网站修改了什么', '10000', '1575988761', '1575991477', '1');
INSERT INTO `be_conf` VALUES ('18', '通知提醒框---通告', 'notice_info', '2', '', '好消息', '10000', '1575988829', '1575991481', '1');
INSERT INTO `be_conf` VALUES ('19', '是否开启老前台', 'old_index', '3', '否', '是,否', '10000', '1583034428', '1583036294', '1');

-- -----------------------------
-- Table structure for `be_img`
-- -----------------------------
DROP TABLE IF EXISTS `be_img`;
CREATE TABLE `be_img` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pic` text,
  `desc` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `sort` int(11) DEFAULT '10000',
  `status` tinyint(3) DEFAULT '0' COMMENT '发布状态',
  `item` tinyint(1) DEFAULT '0' COMMENT '第一展示',
  `rec_index` tinyint(3) DEFAULT NULL COMMENT '广告位 1首页,2右侧',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=gbk ROW_FORMAT=COMPACT;


-- -----------------------------
-- Table structure for `be_link`
-- -----------------------------
DROP TABLE IF EXISTS `be_link`;
CREATE TABLE `be_link` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `url` varchar(255) DEFAULT NULL,
  `desc` varchar(255) DEFAULT NULL,
  `status` tinyint(3) DEFAULT '1',
  `name` varchar(64) DEFAULT NULL,
  `sort` int(11) DEFAULT '10000',
  `pic` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=gbk ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_link`
-- -----------------------------
INSERT INTO `be_link` VALUES ('13', 'http://sev7n.cn/', '一个憨憨', '1', 'Sev7n', '10000', 'http://sev7n.cn/images/avatar.jpg');
INSERT INTO `be_link` VALUES ('15', 'http://new.liuhai.fun/', '关注互联网热点信息，了解天下大事', '1', '互联网热榜', '10000', 'http://new.liuhai.fun./favicon.ico');
INSERT INTO `be_link` VALUES ('16', 'https://pingxonline.com', '广西科技大学的小伙伴', '1', 'Ping.X | 平兄', '10000', 'https://avatars0.githubusercontent.com/u/14366866?s=400&v=4');
INSERT INTO `be_link` VALUES ('17', 'http://love.liuhai.fun', '高校告白墙，欢迎使用！', '1', '告白墙', '10000', '');
INSERT INTO `be_link` VALUES ('18', 'https://baijunyao.com/', '个人博客模板,博客模板,博客系统,技术博客,个人博客,设计模式,laravel博客,php博客', '1', '白俊遥', '10000', '');
INSERT INTO `be_link` VALUES ('19', 'https://www.frankfeekr.cn/', 'from zero to hero', '1', 'Frank\'s 技术世界', '10000', '');
INSERT INTO `be_link` VALUES ('20', 'https://guanchao.site', '时间里的博客', '1', '时间里的博客', '10000', '');
INSERT INTO `be_link` VALUES ('22', 'https://www.leo96.com/', '.NET开发工程师', '1', '不落阁', '10000', '');

-- -----------------------------
-- Table structure for `be_login_log`
-- -----------------------------
DROP TABLE IF EXISTS `be_login_log`;
CREATE TABLE `be_login_log` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '日志id',
  `login_user` varchar(55) NOT NULL COMMENT '登录用户',
  `login_ip` varchar(15) NOT NULL COMMENT '登录ip',
  `login_area` varchar(55) DEFAULT NULL COMMENT '登录地区',
  `login_user_agent` varchar(155) DEFAULT NULL COMMENT '登录设备头',
  `login_time` datetime DEFAULT NULL COMMENT '登录时间',
  `login_status` tinyint(1) DEFAULT '1' COMMENT '登录状态 1 成功 2 失败',
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB AUTO_INCREMENT=244 DEFAULT CHARSET=utf8;

-- -----------------------------
-- Records of `be_login_log`
-- -----------------------------
INSERT INTO `be_login_log` VALUES ('1', 'admin', '127.0.0.1', '内网IP-内网IP', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36', '2019-10-11 16:03:07', '1');
INSERT INTO `be_login_log` VALUES ('6', 'admin', '118.112.203.173', '成都市', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-01-14 11:29:28', '1');
INSERT INTO `be_login_log` VALUES ('7', 'admin', '118.112.203.173', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-01-14 11:45:09', '1');
INSERT INTO `be_login_log` VALUES ('8', 'admin', '118.112.203.173', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-01-14 13:31:49', '1');
INSERT INTO `be_login_log` VALUES ('9', 'admin1（用户不存在）', '118.112.203.173', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-01-14 13:32:12', '2');
INSERT INTO `be_login_log` VALUES ('10', 'admin（验证码错误）', '118.112.203.173', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-01-14 13:32:17', '2');
INSERT INTO `be_login_log` VALUES ('23', 'admin', '171.210.238.210', '中国-四川-成都-电信', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-01-14 19:10:39', '1');
INSERT INTO `be_login_log` VALUES ('24', 'admin', '117.139.132.66', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-01-14 20:48:51', '1');
INSERT INTO `be_login_log` VALUES ('25', 'admin', '118.112.203.173', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-01-19 12:25:20', '1');
INSERT INTO `be_login_log` VALUES ('26', 'admin', '171.91.80.72', '中国-四川-巴中-电信', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-02-05 09:37:14', '1');
INSERT INTO `be_login_log` VALUES ('27', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:05:12', '1');
INSERT INTO `be_login_log` VALUES ('28', 'admin（退出系统）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:16:48', '1');
INSERT INTO `be_login_log` VALUES ('29', 'test（密码错误）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:16:58', '2');
INSERT INTO `be_login_log` VALUES ('30', 'test（密码错误）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:17:06', '2');
INSERT INTO `be_login_log` VALUES ('31', 'test', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:17:11', '1');
INSERT INTO `be_login_log` VALUES ('32', 'test（退出系统）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:17:39', '1');
INSERT INTO `be_login_log` VALUES ('33', 'test', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:18:08', '1');
INSERT INTO `be_login_log` VALUES ('34', 'test（退出系统）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:18:31', '1');
INSERT INTO `be_login_log` VALUES ('35', 'test', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:18:48', '1');
INSERT INTO `be_login_log` VALUES ('36', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:19:12', '1');
INSERT INTO `be_login_log` VALUES ('37', 'test', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 16:20:00', '1');
INSERT INTO `be_login_log` VALUES ('38', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-06 17:10:52', '1');
INSERT INTO `be_login_log` VALUES ('39', 'test', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-07 13:43:56', '1');
INSERT INTO `be_login_log` VALUES ('40', 'test（退出系统）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-07 13:47:43', '1');
INSERT INTO `be_login_log` VALUES ('41', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-07 13:47:46', '1');
INSERT INTO `be_login_log` VALUES ('42', 'admin（验证码错误）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-07 13:47:46', '2');
INSERT INTO `be_login_log` VALUES ('43', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-08 14:37:12', '1');
INSERT INTO `be_login_log` VALUES ('44', 'admin（验证码错误）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-08 14:37:13', '2');
INSERT INTO `be_login_log` VALUES ('45', 'admin（退出系统）', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-08 16:26:03', '1');
INSERT INTO `be_login_log` VALUES ('46', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-08 16:26:08', '1');
INSERT INTO `be_login_log` VALUES ('47', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-02-08 21:54:02', '1');
INSERT INTO `be_login_log` VALUES ('48', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-09 10:24:46', '1');
INSERT INTO `be_login_log` VALUES ('49', 'admin', '171.91.80.24', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-09 11:13:29', '1');
INSERT INTO `be_login_log` VALUES ('50', 'admin', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-11 14:17:32', '1');
INSERT INTO `be_login_log` VALUES ('51', 'admin', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-11 20:00:13', '1');
INSERT INTO `be_login_log` VALUES ('52', 'admin', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 11:42:59', '1');
INSERT INTO `be_login_log` VALUES ('53', 'test（密码错误）', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:17:44', '2');
INSERT INTO `be_login_log` VALUES ('54', 'test（账号或密码错误超过3次）', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:19:28', '2');
INSERT INTO `be_login_log` VALUES ('55', 'test（验证码错误）', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:20:22', '2');
INSERT INTO `be_login_log` VALUES ('56', 'test（账号或密码错误超过3次）', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:20:26', '2');
INSERT INTO `be_login_log` VALUES ('57', 'test（验证码错误）', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:21:51', '2');
INSERT INTO `be_login_log` VALUES ('58', 'test', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:21:56', '1');
INSERT INTO `be_login_log` VALUES ('59', 'test（退出系统）', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:22:16', '1');
INSERT INTO `be_login_log` VALUES ('60', 'admin', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 13:22:20', '1');
INSERT INTO `be_login_log` VALUES ('61', 'admin', '171.92.183.215', '中国-四川-达州-电信', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-02-16 14:33:57', '1');
INSERT INTO `be_login_log` VALUES ('62', 'admin', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 15:16:07', '1');
INSERT INTO `be_login_log` VALUES ('63', 'admin（验证码错误）', '222.215.26.243', '中国-四川省-巴中市-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-16 15:16:07', '2');
INSERT INTO `be_login_log` VALUES ('64', 'test', '112.227.127.213', '中国-山东-淄博-联通', 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.5 Mobile/15E148 Safari/604.1', '2020-02-16 16:15:20', '1');
INSERT INTO `be_login_log` VALUES ('65', 'test', '112.227.127.213', '中国-山东-淄博-联通', 'Mozilla/5.0 (Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko', '2020-02-16 17:21:44', '1');
INSERT INTO `be_login_log` VALUES ('66', 'admin', '171.91.70.77', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-18 17:03:48', '1');
INSERT INTO `be_login_log` VALUES ('67', 'admin', '171.91.70.77', '中国-四川-巴中-电信', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36', '2020-02-19 15:06:52', '1');
INSERT INTO `be_login_log` VALUES ('68', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-20 18:30:07', '1');
INSERT INTO `be_login_log` VALUES ('69', 'admin（验证码错误）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-20 18:30:08', '2');
INSERT INTO `be_login_log` VALUES ('70', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-02-20 23:58:55', '1');
INSERT INTO `be_login_log` VALUES ('71', 'admin', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-21 11:35:30', '1');
INSERT INTO `be_login_log` VALUES ('72', 'admin', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-21 16:54:37', '1');
INSERT INTO `be_login_log` VALUES ('73', 'admin（退出系统）', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-21 17:24:12', '1');
INSERT INTO `be_login_log` VALUES ('74', 'test（密码错误）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-21 23:29:07', '2');
INSERT INTO `be_login_log` VALUES ('75', 'test', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-21 23:29:25', '1');
INSERT INTO `be_login_log` VALUES ('76', 'test（退出系统）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-21 23:29:31', '1');
INSERT INTO `be_login_log` VALUES ('77', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-21 23:29:35', '1');
INSERT INTO `be_login_log` VALUES ('78', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-22 10:46:42', '1');
INSERT INTO `be_login_log` VALUES ('79', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36', '2020-02-22 20:18:04', '1');
INSERT INTO `be_login_log` VALUES ('80', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 17:11:01', '1');
INSERT INTO `be_login_log` VALUES ('81', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:24:50', '1');
INSERT INTO `be_login_log` VALUES ('82', 'admin', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1', '2020-02-23 23:37:18', '1');
INSERT INTO `be_login_log` VALUES ('83', 'test', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:38:46', '1');
INSERT INTO `be_login_log` VALUES ('84', 'test（忘记密码，邮箱发送成功）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:39:50', '1');
INSERT INTO `be_login_log` VALUES ('85', 'test（忘记密码，邮箱发送成功）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:40:09', '1');
INSERT INTO `be_login_log` VALUES ('86', 'test（忘记密码，邮箱发送失败）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:41:33', '0');
INSERT INTO `be_login_log` VALUES ('87', 'test（忘记密码，邮箱发送失败）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:44:42', '0');
INSERT INTO `be_login_log` VALUES ('88', 'test（忘记密码，邮箱发送失败）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:45:09', '0');
INSERT INTO `be_login_log` VALUES ('89', 'test', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:46:02', '1');
INSERT INTO `be_login_log` VALUES ('90', 'test（退出系统）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:47:03', '1');
INSERT INTO `be_login_log` VALUES ('91', 'test（忘记密码，邮箱发送成功）', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:47:22', '1');
INSERT INTO `be_login_log` VALUES ('92', 'test', '117.139.134.4', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-23 23:47:32', '1');
INSERT INTO `be_login_log` VALUES ('93', 'admin', '171.210.232.64', '中国-四川-成都-电信', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-02-24 12:37:35', '1');
INSERT INTO `be_login_log` VALUES ('94', 'admin', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-24 15:42:20', '1');
INSERT INTO `be_login_log` VALUES ('95', 'admin', '117.139.132.115', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-24 20:16:24', '1');
INSERT INTO `be_login_log` VALUES ('96', 'admin（验证码错误）', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-25 12:03:22', '2');
INSERT INTO `be_login_log` VALUES ('97', 'admin', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-25 12:03:26', '1');
INSERT INTO `be_login_log` VALUES ('98', 'admin', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-25 18:35:23', '1');
INSERT INTO `be_login_log` VALUES ('99', 'admin', '117.139.132.115', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-25 23:54:59', '1');
INSERT INTO `be_login_log` VALUES ('100', 'admin', '117.139.132.115', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-25 23:57:10', '1');
INSERT INTO `be_login_log` VALUES ('101', 'admin', '171.213.50.232', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-26 11:18:35', '1');
INSERT INTO `be_login_log` VALUES ('102', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-27 10:05:23', '1');
INSERT INTO `be_login_log` VALUES ('103', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36', '2020-02-28 11:30:48', '1');
INSERT INTO `be_login_log` VALUES ('104', 'admin', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 00:17:18', '1');
INSERT INTO `be_login_log` VALUES ('105', 'admin', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 09:35:15', '1');
INSERT INTO `be_login_log` VALUES ('106', 'admin（验证码错误）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 09:35:16', '2');
INSERT INTO `be_login_log` VALUES ('107', 'admin（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 09:36:27', '1');
INSERT INTO `be_login_log` VALUES ('108', 'test1', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 09:36:36', '1');
INSERT INTO `be_login_log` VALUES ('109', 'test1（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 09:38:08', '1');
INSERT INTO `be_login_log` VALUES ('110', 'admin', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 09:38:14', '1');
INSERT INTO `be_login_log` VALUES ('111', 'admin（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:02:09', '1');
INSERT INTO `be_login_log` VALUES ('112', 'test1', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:02:16', '1');
INSERT INTO `be_login_log` VALUES ('113', 'test1（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:02:31', '1');
INSERT INTO `be_login_log` VALUES ('114', 'admin', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:02:34', '1');
INSERT INTO `be_login_log` VALUES ('115', 'admin（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:03:03', '1');
INSERT INTO `be_login_log` VALUES ('116', 'test1', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:03:10', '1');
INSERT INTO `be_login_log` VALUES ('117', 'admin（验证码错误）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:08:12', '2');
INSERT INTO `be_login_log` VALUES ('118', 'admin（验证码错误）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:08:17', '2');
INSERT INTO `be_login_log` VALUES ('119', 'admin（验证码错误）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:08:19', '2');
INSERT INTO `be_login_log` VALUES ('120', 'admin', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:08:24', '1');
INSERT INTO `be_login_log` VALUES ('121', 'admin（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:10:01', '1');
INSERT INTO `be_login_log` VALUES ('122', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:10:09', '1');
INSERT INTO `be_login_log` VALUES ('123', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:10:26', '1');
INSERT INTO `be_login_log` VALUES ('124', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:10:36', '1');
INSERT INTO `be_login_log` VALUES ('125', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:11:04', '1');
INSERT INTO `be_login_log` VALUES ('126', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:11:45', '1');
INSERT INTO `be_login_log` VALUES ('127', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:12:26', '1');
INSERT INTO `be_login_log` VALUES ('128', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:12:52', '1');
INSERT INTO `be_login_log` VALUES ('129', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:13:20', '1');
INSERT INTO `be_login_log` VALUES ('130', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:13:54', '1');
INSERT INTO `be_login_log` VALUES ('131', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:13:58', '1');
INSERT INTO `be_login_log` VALUES ('132', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:20:39', '1');
INSERT INTO `be_login_log` VALUES ('133', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:20:41', '1');
INSERT INTO `be_login_log` VALUES ('134', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:20:57', '1');
INSERT INTO `be_login_log` VALUES ('135', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:21:47', '1');
INSERT INTO `be_login_log` VALUES ('136', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:22:15', '1');
INSERT INTO `be_login_log` VALUES ('137', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:22:27', '1');
INSERT INTO `be_login_log` VALUES ('138', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:23:03', '1');
INSERT INTO `be_login_log` VALUES ('139', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:23:10', '1');
INSERT INTO `be_login_log` VALUES ('140', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:10', '1');
INSERT INTO `be_login_log` VALUES ('141', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:11', '1');
INSERT INTO `be_login_log` VALUES ('142', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:12', '1');
INSERT INTO `be_login_log` VALUES ('143', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:13', '1');
INSERT INTO `be_login_log` VALUES ('144', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:17', '1');
INSERT INTO `be_login_log` VALUES ('145', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:19', '1');
INSERT INTO `be_login_log` VALUES ('146', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:21', '1');
INSERT INTO `be_login_log` VALUES ('147', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:24', '1');
INSERT INTO `be_login_log` VALUES ('148', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:25', '1');
INSERT INTO `be_login_log` VALUES ('149', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:26', '1');
INSERT INTO `be_login_log` VALUES ('150', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:24:28', '1');
INSERT INTO `be_login_log` VALUES ('151', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:16', '1');
INSERT INTO `be_login_log` VALUES ('152', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:18', '1');
INSERT INTO `be_login_log` VALUES ('153', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:21', '1');
INSERT INTO `be_login_log` VALUES ('154', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:23', '1');
INSERT INTO `be_login_log` VALUES ('155', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:27', '1');
INSERT INTO `be_login_log` VALUES ('156', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:29', '1');
INSERT INTO `be_login_log` VALUES ('157', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:31', '1');
INSERT INTO `be_login_log` VALUES ('158', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:35', '1');
INSERT INTO `be_login_log` VALUES ('159', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:36', '1');
INSERT INTO `be_login_log` VALUES ('160', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:38', '1');
INSERT INTO `be_login_log` VALUES ('161', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:40', '1');
INSERT INTO `be_login_log` VALUES ('162', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:42', '1');
INSERT INTO `be_login_log` VALUES ('163', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:44', '1');
INSERT INTO `be_login_log` VALUES ('164', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:45', '1');
INSERT INTO `be_login_log` VALUES ('165', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:46', '1');
INSERT INTO `be_login_log` VALUES ('166', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:48', '1');
INSERT INTO `be_login_log` VALUES ('167', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:49', '1');
INSERT INTO `be_login_log` VALUES ('168', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:50', '1');
INSERT INTO `be_login_log` VALUES ('169', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:25:55', '1');
INSERT INTO `be_login_log` VALUES ('170', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:27:35', '1');
INSERT INTO `be_login_log` VALUES ('171', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:27:37', '1');
INSERT INTO `be_login_log` VALUES ('172', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:27:38', '1');
INSERT INTO `be_login_log` VALUES ('173', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:27:43', '1');
INSERT INTO `be_login_log` VALUES ('174', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:28:05', '1');
INSERT INTO `be_login_log` VALUES ('175', '（退出系统）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36', '2020-02-29 10:28:14', '1');
INSERT INTO `be_login_log` VALUES ('206', 'admin（密码错误）', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-03 21:00:30', '2');
INSERT INTO `be_login_log` VALUES ('207', 'admin', '117.139.133.12', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-03 21:00:42', '1');
INSERT INTO `be_login_log` VALUES ('208', 'admin（退出系统）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 10:15:21', '1');
INSERT INTO `be_login_log` VALUES ('209', 'admin（密码错误）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 10:15:32', '2');
INSERT INTO `be_login_log` VALUES ('210', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 10:15:38', '1');
INSERT INTO `be_login_log` VALUES ('211', '（退出系统）', '101.89.239.232', '中国-上海-上海-电信', 'Mozilla/5.0 (Linux; U; Android 4.4.4; zh-cn; MX4 Pro Build/KTU84P) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30', '2020-03-04 10:18:59', '1');
INSERT INTO `be_login_log` VALUES ('212', 'admin（密码错误）', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 21:10:58', '2');
INSERT INTO `be_login_log` VALUES ('213', 'admin（账号或密码错误超过3次）', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 21:11:07', '2');
INSERT INTO `be_login_log` VALUES ('214', 'admin（账号或密码错误超过5次）', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 21:11:31', '2');
INSERT INTO `be_login_log` VALUES ('215', 'admin（账号或密码错误超过10次）', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 21:11:47', '2');
INSERT INTO `be_login_log` VALUES ('219', 'admin', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-04 21:16:15', '1');
INSERT INTO `be_login_log` VALUES ('220', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:37:48', '1');
INSERT INTO `be_login_log` VALUES ('221', 'admin（退出系统）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:41:34', '1');
INSERT INTO `be_login_log` VALUES ('222', 'admin（验证码错误）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:41:47', '2');
INSERT INTO `be_login_log` VALUES ('223', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:41:49', '1');
INSERT INTO `be_login_log` VALUES ('226', 'admin（忘记密码，邮箱发送成功）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:47:09', '1');
INSERT INTO `be_login_log` VALUES ('227', 'admin（忘记密码，邮箱发送失败）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:47:24', '0');
INSERT INTO `be_login_log` VALUES ('228', 'admin（密码错误）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:47:46', '2');
INSERT INTO `be_login_log` VALUES ('229', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:47:51', '1');
INSERT INTO `be_login_log` VALUES ('230', 'admin（退出系统）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:48:13', '1');
INSERT INTO `be_login_log` VALUES ('231', 'admin（忘记密码，邮箱发送成功）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:48:19', '1');
INSERT INTO `be_login_log` VALUES ('232', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 10:49:54', '1');
INSERT INTO `be_login_log` VALUES ('233', 'admin（退出系统）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 11:01:31', '1');
INSERT INTO `be_login_log` VALUES ('234', 'admin（忘记密码，邮箱发送成功）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 11:01:49', '1');
INSERT INTO `be_login_log` VALUES ('235', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 11:02:08', '1');
INSERT INTO `be_login_log` VALUES ('236', 'admin（退出系统）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 11:07:53', '1');
INSERT INTO `be_login_log` VALUES ('237', 'admin（退出系统）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 11:14:18', '1');
INSERT INTO `be_login_log` VALUES ('238', 'admin（忘记密码，邮箱发送成功）', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 11:14:29', '1');
INSERT INTO `be_login_log` VALUES ('239', 'admin', '171.88.106.32', '中国-四川-成都-电信', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 11:14:41', '1');
INSERT INTO `be_login_log` VALUES ('240', 'admin', '118.115.233.240', '中国-四川-成都-电信', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-03-05 18:37:47', '1');
INSERT INTO `be_login_log` VALUES ('241', 'admin（密码错误）', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 20:09:49', '2');
INSERT INTO `be_login_log` VALUES ('242', 'admin', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3742.400 QQBrowser/10.5.3866.400', '2020-03-05 20:09:56', '1');
INSERT INTO `be_login_log` VALUES ('243', 'admin', '117.139.132.137', '中国-四川-成都-移动', 'Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Mobile/15E148 Safari/604.1', '2020-03-05 21:00:24', '1');

-- -----------------------------
-- Table structure for `be_operate_log`
-- -----------------------------
DROP TABLE IF EXISTS `be_operate_log`;
CREATE TABLE `be_operate_log` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '操作日志id',
  `operator` varchar(55) NOT NULL COMMENT '操作用户',
  `operator_ip` varchar(15) NOT NULL COMMENT '操作者ip',
  `operate_method` varchar(100) NOT NULL COMMENT '操作方法',
  `operate_desc` varchar(155) NOT NULL COMMENT '操作简述',
  `operate_time` datetime NOT NULL COMMENT '操作时间',
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8;

-- -----------------------------
-- Records of `be_operate_log`
-- -----------------------------
INSERT INTO `be_operate_log` VALUES ('1', 'admin', '118.112.203.173', 'admin/addpost', '添加管理员：123123', '2020-01-14 18:20:47');
INSERT INTO `be_operate_log` VALUES ('2', 'admin', '171.91.80.24', 'admin/delete', 'admin删除了管理员：123123', '2020-02-06 16:10:08');
INSERT INTO `be_operate_log` VALUES ('3', 'admin', '171.91.80.24', 'admin/delete', 'admin删除了管理员：2312312', '2020-02-06 16:10:12');
INSERT INTO `be_operate_log` VALUES ('4', 'test', '171.91.80.24', 'admin/editpost', 'test修改了管理员（ID:36）：test', '2020-02-06 17:11:33');
INSERT INTO `be_operate_log` VALUES ('5', 'test', '171.91.80.24', 'admin/editpost', 'test修改了管理员（ID:36）：test', '2020-02-06 17:23:28');
INSERT INTO `be_operate_log` VALUES ('6', 'test', '171.91.80.24', 'admin/editpost', 'test修改了管理员（ID:36）：test', '2020-02-06 17:23:34');
INSERT INTO `be_operate_log` VALUES ('7', 'test', '171.91.80.24', 'admin/editpost', 'test修改了管理员（ID:1）：admin', '2020-02-06 17:25:44');
INSERT INTO `be_operate_log` VALUES ('8', 'admin', '171.91.80.24', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-02-09 10:25:28');
INSERT INTO `be_operate_log` VALUES ('9', 'admin', '171.91.80.24', 'admin/addpost', 'admin添加了管理员：11', '2020-02-09 10:58:40');
INSERT INTO `be_operate_log` VALUES ('10', 'admin', '171.91.80.24', 'admin/addpost', 'admin添加了管理员：123123', '2020-02-09 11:01:58');
INSERT INTO `be_operate_log` VALUES ('11', 'admin', '171.91.80.24', 'admin/delete', 'admin删除了管理员：123123', '2020-02-09 11:07:27');
INSERT INTO `be_operate_log` VALUES ('12', 'admin', '171.91.80.24', 'admin/editpost', 'admin修改了管理员（ID:39）：11', '2020-02-09 11:07:42');
INSERT INTO `be_operate_log` VALUES ('13', 'admin', '171.91.80.24', 'admin/editpost', 'admin修改了管理员（ID:39）：11', '2020-02-09 11:07:58');
INSERT INTO `be_operate_log` VALUES ('14', 'admin', '171.91.80.24', 'admin/delete', 'admin删除了管理员：11', '2020-02-09 11:13:37');
INSERT INTO `be_operate_log` VALUES ('15', 'admin', '222.215.26.243', 'admin/editpost', 'admin修改了管理员（ID:36）：test', '2020-02-16 13:20:14');
INSERT INTO `be_operate_log` VALUES ('16', 'test', '117.139.134.4', 'admin/editpost', 'test修改了管理员（ID:36）：test', '2020-02-23 23:46:57');
INSERT INTO `be_operate_log` VALUES ('19', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-02-29 11:08:09');
INSERT INTO `be_operate_log` VALUES ('20', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-02-29 11:09:00');
INSERT INTO `be_operate_log` VALUES ('21', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-02-29 11:09:16');
INSERT INTO `be_operate_log` VALUES ('22', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-02-29 11:10:01');
INSERT INTO `be_operate_log` VALUES ('23', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-02-29 11:10:18');
INSERT INTO `be_operate_log` VALUES ('24', 'admin', '117.139.133.12', 'admin/addpost', 'admin添加了管理员：liuchengfeng', '2020-03-01 14:37:03');
INSERT INTO `be_operate_log` VALUES ('25', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:38）：liuchengfeng', '2020-03-01 14:43:56');
INSERT INTO `be_operate_log` VALUES ('26', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:38）：liuchengfeng', '2020-03-01 14:44:20');
INSERT INTO `be_operate_log` VALUES ('27', 'admin', '117.139.133.12', 'admin/delete', 'admin删除了管理员：liuchengfeng', '2020-03-01 14:44:38');
INSERT INTO `be_operate_log` VALUES ('28', 'admin', '117.139.133.12', 'admin/addpost', 'admin添加了管理员：liuchengfeng', '2020-03-01 14:44:49');
INSERT INTO `be_operate_log` VALUES ('29', 'admin', '117.139.133.12', 'admin/delete', 'admin删除了管理员：liuchengfeng', '2020-03-01 14:45:16');
INSERT INTO `be_operate_log` VALUES ('30', 'admin', '117.139.133.12', 'admin/addpost', 'admin添加了管理员：留下谁', '2020-03-01 14:45:27');
INSERT INTO `be_operate_log` VALUES ('31', 'admin', '117.139.133.12', 'admin/delete', 'admin删除了管理员：留下谁', '2020-03-01 14:54:59');
INSERT INTO `be_operate_log` VALUES ('32', 'admin', '117.139.133.12', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-03-03 21:02:09');
INSERT INTO `be_operate_log` VALUES ('33', 'admin', '171.88.106.32', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-03-05 10:48:09');
INSERT INTO `be_operate_log` VALUES ('34', 'admin', '171.88.106.32', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-03-05 10:50:01');
INSERT INTO `be_operate_log` VALUES ('35', 'admin', '171.88.106.32', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-03-05 11:07:47');
INSERT INTO `be_operate_log` VALUES ('36', 'admin', '171.88.106.32', 'admin/editpost', 'admin修改了管理员（ID:1）：admin', '2020-03-05 11:14:46');
INSERT INTO `be_operate_log` VALUES ('37', 'admin', '117.139.132.137', 'admin/addpost', 'admin添加了管理员：sadasd', '2020-03-05 21:13:45');
INSERT INTO `be_operate_log` VALUES ('38', 'admin', '117.139.132.137', 'admin/addpost', 'admin添加了管理员：123', '2020-03-05 21:14:06');
INSERT INTO `be_operate_log` VALUES ('39', 'admin', '117.139.132.137', 'admin/addpost', 'admin添加了管理员：11231', '2020-03-05 21:17:20');

-- -----------------------------
-- Table structure for `be_reply`
-- -----------------------------
DROP TABLE IF EXISTS `be_reply`;
CREATE TABLE `be_reply` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uid` int(11) DEFAULT '0' COMMENT 'oath用户id',
  `aid` int(11) DEFAULT NULL COMMENT '文章id',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `mid` int(11) DEFAULT NULL COMMENT '回复id',
  `create_time` int(11) DEFAULT NULL,
  `reply_name` varchar(20) DEFAULT NULL COMMENT '回复人姓名',
  `uName` varchar(20) DEFAULT NULL COMMENT '被回复人姓名',
  `ip` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=87 DEFAULT CHARSET=gbk ROW_FORMAT=COMPACT;

-- -----------------------------
-- Records of `be_reply`
-- -----------------------------
INSERT INTO `be_reply` VALUES ('10', '0', '30', 'dsadada', '6', '1571739674', '刘海', '刘海', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('11', '1', '30', 'dsadsaas', '6', '1571739752', '柳乘风', '刘海', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('12', '0', '30', 'ccccccccccccc', '8', '1571740512', '刘海', '刘海', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('13', '1', '42', 'sad', '11', '1571758403', '柳乘风', '大哥', '222.209.32.22');
INSERT INTO `be_reply` VALUES ('20', '1', '', 'adasdsa', '11', '1571801811', '柳乘风', '大哥', '');
INSERT INTO `be_reply` VALUES ('21', '1', '', '不客气😂', '13', '1571819715', '柳乘风', '大哥', '');
INSERT INTO `be_reply` VALUES ('23', '0', '42', '2222222222222', '31', '1572012704', '刘海2', '刘海2', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('24', '0', '43', 'dsadsa', '52', '1572018790', '市金saasas', '市金saasas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('25', '0', '43', '21321321', '52', '1572018826', '市金saasas', '市金saasas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('26', '0', '43', '11111111111', '52', '1572018832', '市金saasas', '市金saasas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('27', '0', '43', 'dsadsa', '52', '1572018855', '市金saasas', '市金saasas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('28', '0', '43', 'cvsaaa', '50', '1572018868', '市金saasas', '执法asdasdas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('29', '0', '43', 'cccc', '51', '1572018909', '市金saasas', '市金saasas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('30', '0', '43', 'ccccccccccccccccaaa', '51', '1572018914', '市金saasas', '市金saasas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('31', '0', '41', 'cxzcxzcz', '63', '1572021870', '市金saasas', '市金saasas', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('32', '0', '41', '啊啊啊', '66', '1572022321', '执法ssss', '执法ssss', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('33', '0', '41', '反反复复烦烦烦烦烦烦烦烦烦', '66', '1572022412', '执法ssss', '执法ssss', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('35', '0', '41', 'vvvvvvvvv', '66', '1572023523', '市金saasas', '执法ssss', '222.209.78.119');
INSERT INTO `be_reply` VALUES ('39', '0', '29', '123', '75', '1575125597', '邵轩', '执法ssss', '117.136.62.19');
INSERT INTO `be_reply` VALUES ('40', '0', '42', '123', '77', '1575125624', '邵轩', '邵轩', '117.136.62.19');
INSERT INTO `be_reply` VALUES ('41', '0', '42', '12312312', '77', '1575125636', '邵轩', '邵轩', '117.136.62.19');
INSERT INTO `be_reply` VALUES ('42', '0', '42', '12312312sss', '78', '1575126565', 'aaa', 'aaa', '117.136.62.19');
INSERT INTO `be_reply` VALUES ('45', '0', '42', '🤣🤣🤣🤣🤣', '77', '1575549044', '执法ssss', '邵轩', '110.191.203.42');
INSERT INTO `be_reply` VALUES ('47', '0', '46', 'w(ﾟДﾟ)w', '82', '1576811343', '致命毒药', '致命毒药', '171.213.40.153');
INSERT INTO `be_reply` VALUES ('48', '0', '46', '11点10分🤢', '82', '1576811422', '苏酒', '致命毒药', '171.213.40.153');
INSERT INTO `be_reply` VALUES ('49', '1', '', '爱了~🤞🤞🤞', '84', '1577242609', '柳乘风', '苏酒', '');
INSERT INTO `be_reply` VALUES ('51', '1', '', '一生要走多远的路程🎶经过多少年🎶才能走到终点🎶', '83', '1577242807', '柳乘风', '苏酒', '');
INSERT INTO `be_reply` VALUES ('57', '1', '', '11', '123', '1581828754', '柳乘风', 'admin', '');
INSERT INTO `be_reply` VALUES ('58', '1', '', '咋滴了，加我QQ吧：814029073', '106', '1581828854', '柳乘风', '沐风', '');
INSERT INTO `be_reply` VALUES ('59', '0', '30', 'dddddddd', '163', '1581832504', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('60', '0', '30', 'dddddddd', '163', '1581832505', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('61', '0', '30', '32132132131', '163', '1581832848', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('62', '0', '30', '的撒打算大飒飒大师大', '163', '1581832854', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('63', '0', '30', '打算打算打算', '163', '1581832860', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('64', '0', '30', '2131231232132132131', '162', '1581832866', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('65', '0', '30', '法师法师法发顺丰', '162', '1581832872', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('66', '0', '41', '擦擦擦', '176', '1581833757', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('67', '0', '41', '擦擦擦', '176', '1581833757', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('68', '0', '41', 'vvvvvvvva', '179', '1581833997', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('69', '0', '41', '啊水水水水水水水水水水水水世道', '179', '1581834001', '12321', '12321', '222.215.26.243');
INSERT INTO `be_reply` VALUES ('73', '1', '', '好的，已添加~', '183', '1581837455', '柳乘风', 'camellia', '');
INSERT INTO `be_reply` VALUES ('82', '0', '62', '<p>111111</p>', '210', '1582437704', 'Sonder', 'Sonder', '117.139.134.4');
INSERT INTO `be_reply` VALUES ('83', '0', '62', '<p>111111</p>', '210', '1582437721', 'Sonder', 'Sonder', '117.139.134.4');
INSERT INTO `be_reply` VALUES ('84', '0', '62', '<p>222222222</p>', '210', '1582437727', 'Sonder', 'Sonder', '117.139.134.4');
INSERT INTO `be_reply` VALUES ('85', '1', '', '0', '211', '1582449221', '柳乘风', 'Sonder', '');

-- -----------------------------
-- Table structure for `be_timeline`
-- -----------------------------
DROP TABLE IF EXISTS `be_timeline`;
CREATE TABLE `be_timeline` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `create_time` int(11) NOT NULL,
  `url` varchar(100) DEFAULT NULL,
  `cid` int(1) unsigned NOT NULL DEFAULT '60' COMMENT '固定时间轴栏目ID',
  `status` tinyint(1) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;

-- -----------------------------
-- Records of `be_timeline`
-- -----------------------------
INSERT INTO `be_timeline` VALUES ('1', '😎 个人吐槽线正式开启', '<p>愿你在尘世获得幸福 ，我只愿面朝大海，春暖花开。</p>', '1583386040', '', '60', '1');

-- -----------------------------
-- Table structure for `count_test_user`
-- -----------------------------
DROP TABLE IF EXISTS `count_test_user`;
CREATE TABLE `count_test_user` (
  `id` int(10) unsigned zerofill NOT NULL AUTO_INCREMENT,
  `login_time` int(11) DEFAULT NULL,
  `ip` varchar(15) DEFAULT NULL,
  `uid` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

-- -----------------------------
-- Records of `count_test_user`
-- -----------------------------
INSERT INTO `count_test_user` VALUES ('1', '1573798129', '125.71.177.150', '');
INSERT INTO `count_test_user` VALUES ('2', '1578384246', '218.89.196.44', '');
INSERT INTO `count_test_user` VALUES ('3', '1578449576', '218.89.196.44', '');
INSERT INTO `count_test_user` VALUES ('4', '1578537254', '171.88.106.56', '');
INSERT INTO `count_test_user` VALUES ('5', '1580977031', '171.91.80.24', '');
INSERT INTO `count_test_user` VALUES ('6', '1580978280', '113.220.21.223', '');
INSERT INTO `count_test_user` VALUES ('7', '1581054236', '171.91.80.24', '');
INSERT INTO `count_test_user` VALUES ('8', '1581830516', '222.215.26.243', '1');
INSERT INTO `count_test_user` VALUES ('9', '1581834869', '112.227.127.213', '');
INSERT INTO `count_test_user` VALUES ('10', '1582298965', '117.139.134.4', '');
INSERT INTO `count_test_user` VALUES ('11', '1582472326', '117.139.134.4', '');
INSERT INTO `count_test_user` VALUES ('12', '1583125823', '171.88.106.32', '');
INSERT INTO `count_test_user` VALUES ('13', '1583153943', '117.139.133.12', '');
